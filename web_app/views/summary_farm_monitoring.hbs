

<div class="container-fluid">
	<div class="mx-3">
		{{#each data.calendars}}
		<div class="card shadow border-left-warning py-2 my-3">
            <div class="card-body">
                <div class="row align-items-center no-gutters">
                    <div class="col mr-2">
                        <div class="text-uppercase text-warning h4 font-weight-bold text-xl" style="margin-top: -40px;"><span>{{this.farm_name}}</span></div>
                        <div class="text-dark font-weight-bold h5 mb-0"> 
                        	{{this.seed_name}} {{this.seed_rate}} kg/ha
                        </div>
                        <div class="text-dark font-weight-bold mb-0">
                        	{{this.method}}
                        </div>
                        <div class="text-dark font-weight-bold mb-0">
                        	Days till harvest: {{this.days_till_harvest}}
                        </div>
                        <div class="text-dark font-weight-bold mb-0 d-flex flex-column">
                        	<div id="{{this.farm_name}}_ndvi">NDVI: -</div>
                        	<small id="{{this.farm_name}}_ndvi_date">Last updated: -</small>
                        </div>
                        <div class="text-dark font-weight-bold mb-0 d-flex flex-column">
                        	<div id="{{this.farm_name}}_soil_moisture">Soil Moisture: -</div>
                        	<small id="{{this.farm_name}}_soil_moisture_date">Last updated: -</small>
                        </div>
                        <table class="table">
                        	<tr>
                        		<th>Application Date</th>
                        		<th>Fertilizer</th>
                        		<th>Description</th>
                        		<th class="text-right">Amount</th>
                        		<th>WO Generated?</th>
                        	</tr>
                        	{{#each this.nutrients}}
                        	<tr>
                        		<td>{{this.target_application_date}}</td>
                        		<td>{{this.fertilizer_name}}</td>
                        		<td>{{this.description}}</td>
                        		<td class="text-right">{{this.amount}}</td>
                        		<td>
                        			{{#if this.isCreated}}
                        			Yes
                        			{{else}}
                        			No
                        			{{/if}}
                        		</td>
                        	</tr>
                        	{{/each}}
                        </table>
                    </div>
                    <!-- <div class="col-auto">
                        <i class="fa fa-mobile fa-2x text-gray-300" style="font-size:xx-large; margin-right: 10px"></i>
                    </div> -->
                </div>
            </div>
        </div>
        {{/each}}
	</div>
</div>

<script type="text/javascript">
	function formatDate(date, format) {
		var year,month,day;
		const monthNames = ["", "Jan", "Feb", "Mar", "Apr", "May", "Jun",
		  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
		];
		year = date.getFullYear();
		month = date.getMonth()+1;
		day = date.getDate();

		if (format === 'MM/DD/YYYY') {
			if (month < 10)
				month = '0'+month;
			if (day < 10)
				day = '0'+day;
			date = month+'/'+day+'/'+year;
		}
		else if (format === 'YYYY-MM-DD') {
			if (month < 10)
				month = '0'+month;
			if (day < 10)
				day = '0'+day;
			date = year+'-'+month+'-'+day;
		}
		else if (format === 'mm DD, YYYY') {
			date = monthNames[month]+' '+day+', '+year;
		}
		else if (format === 'HH:m') {
			var hour = parseInt(date.getHours());
			var lbl;
			if (hour < 12)
				lbl = 'AM';
			else {
				lbl = 'PM';
			}

			if (hour == 0)
				hour = 12;
			else if (hour > 12)
				hour -= 12;

			date = hour+':'+(date.getMinutes() < 10 ? '0' : '') + date.getMinutes()+lbl;
		}
		else if (format == 'HH') {
			var hour = parseInt(date.getHours());
			var lbl;
			if (hour < 12)
				lbl = 'AM';
			else {
				lbl = 'PM';
			}

			if (hour == 0)
				hour = 12;
			else if (hour > 12)
				hour -= 12;

			date = hour+':'+'00'+lbl;
		}
		else if (format === 'YYYY-MM-DD : HH:m') {
			if (month < 10)
				month = '0'+month;
			if (day < 10)
				day = '0'+day;

			var hour = parseInt(date.getHours());
			var lbl;
			if (hour < 12)
				lbl = 'AM';
			else {
				lbl = 'PM';
			}

			if (hour == 0)
				hour = 12;
			else if (hour > 12)
				hour -= 12;

			date = year+'-'+month+'-'+day+' - '+hour+':'+(date.getMinutes() < 10 ? '0' : '') + date.getMinutes()+lbl;
		}

		return date;
	}

	jQuery.ajaxSetup({async: false });
	var view = 'summary monitoring';
	var obj = {{{JSON_data.farms}}};

	var n_date = new Date();
	n_date.setDate(n_date.getDate() - 30);
	var n = new Date();

	for (var i = 0; i < obj.length; i++) {
		var query = { polygon_id: obj[i].id, start: n_date, end: n };

		$.get('/agroapi/ndvi/imagery', query, function(imagery) {
			if (imagery.length != 0) {
				$.get(imagery[0].stats.ndvi, {}, function(stats) {
					$(`[id='${obj[i].name}_ndvi']`).html('NDVI: '+Math.round(stats.max * 100) / 100);
					$(`[id='${obj[i].name}_ndvi_date']`).html('Last updated: '+formatDate(new Date(imagery[0].dt), 'mm DD, YYYY'));
				});
			}
			else {

			}
		});

		$.get('/agroapi/soil/current', { polyid: obj[i].id }, function(soil) {
			$(`[id='${obj[i].name}_soil_moisture']`).html(soil.moisture == 'Soil Moisture: N/A' ? 'N/A' : 'Soil Moisture: '+Math.round(soil.moisture * 100) / 100 + '%');
			$(`[id='${obj[i].name}_soil_moisture_date']`).html('Last updated: '+formatDate(new Date(soil.dt), 'mm DD, YYYY'));
		});
	}
</script>