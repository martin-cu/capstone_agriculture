<style>
    table td, th {
        color:#332C1F;
    } 

    label {
        color: #332C1F;
    }
</style>

<div class="container-fluid">
    <div class="d-sm-flex justify-content-between align-items-center mb-4">
        <h3 class="text-dark mb-0">Farms &gt; Work Order</h3><a class="btn btn-primary disabled btn-sm d-none d-sm-inline-block" role="button" style="background: rgba(78,115,223,0);color: #332c1f;border-color: rgba(51,44,31,0);">&nbsp;<br>&nbsp;<i class="far fa-clock" style="margin-right: 5px;"></i>October 1, 2021 10:32am<br><br></a>
    </div>

    {{#if writeable}}
    <div role="tablist" id="accordion-1" style="margin-bottom: 20px;">
        <div class="card shadow mb-4" style="max-width: 1150px; margin: 0px auto">
            <div class="card-header" role="tab" style="background: #939C1F;padding: 16px 20px;height: auto;">
                <h5 class="mb-0"><a data-toggle="collapse" aria-expanded="false" aria-controls="accordion-1 .item-1" href="#accordion-1 .item-1" style="font-size: 16px;color: rgb(255,255,255);font-weight: bold;">Create Work Order</a></h5>
            </div>
            <div class="collapse item-1" role="tabpanel" data-parent="#accordion-1">
                <div class="card-body detailed_cont">
                    <form class="register-form" id="work_order_form" method="post" action="/create_work_order">
                        <fieldset>
                            
                            <div class="form-group" style="margin-left: 5px;">
                                <div class="form-row">
                                    <div class="col-6 col-sm-6 col-md-6"><label>Farm</label>
                                        <div id="lp-name-wrapper"></div>
                                        <select class="form-select" id="farm_id" name="farm_id">
                                        </select>
                                    </div>

                                    <div class="col-6 col-sm-6 col-md-6"><label>Crop Calendar</label>
                                        <div id="lp-name-wrapper"></div>
                                        <select class="form-select" id="crop_calendar_id" name="crop_calendar_id">
                                        </select>
                                    </div>

                                </div>
                            </div>
                            
                            <div class="form-group" style="margin-left: 5px;">
                                <div class="form-row">
                                    <div class="col-6 col-sm-6 col-md-6"><label>Type</label>
                                        <div id="lp-lastname-wrapper"></div>
                                        <!-- <select class="form-select" id="wo_type" name="wo_type">
                                           
                                            <option value="Pesticide Application">Pesticide Application</option>
                                            <option value="Fertilizer Application">Fertilizer Application</option>
                                            <option value="Water Fields">Water Fields</option>
                                        </select> -->
                                         <input type="text" required class="form-control" id="wo_type" name="wo_type" value="">
                                    </div>
                                    <div class="col-6 col-sm-6 col-md-6">
                                        <div id="lp-name-wrapper-1">
                                            <label>Description</label>
                                            <input class="form-control" type="text" id="lp-name-1" placeholder="Short description on the work order">
                                        </div>
                                    </div>
                                    <div class="col-6 col-sm-6 col-md-6">
                                        <div id="lp-lastname-wrapper-1"></div>
                                    </div>
                                </div>
                            </div>
                                
                                <!-- <div class="col-12 col-sm-6 col-md-12">
                                    <div id="lp-check1-wrapper">
                                        <div class="form-check"><input class="form-check-input" type="checkbox" id="lp-check1"><label class="form-check-label checboxtext" for="lp-check1" style="color: rgb(133,135,150);">Harvested</label></div>
                                    </div>
                                </div>
                                <div class="col-6 col-sm-6 col-md-6">
                                    <div id="lp-name-wrapper-2"><label class="d-block">Rice Yield</label><input class="form-control d-inline-flex" type="number" style="width: 300px;"><label class="d-inline-flex" style="margin-left: 10px;">sacks</label></div>
                                </div> -->
                           
                            <div class="form-group" style="margin-left: 5px;">
                                <div class="form-row">
                                    <div class="col-6 col-sm-6 col-md-6">
                                        <div id="lp-name-wrapper-3"><label>Start Date</label>
                                            <input type="date" class="form-control" id="start_date" name="start_date" aria-describedby="emailHelp" placeholder="" required>
                                        </div>
                                    </div>
                                    <div class="col-6 col-sm-6 col-md-6">
                                        <div id="lp-lastname-wrapper-2"></div><label>Due Date</label><input type="date" class="form-control" id="due_date" name="due_date" aria-describedby="emailHelp" placeholder="" required>
                                    </div>
                                </div>
                            </div>
              
                        <div class="form-group" style="margin-left: 5px;">
                            <div class="form-row">
                                <div class="col-12 col-sm-6 col-md-12">
                                    <label>Resources</label>
                                    <div id="lp-mail-wrapper" style="max-width: 500px;">
                                        <div class="d-flex flex-column" id="resource_cont">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="margin-left: 5px;">
                            <div class="form-row">

                                <div class="col-12 col-sm-6 col-md-12" style="margin-top: -20px;">
                                        <div id="customfield1-wrapper"><label>Notes</label>
                                            <textarea type="text" class="form-control" id="notes" name="notes" aria-describedby="emailHelp" placeholder="" rows="3" style="resize: none;"></textarea>
                                        </div>
                                </div>
                            </div>
                        </div>

                            {{!-- <div class="col-12 col-sm-12 col-md-12 mt-3"><button class="btn btn-primary float-right shadow" type="submit" style="border-radius: 20px;padding: 5px 18px;background: #EDD172;border-style: none;color: rgb(51,44,31);">Create Work Order</button></div> --}}

                        </fieldset>
                    </form>

                    <!-- Circles which indicates the steps of the form: -->
                    <div style="text-align:center;padding-top:40px;padding-bottom:10px">
                        {{!-- <span class="step"></span>
                        <span class="step"></span> --}}
                     </div>

                    <div class="modal-footer">
                    <div class="modal_footer_content" id="_step1">
                        <button type="button" class="btn round btn-secondary" onclick='window.location="/farms"'>Cancel</button>
                        <button class="btn btn-primary" type="submit" form="work_order_form">Create Work Order</button>
                    </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
    {{/if}}
    
    <div class="card shadow mb-5" style="max-width: 1150px; margin: 0px auto">
        <div class="card-header py-3" style="background: #939C1F;padding: 16px 20px;height: auto;">
            <p class="m-0 font-weight-bold" style="color: rgb(255,255,255);">Work Order Records</p>
        </div>
         <div class="card-body">
                            <div class="row">
                                    <div class="col-12">
                                        <div style="width: auto;">
                                            <table class="table table-striped table-bordered tablesorter" id="ipi-table" style="table-layout: fixed; width: 100%">
                                                <thead class="thead-dark">
                                                    <tr style="background: #332C1F;">
                                                        <th style="">wo id</th>
                                                        <th style="">FARM</th>
                                                        <th style="">Type</th>
                                                        <th style="">CROP PLAN</th>
                                                        <th style="">Date Due</th>
                                                        <th style="">notes</th>
                                                        <th style="">Status</th>
                                                    </tr>
                                                </thead>
                                                <tbody aria-live="polite" aria-relevant="all">
                                                 {{#each wo_list}}
                                                 
                                                   <tr role="row">
                                                        <td>WO-{{this.work_order_id}}</td>
                                                        <td>{{this.farm_name}}</td>
                                                        <td>{{this.type}}</td>
                                                        <td>{{this.crop_plan}}</td>
                                                        <td>{{this.date_due}}</td>
                                                        <td style="word-wrap:break-word;">{{this.notes}}</td>
                                                        <td class="{{this.status}}"> {{this.status}} 
                                                            <span>
                                                            <div class="dropdown no-arrow" style="display:inline-block; float: right">
                                                                    <button id="more" class="btn btn-primary btn-sm dropdown-toggle dropdown no-arrow" aria-expanded="false" data-bs-toggle="dropdown" type="button">
                                                                        <i class="fa fa-ellipsis-h d-lg-flex justify-content-lg-center"></i>
                                                                    </button>
                                                                    <div class="dropdown-menu notSidebar shadow dropdown-menu-end animated--fade-in">
                                                                        <a class="dropdown-item notSidebar" href="/farms/work_order&id={{this.work_order_id}}">View Details</a>
                                                                        {{!-- <a class="dropdown-item notSidebar" href="#">&nbsp;Update</a>
                                                                        <div class="dropdown-divider"></div>
                                                                        <a class="dropdown-item notSidebar" href="#">&nbsp;Delete</a> --}}
                                                                    </div>
                                                                </div>
                                                            </span> 
                                                        </td>
                                                    </tr>
                                                    {{/each}}
                                                </tbody>
                                            </table>
                                        </div>
                                               {{!-- <nav class="float-right" style="margin-right: 10px;">
                                                        <ul class="pagination">
                                                            <li class="page-item"><a class="page-link" href="#" aria-label="Previous"><span aria-hidden="true">«</span></a></li>
                                                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                                                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                                                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                                                            <li class="page-item"><a class="page-link" href="#">4</a></li>
                                                            <li class="page-item"><a class="page-link" href="#">5</a></li>
                                                            <li class="page-item"><a class="page-link" href="#" aria-label="Next"><span aria-hidden="true">»</span></a></li>
                                                        </ul>
                                                    </nav>        --}}
                                    </div>

                                </div>
                        </div>
    </div>
</div>

<!-- Create WO JS -->
<script type="text/javascript">
    var view = 'farms';
    function changeCropCalendarVals(farm_id) {
        $('#crop_calendar_id').empty();
        $.get('/get_crop_plans', { status: ['Active', 'In-Progress'], where: { key: 'ft.farm_id', val: farm_id } }, function(plans) {
            plans = plans.filter(ele => ele.crop_plan != null || ele.crop_plan != undefined);
            console.log(plans);
            for (var i = 0; i < plans.length; i++) {
                $('#crop_calendar_id').append("<option value='"+plans[i].calendar_id+"'>"+plans[i].crop_plan+"</option>");
            }
        });
    }

    function createDOM(obj) {
        var ele;

        ele = document.createElement(obj.type);
        ele.setAttribute('class', obj.class);
        ele.setAttribute('style', obj.style);
        ele.innerHTML = obj.html;

        for (prop in obj.attr) {
            if (Object.prototype.hasOwnProperty.call(obj.attr, prop)) {
                ele.setAttribute(prop, obj.attr[prop]);
            }
        }

        return ele;
    }

    function appendResourceOpts(target, type, farm_id) {
        target = $('#resource_cont');

        target.empty();
        if (type == 'Fertilizer' || type == 'Pesticide') {
            var div, name, id, qty_cont, qty, lbl;
            var key, id_key;
            var name_attr = {
                type: 'text',
                name: type,
                value: '',
                readonly: true
            };
            var id_attr = {
                type: 'text',
                name: type+'_id',
                value: '',
                readonly: true
            }
            var qty_attr = {
                type: 'number',
                name: type+'_qty',
                value: '0',
                min: '0',
                max: ''
            };

            $.get('/getAll_materials', { type: type, filter: farm_id }, function(materials) {
                if (type == 'Fertilizer') {
                    key = 'fertilizer_name';
                    id_key = 'fertilizer_id';
                }
                else if (type == 'Pesticide') {
                    key = 'pesticide_name';
                    id_key = 'pesticide_id';
                }
                else if (type == '') {

                }

                for (var i = 0; i < materials.length; i++) {
                    name_attr.value = materials[i][key];
                    id_attr.value = materials[i][id_key];
                    qty_attr.max = materials[i].current_amount;

                    div = createDOM({ type: 'div', class: 'd-flex', style: '', html: '' });
                    id = createDOM({ type: 'input', class: 'hide', style: '', html: '', attr: id_attr });
                    name = createDOM({ type: 'input', class: 'form-control', style: '', html: '', attr: name_attr });

                    qty_cont = createDOM({ type: 'div', class: 'd-flex flex-column', style: '', html: '' });

                    qty = createDOM({ type: 'input', class: 'form-control mx-2', style: 'width: 100px;', html: '', attr: qty_attr });
                    lbl = createDOM({ type: 'label', class: '', style: 'font-size: 12px; text-align:center;', html: 'In-stock: '+materials[i].current_amount+'' });

                    qty_cont.appendChild(qty);
                    qty_cont.appendChild(lbl);

                    div.appendChild(name);
                    div.appendChild(id);
                    div.appendChild(qty_cont);

                    target.append(div);
                }
            });
        }
            
    }

    function changeResourceOpts(type) {
        var val;
        if (type == 'Pesticide Application') {
            val = 'Pesticide';
        }
        else if (type == 'Fertilizer Application') {
            val = 'Fertilizer';
        }
        else if (type == 'Harvest') {
            val = '';
        }
        return val;
    }

    function addDays(d1, days) {
        d1.setDate(d1.getDate() + days);

        return d1;
    }

    function adjustDueDate() {
        var val = new Date($('#start_date').val());
        var type = $('#wo_type').val();
        var add_days;
        if (type == 'Pesticide Application') {
            add_days = 7;
        }
        else if (type == 'Fertilizer Application') {
            add_days = 7;
        }
        else {
            add_days = 1;
        }

        val = addDays(val, add_days);
        $('#due_date').val(formatDate(val, 'YYYY-MM-DD'));
    }

    $(document).ready(function() {

        // function autocomplete(inp, arr) {
        //   /*the autocomplete function takes two arguments,
        //   the text field element and an array of possible autocompleted values:*/
        //   var currentFocus;
        //   /*execute a function when someone writes in the text field:*/
        //   inp.addEventListener("input", function(e) {
        //       var a, b, i, val = this.value;
        //       /*close any already open lists of autocompleted values*/
        //       closeAllLists();
        //       if (!val) { return false;}
        //       currentFocus = -1;
        //       /*create a DIV element that will contain the items (values):*/
        //       a = document.createElement("DIV");
        //       a.setAttribute("id", this.id + "autocomplete-list");
        //       a.setAttribute("class", "autocomplete-items");
        //       /*append the DIV element as a child of the autocomplete container:*/
        //       this.parentNode.appendChild(a);
        //       /*for each item in the array...*/
        //       for (i = 0; i < arr.length; i++) {
        //         /*check if the item starts with the same letters as the text field value:*/
        //         if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
        //           /*create a DIV element for each matching element:*/
        //           b = document.createElement("DIV");
        //           /*make the matching letters bold:*/
        //           b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
        //           b.innerHTML += arr[i].substr(val.length);
        //           /*insert a input field that will hold the current array item's value:*/
        //           b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
        //           /*execute a function when someone clicks on the item value (DIV element):*/
        //               b.addEventListener("click", function(e) {
        //               /*insert the value for the autocomplete text field:*/
        //               inp.value = this.getElementsByTagName("input")[0].value;
        //               /*close the list of autocompleted values,
        //               (or any other open lists of autocompleted values:*/
        //               closeAllLists();
        //           });
        //           a.appendChild(b);
        //         }
        //       }
        //   });
        //   /*execute a function presses a key on the keyboard:*/
        //   inp.addEventListener("keydown", function(e) {
        //       var x = document.getElementById(this.id + "autocomplete-list");
        //       if (x) x = x.getElementsByTagName("div");
        //       if (e.keyCode == 40) {
        //         /*If the arrow DOWN key is pressed,
        //         increase the currentFocus variable:*/
        //         currentFocus++;
        //         /*and and make the current item more visible:*/
        //         addActive(x);
        //       } else if (e.keyCode == 38) { //up
        //         /*If the arrow UP key is pressed,
        //         decrease the currentFocus variable:*/
        //         currentFocus--;
        //         /*and and make the current item more visible:*/
        //         addActive(x);
        //       } else if (e.keyCode == 13) {
        //         /*If the ENTER key is pressed, prevent the form from being submitted,*/
        //         e.preventDefault();
        //         if (currentFocus > -1) {
        //           /*and simulate a click on the "active" item:*/
        //           if (x) x[currentFocus].click();
        //         }
        //       }
        //   });
        //   function addActive(x) {
        //     /*a function to classify an item as "active":*/
        //     if (!x) return false;
        //     /*start by removing the "active" class on all items:*/
        //     removeActive(x);
        //     if (currentFocus >= x.length) currentFocus = 0;
        //     if (currentFocus < 0) currentFocus = (x.length - 1);
        //     /*add class "autocomplete-active":*/
        //     x[currentFocus].classList.add("autocomplete-active");
        //   }
        //   function removeActive(x) {
        //     /*a function to remove the "active" class from all autocomplete items:*/
        //     for (var i = 0; i < x.length; i++) {
        //       x[i].classList.remove("autocomplete-active");
        //     }
        //   }
        //   function closeAllLists(elmnt) {
        //     /*close all autocomplete lists in the document,
        //     except the one passed as an argument:*/
        //     var x = document.getElementsByClassName("autocomplete-items");
        //     for (var i = 0; i < x.length; i++) {
        //       if (elmnt != x[i] && elmnt != inp) {
        //       x[i].parentNode.removeChild(x[i]);
        //     }
        //   }
        // }
        // /*execute a function when someone clicks in the document:*/
        // document.addEventListener("click", function (e) {
        //     //$('#wo_type').trigger("change");
        //     closeAllLists(e.target);
        // });
        // }

        // $('#work_order_form').on('submit', function(e) {
        //  e.preventDefault();

        //  var form_data = $('#work_order_form').serializeJSON();

        //  console.log(form_data);

        //  // $.post('/create_work_order', form_data, function(crop_plan) {

        //  // });
        // })

        $('#start_date').on('change', function() {
            adjustDueDate();
        });

        $('#wo_type').on('change', function() {
            adjustDueDate();
        });

        $('#wo_type').keyup(function() {
            var arr = ['Pesticide Application', 'Fertilizer Application', 'Water Fields'];
            //autocomplete(document.getElementById("wo_type"), arr);
            $('#wo_type').trigger("change");
        });

        $.get('/get_farm_list', { where: "farm_id in (select farm_id from crop_calendar_table where status = 'In-Progress' or status = 'Active') " }, function(result) {

            if (result.length != 0) {
                farm_list = result;
                for (var i = 0; i < result.length; i++) {
                    $('#farm_id').append("<option value='"+result[i].farm_id+"'>"+result[i].farm_name+"</option>");
                }

                changeCropCalendarVals(result[0].farm_id);

                appendResourceOpts(null, 'Pesticide', result[0].farm_id);
            }
            else {
                //Show no farm record error
            }
        });

        $('#farm_id').on('change', function(e) {
            var type = changeResourceOpts($('#wo_type').val());
            var farm_id = $(this).val();

            changeCropCalendarVals(farm_id);

            appendResourceOpts(null, type, farm_id);
        });

        $('#wo_type').on('change', function(e) {
            var type = changeResourceOpts($(this).val());
            var farm_id = $('#farm_id').find(":selected").val();

            appendResourceOpts(null, type, farm_id);
        });

    });
</script>

<!-- <script type="text/javascript">
    jQuery.ajaxSetup({async: false});

    function createDOM(obj) {
        var ele;

        ele = document.createElement(obj.type);
        ele.setAttribute('class', obj.class);
        ele.setAttribute('style', obj.style);
        ele.innerHTML = obj.html;

        for (prop in obj.attr) {
            if (Object.prototype.hasOwnProperty.call(obj.attr, prop)) {
                if (prop == 'data_href') {
                    new_prop = 'data-href';
                }
                else {
                    new_prop = prop;
                }
                ele.setAttribute(new_prop, obj.attr[prop]);
            }
        }

        return ele;
    }

    function appendWorkOrder(data) {
        var cont = $('#work_order_table');
        var keys = ['type', 'farm_name', 'status', 'date_due', 'work_order_id', 'wo_notes'];
        var attr = {
            data_href: ''
        };
        var props;
        console.log(data);
        tr = createDOM({ type: 'tr', class: '', style: '', html: '' });

        for (var i = 0; i < keys.length; i++) {

            if (keys[i] != 'work_order_id') {
                props = { type: 'td', class: '', style: '', html: data[keys[i]], attr: null };
            }
            else {
                attr['data_href'] = '/farms/work_order&id='+data[keys[i]];
                props = { type: 'td', class: 'link', style: '', html: data[keys[i]], attr: attr }
            }

            tr.appendChild(createDOM(props));
        }

        cont.append(tr);
    }

    function appendCards(data) {
        var cont = $('#calendar_card_cont');
        var card, card_body, row, col2, col3, col7, h6, h4, p1, p2, i, calendar_id;
        card = createDOM({ type: 'div', class: 'card', style: 'margin-bottom: 10px;margin-top: 20px;', html: '' });
        card_body = createDOM({ type: 'div', class: 'card-body calendar_card', style: '', html: '' });
        row = createDOM({ type: 'div', class: 'row', style: '', html: '' });
        col2 = createDOM({ type: 'div', class: 'col-xxl-2', style: '', html: '' });
        h6 = createDOM({ type: 'h6', class: 'd-xxl-flex justify-content-xxl-center align-items-xxl-center mb-2', style: 'text-align: center;color: #332c1f;font-weight: bold;font-size: 20px;', html: data.start_month });
        h4 = createDOM({ type: 'h4', class: 'd-xxl-flex justify-content-xxl-center align-items-xxl-center', style: 'text-align: center;color: #332c1f;font-weight: bold;margin-bottom: 0PX;font-size: 30px;', html: data.start_day });

        col2.appendChild(h6);
        col2.appendChild(h4);

        col7 = createDOM({ type: 'div', class: 'col-xxl-7', style: '', html: '' });
        h4 = createDOM({ type: 'h4', class: 'crop_plan', style: 'font-size: 20PX;', html: data.crop_plan });
        h6 = createDOM({ type: 'h6', class: 'text-muted mb-2 farm_name', style: '', html: data.farm_name });
        p1 = createDOM({ type: 'p', class: '', style: 'margin-bottom: 0px;', html: 'Stage: '+data.current_stage });
        p2 = createDOM({ type: 'p', class: '', style: '', html: 'Upcoming Activities: '+data.upcoming_activity });

        col7.appendChild(h4);
        col7.appendChild(h6);
        col7.appendChild(p1);
        col7.appendChild(p2);

        col3 = createDOM({ type: 'div', class: 'col-xxl-3', style: '', html: '' });
        i = createDOM({ type: 'i', class: 'd-xxl-flex justify-content-xxl-center align-items-xxl-center '+data.stage_icon, style: 'font-size: 80PX; color: RGB(102,117,40)', html: '' });

        col3.appendChild(i);

        row.appendChild(col2);
        row.appendChild(col7);
        row.appendChild(col3);

        card_body.appendChild(row);
        card.appendChild(card_body);
        cont.append(card);
    }

    function getCurrentStage(date, last_order) {
        var obj = { };
        var icons = ['fas fa-seedling'];
        if (date == null || date == '') {
            obj['stage'] = last_order;
            obj['icon'] = icons[0];
        }
        else {
            var now = new Date();
            var diff = now.getDate() - date.getDate();

            if (diff < 90) {
                obj['stage'] = 'Vegetation';
                obj['icon'] = icons[0];
            }
            else if (diff >= 90 && diff < 180) {
                obj['stage'] = 'Harvesting';
                obj['icon'] = icons[0];
            }
        }

        return obj;
    }

    function formatDate(date, format) {
        var year,month,day;
        const monthNames = ["", "Jan", "Feb", "Mar", "Apr", "May", "Jun",
          "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];
        year = date.getFullYear();
        month = date.getMonth()+1;
        day = date.getDate();

        if (format === 'MM/DD/YYYY') {
            if (month < 10)
                month = '0'+month;
            if (day < 10)
                day = '0'+day;
            date = month+'/'+day+'/'+year;
        }
        else if (format === 'YYYY-MM-DD') {
            if (month < 10)
                month = '0'+month;
            if (day < 10)
                day = '0'+day;
            date = year+'-'+month+'-'+day;
        }
        else if (format === 'mm DD, YYYY') {
            date = monthNames[month]+' '+day+', '+year;
        }

        return date;
    }

    function prepareCalendarData(plan, work_order) {
        var obj = {};

        var stage = getCurrentStage(new Date(plan.sowing_date), work_order[0].type);
        obj['farm_name'] = plan.farm_name;
        obj['current_stage'] = stage.stage;
        obj['stage_icon'] = stage.icon;
        obj['crop_plan'] = plan.crop_plan;

        if (work_order.length != 0) {
            var date = new Date(work_order[0].date_start);
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
          "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            var month = months[date.getMonth()];
            var day = date.getDate();

            obj['start_date'] = work_order[0].date_start;
            obj['start_month'] = month;
            obj['start_day'] = day;
            obj['upcoming_activity'] = work_order[0].type+' by '+formatDate(new Date(work_order[0].date_due), 'mm DD, YYYY');
        }

        return obj;
    }

    function getWorkOrders(where, title) {
        $('#work_order_table').children().not(':first').remove();
        //$('#filter_title').html(title);
        var query = {
            where: where,
            order: ['work_order_table.status ASC', 'work_order_table.date_due DESC']
        }
        $.get('/get_work_orders', query, function(work_order_list) {
            if (work_order_list.length != 0) {
                for (var i = 0; i < work_order_list.length; i++) {
                    work_order_list[i].date_due = formatDate(new Date(work_order_list[i].date_due), 'MM/DD/YYYY');
                    appendWorkOrder(work_order_list[i]);
                }
            }
            // Show 'No work order records'
            else {
                console.log('No work order records!');
            }
        });
    }

    $(document).ready(function() {

        $('#calendar_card_cont').on('click', '.calendar_card', function() {
            var target = $(this);
            var crop_plan = $(this).find('.crop_plan').html();
            var farm_name = $(this).find('.farm_name').html();
            console.log(crop_plan+' - '+farm_name);

            var query = {
                key: ['crop_plan'],
                value: [crop_plan]
            }

            getWorkOrders(query, farm_name+' - '+crop_plan);
        });

        // $.get('/get_crop_plans', { status: ['Active', 'In-Progress']}, function(plans) {
        //     let plan_list = plans;
        //     let counter = 0;
        //     var plan_arr = [];
        //     var query = {
        //         where: {
        //             key: ['crop_calendar_id', 'work_order_table.status'],
        //             value: null
        //         }
        //     };
        //     for (var i = 0; i < plan_list.length; i++) {
        //         query['where']['value'] = [plan_list[i].calendar_id, 'Pending'];
        //         $.get('/get_work_orders', query, function(work_orders) {
        //             if (work_orders.length != 0) {
        //                 counter++;
        //                 appendCards(prepareCalendarData(plan_list[i], work_orders));
        //             }
        //         });
        //     }
        //     // Show 'No Active Calendars'
        //     if (counter == 0) {
        //         console.log('No active calendars!');
        //     }
        // });

        getWorkOrders({}, 'All');
    });

</script> -->