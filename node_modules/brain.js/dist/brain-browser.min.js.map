{"version":3,"file":"brain-browser.min.js","sources":["../../src/activation/relu.ts","../../src/activation/sigmoid.ts","../../src/activation/tanh.ts","../../src/activation/leaky-relu.ts","../../src/cross-validate.ts","../node_modules/gpu.js/dist/gpu-browser.js","../../src/utilities/kernel.ts","../../src/estimator/mean-squared-error.ts","../../src/layer/base-layer.ts","../../src/utilities/zeros.ts","../../src/utilities/zeros-2d.ts","../../src/utilities/zeros-3d.ts","../../src/layer/activation.ts","../../src/layer/filter.ts","../../src/layer/internal.ts","../../src/layer/modifier.ts","../../src/layer/operator.ts","../../src/layer/target.ts","../../src/layer/types.ts","../../src/lookup.ts","../../src/praxis/base-praxis.ts","../../src/praxis/arthur-deviation-biases.ts","../../src/praxis/arthur-deviation-weights.ts","../../src/praxis/momentum-root-mean-squared-propagation.ts","../../src/utilities/traverse-layers-from.ts","../../src/utilities/flatten-layers.ts","../../src/utilities/layer-size.ts","../../src/layer/add.ts","../../src/utilities/random-weight.ts","../../src/utilities/random.ts","../../src/utilities/randos.ts","../../src/layer/random.ts","../../src/layer/multiply.ts","../../src/layer/sigmoid.ts","../../src/utilities/layer-setup.ts","../../src/utilities/values.ts","../../src/layer/convolution.ts","../../src/layer/dropout.ts","../../src/layer/fully-connected.ts","../../src/layer/negative.ts","../../src/layer/multiply-element.ts","../../src/utilities/ones.ts","../../src/layer/ones.ts","../../src/layer/tanh.ts","../../src/layer/zeros.ts","../../src/layer/input.ts","../../src/layer/leaky-relu.ts","../../src/layer/pool.ts","../../src/layer/recurrent-input.ts","../../src/layer/recurrent-zeros.ts","../../src/layer/relu.ts","../../src/layer/regression.ts","../../src/layer/soft-max.ts","../../src/layer/svm.ts","../../src/layer/transpose.ts","../../src/layer/index.ts","../../src/layer/arthur-feed-forward.ts","../../src/layer/feed-forward.ts","../../src/layer/gru.ts","../../src/layer/lstm-cell.ts","../../src/layer/output.ts","../../src/layer/rnn-cell.ts","../../src/utilities/layer-from-json.ts","../../src/utilities/lookup-table.ts","../../src/feed-forward.ts","../node_modules/thaw.js/browser.js","../../src/utilities/cast.ts","../../src/utilities/max.ts","../../src/utilities/mse.ts","../../src/neural-network.ts","../../src/neural-network-gpu.ts","../../src/layer/recurrent-connection.ts","../../src/recurrent.ts","../../src/recurrent/matrix/index.ts","../../src/recurrent/matrix/random-matrix.ts","../../src/utilities/data-formatter.ts","../../src/recurrent/matrix/add.ts","../../src/recurrent/matrix/add-b.ts","../../src/recurrent/matrix/all-ones.ts","../../src/recurrent/matrix/clone-negative.ts","../../src/recurrent/matrix/multiply.ts","../../src/recurrent/matrix/multiply-b.ts","../../src/recurrent/matrix/multiply-element.ts","../../src/recurrent/matrix/multiply-element-b.ts","../../src/recurrent/matrix/relu.ts","../../src/recurrent/matrix/relu-b.ts","../../src/recurrent/matrix/row-pluck.ts","../../src/recurrent/matrix/row-pluck-b.ts","../../src/recurrent/matrix/sigmoid.ts","../../src/recurrent/matrix/sigmoid-b.ts","../../src/recurrent/matrix/softmax.ts","../../src/recurrent/matrix/tanh.ts","../../src/recurrent/matrix/tanh-b.ts","../../src/recurrent/matrix/equation.ts","../../src/recurrent/matrix/max-i.ts","../../src/recurrent/matrix/sample-i.ts","../../src/recurrent/rnn.ts","../../src/recurrent/matrix/copy.ts","../../src/recurrent/gru.ts","../../src/utilities/array-lookup-table.ts","../../src/recurrent/rnn-time-step.ts","../../src/recurrent/gru-time-step.ts","../../src/recurrent/lstm.ts","../../src/recurrent/lstm-time-step.ts","../../src/train-stream.ts","../../src/utilities/to-svg.ts","../../src/index.ts","../../src/likely.ts","../../src/utilities/range.ts","../../src/utilities/to-array.ts"],"sourcesContent":["/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return Math.max(0, weight);\n}\n\n/**\n * Relu derivative\n */\nexport function measure(weight: number, delta: number): number {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n","/**\n * sigmoid activation\n */\nexport function activate(value: number): number {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight * (1 - weight) * error;\n}\n","/**\n * Hyperbolic tan\n */\nexport function activate(weight: number): number {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n */\nexport function measure(weight: number, error: number): number {\n  return (1 - weight * weight) * error;\n}\n","/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n */\nexport function activate(weight: number): number {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n */\nexport function measure(weight: number, error: number): number {\n  return weight > 0 ? error : 0.01 * error;\n}\n","import {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkOptions,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\n\nexport type ICrossValidateOptions = INeuralNetworkOptions;\n\nexport interface INetwork {\n  options: any;\n  trainOpts: any;\n  toJSON: () => any;\n  train: (data: any[], trainOpts?: any) => INeuralNetworkState;\n  test: (\n    data: any[]\n  ) => INeuralNetworkTestResult | INeuralNetworkBinaryTestResult;\n}\n\nexport type ICrossValidateJSON<JsonType> =\n  | ICrossValidateStats<JsonType>\n  | ICrossValidateBinaryStats<JsonType>;\n\nexport interface ICrossValidateStatsAverages {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  error: number;\n}\n\nexport interface ICrossValidateStats<JsonType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultStats;\n  sets: Array<ICrossValidationTestPartitionResults<JsonType>>;\n}\nexport interface ICrossValidateBinaryStats<NetworkType> {\n  avgs: ICrossValidateStatsAverages;\n  stats: ICrossValidateStatsResultBinaryStats;\n  sets: Array<ICrossValidationTestPartitionBinaryResults<NetworkType>>;\n}\n\nexport interface ICrossValidateStatsResultStats {\n  total: number;\n  testSize: number;\n  trainSize: number;\n}\n\nexport interface ICrossValidateStatsResultBinaryStats\n  extends ICrossValidateStatsResultStats {\n  total: number;\n  truePos: number;\n  trueNeg: number;\n  falsePos: number;\n  falseNeg: number;\n  precision: number;\n  recall: number;\n  accuracy: number;\n}\n\nexport interface ICrossValidationTestPartitionResults<JsonType>\n  extends INeuralNetworkTestResult {\n  trainTime: number;\n  testTime: number;\n  iterations: number;\n  network: JsonType;\n  total: number;\n}\n\nexport type ICrossValidationTestPartitionBinaryResults<\n  JsonType\n> = INeuralNetworkBinaryTestResult &\n  ICrossValidationTestPartitionResults<JsonType>;\n\nexport type Classifier<NetworkType extends INetwork> = new (\n  options: NetworkType['trainOpts']\n) => NetworkType;\n\ninterface IStaticClassifier<NetworkType extends INetwork>\n  extends Classifier<NetworkType> {\n  fromJSON?: (json: ReturnType<NetworkType['toJSON']>) => NetworkType;\n}\n\nexport default class CrossValidate<NetworkType extends INetwork> {\n  Classifier: IStaticClassifier<NetworkType>;\n  options: Partial<ICrossValidateOptions> = {};\n  json: ICrossValidateJSON<ReturnType<NetworkType['toJSON']>> = {\n    avgs: {\n      error: 0,\n      iterations: 0,\n      testTime: 0,\n      trainTime: 0,\n    },\n    stats: {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    },\n    sets: [],\n  };\n\n  constructor(\n    Classifier: IStaticClassifier<NetworkType>,\n    options: Partial<NetworkType['options']> = {}\n  ) {\n    this.Classifier = Classifier;\n    this.options = options;\n  }\n\n  testPartition(\n    trainOpts: Parameters<NetworkType['train']>[1],\n    trainSet: Parameters<NetworkType['train']>[0],\n    testSet: Parameters<NetworkType['train']>[0]\n  ):\n    | ICrossValidationTestPartitionResults<ReturnType<NetworkType['toJSON']>>\n    | ICrossValidationTestPartitionBinaryResults<\n        ReturnType<NetworkType['toJSON']>\n      > {\n    const classifier = new this.Classifier(this.options);\n    const beginTrain = Date.now();\n    const trainingStats = classifier.train(trainSet, trainOpts);\n    const beginTest = Date.now();\n    const testStats:\n      | INeuralNetworkTestResult\n      | INeuralNetworkBinaryTestResult = classifier.test(testSet);\n    const endTest = Date.now();\n    return {\n      ...testStats,\n      trainTime: beginTest - beginTrain,\n      testTime: endTest - beginTest,\n      iterations: trainingStats.iterations,\n      error: trainingStats.error,\n      total: testStats.total,\n      network: (classifier as {\n        toJSON: () => ReturnType<NetworkType['toJSON']>;\n      }).toJSON(),\n    };\n  }\n\n  /**\n   * Randomize array element order in-place.\n   * Using Durstenfeld shuffle algorithm.\n   * source: http://stackoverflow.com/a/12646864/1324039\n   */\n  shuffleArray<K>(array: K[]): K[] {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  static isBinaryStats = (\n    stats: ICrossValidateStatsResultStats | ICrossValidateStatsResultBinaryStats\n  ): stats is ICrossValidateStatsResultBinaryStats => {\n    return (\n      (stats as ICrossValidateStatsResultBinaryStats).accuracy !== undefined\n    );\n  };\n\n  static isBinaryResults = <JsonType>(\n    stats: ICrossValidateStats<JsonType> | ICrossValidateBinaryStats<JsonType>\n  ): stats is ICrossValidateBinaryStats<JsonType> =>\n    (stats as ICrossValidateBinaryStats<JsonType>).stats.accuracy !== undefined;\n\n  static isBinaryPartitionResults = <JsonType>(\n    stats:\n      | ICrossValidationTestPartitionResults<JsonType>\n      | ICrossValidationTestPartitionBinaryResults<JsonType>\n  ): stats is ICrossValidationTestPartitionBinaryResults<JsonType> =>\n    (stats as ICrossValidationTestPartitionBinaryResults<JsonType>).accuracy !==\n    undefined;\n\n  train(\n    data: Parameters<NetworkType['train']>[0],\n    trainOpts: Partial<Parameters<NetworkType['train']>[1]> = {},\n    k = 4\n  ): ICrossValidateStats<NetworkType> {\n    if (data.length < k) {\n      throw new Error(\n        `Training set size is too small for ${data.length} k folds of ${k}`\n      );\n    }\n    this.shuffleArray<Parameters<NetworkType['train']>[0]>(data);\n    const size = data.length / k;\n\n    const avgs: ICrossValidateStatsAverages = {\n      trainTime: 0,\n      testTime: 0,\n      iterations: 0,\n      error: 0,\n    };\n\n    const stats:\n      | ICrossValidateStatsResultStats\n      | ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n    };\n\n    const binaryStats: ICrossValidateStatsResultBinaryStats = {\n      total: 0,\n      testSize: 0,\n      trainSize: 0,\n      truePos: 0,\n      trueNeg: 0,\n      falsePos: 0,\n      falseNeg: 0,\n      precision: 0,\n      recall: 0,\n      accuracy: 0,\n    };\n\n    const results = [];\n    let isBinary = null;\n\n    for (let i = 0; i < k; i++) {\n      const dclone = data.slice(0);\n      const testSet = dclone.splice(i * size, size);\n      const trainSet = dclone;\n      const result = this.testPartition(trainOpts, trainSet, testSet);\n\n      if (isBinary === null) {\n        isBinary =\n          result.hasOwnProperty('falseNeg') &&\n          result.hasOwnProperty('falsePos') &&\n          result.hasOwnProperty('trueNeg') &&\n          result.hasOwnProperty('truePos');\n        if (isBinary) {\n          Object.assign(stats, binaryStats);\n        }\n      }\n\n      avgs.iterations += result.iterations;\n      avgs.testTime += result.testTime;\n      avgs.trainTime += result.trainTime;\n      avgs.error += result.error;\n      stats.total += result.total;\n      if (\n        CrossValidate.isBinaryStats(stats) &&\n        CrossValidate.isBinaryPartitionResults(result)\n      ) {\n        stats.accuracy += result.accuracy;\n        stats.falseNeg += result.falseNeg;\n        stats.falsePos += result.falsePos;\n        stats.precision += result.precision;\n        stats.recall += result.recall;\n        stats.trueNeg += result.trueNeg;\n        stats.truePos += result.truePos;\n      }\n\n      results.push(result);\n    }\n    avgs.error /= k;\n    avgs.iterations /= k;\n    avgs.testTime /= k;\n    avgs.trainTime /= k;\n\n    if (CrossValidate.isBinaryStats(stats)) {\n      stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n      stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n      stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n    }\n\n    stats.testSize = size;\n    stats.trainSize = data.length - size;\n\n    this.json = {\n      avgs: avgs,\n      stats: stats,\n      sets: results,\n    };\n    return this.json;\n  }\n\n  toNeuralNetwork(): NetworkType {\n    return this.fromJSON(this.json);\n  }\n\n  toJSON(): ICrossValidateJSON<ReturnType<NetworkType['toJSON']>> | null {\n    return this.json;\n  }\n\n  fromJSON(\n    crossValidateJson: ICrossValidateJSON<ReturnType<NetworkType['toJSON']>>\n  ): NetworkType {\n    const Classifier = this.Classifier;\n    const winningJSON:\n      | ICrossValidationTestPartitionResults<ReturnType<NetworkType['toJSON']>>\n      | ICrossValidationTestPartitionBinaryResults<\n          ReturnType<NetworkType['toJSON']>\n        > = (crossValidateJson as ICrossValidateStats<\n      ReturnType<NetworkType['toJSON']>\n    >).sets.reduce((prev, cur) => (prev.error < cur.error ? prev : cur));\n    if (Classifier.fromJSON) {\n      return Classifier.fromJSON(winningJSON.network);\n    }\n    const instance = new Classifier(this.options);\n    if (\n      (instance as {\n        fromJSON?: (json: ReturnType<NetworkType['toJSON']>) => void;\n      }).fromJSON\n    ) {\n      ((instance as unknown) as {\n        fromJSON: (json: ReturnType<NetworkType['toJSON']>) => void;\n      }).fromJSON(winningJSON.network);\n      return instance;\n    } else {\n      throw new Error('no fromJSON method available');\n    }\n  }\n}\n","/**\n * gpu.js\n * http://gpu.rocks/\n *\n * GPU Accelerated JavaScript\n *\n * @version 2.11.2\n * @date Tue Jan 19 2021 11:27:02 GMT-0500 (Eastern Standard Time)\n *\n * @license MIT\n * The MIT License\n *\n * Copyright (c) 2021 gpu.js Team\n */(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GPU = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, function (exports) { 'use strict';\n\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,155,22,13,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,0,33,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,0,161,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,754,9486,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,232,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,792487,239];\n\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n\n\n\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n\n  var keywords$1 = {};\n\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n\n  var defaultOptions = {\n    ecmaVersion: 10,\n    sourceType: \"script\",\n    onInsertedSemicolon: null,\n    onTrailingComma: null,\n    allowReserved: null,\n    allowReturnOutsideFunction: false,\n    allowImportExportEverywhere: false,\n    allowAwaitOutsideFunction: false,\n    allowHashBang: false,\n    locations: false,\n    onToken: null,\n    onComment: null,\n    ranges: false,\n    program: null,\n    sourceFile: null,\n    directSourceFile: null,\n    preserveParens: false\n  };\n\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  var\n      BIND_NONE = 0, \n      BIND_VAR = 1, \n      BIND_LEXICAL = 2, \n      BIND_FUNCTION = 3, \n      BIND_SIMPLE_CATCH = 4, \n      BIND_OUTSIDE = 5; \n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    this.containsEsc = false;\n\n\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    this.potentialArrowAt = -1;\n\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    this.labels = [];\n    this.undefinedExports = {};\n\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n\n  var literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") { return true }\n      start += match[0].length;\n\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    if (nextCh === 91) { return true } \n    if (context) { return false }\n\n    if (nextCh === 123) { return true } \n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40) \n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); \n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n\n  pp$1.parseBlock = function(createNewLexicalScope, node) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (!this.eat(types.braceR)) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.strict = oldStrict;\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    if (this.eat(types.star)) {\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { \n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { \n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n\n  var pp$3 = Parser.prototype;\n\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n\n\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } \n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      if (element === base || element.type === \"ArrowFunctionExpression\") { return element }\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n    var computed = this.eat(types.bracketL);\n    if (computed || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n    this.next(); \n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); \n\n    node.source = this.parseMaybeAssign();\n\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\" || containsEsc)\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      node.body = this.parseBlock(false);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n\n    if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n    this.strict = oldStrict;\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    this.var = [];\n    this.lexical = [];\n    this.functions = [];\n  };\n\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  RegExpValidationState.prototype.at = function at (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current () {\n    return this.at(this.pos)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead () {\n    return this.at(this.nextIndex(this.pos))\n  };\n\n  RegExpValidationState.prototype.advance = function advance () {\n    this.pos = this.nextIndex(this.pos);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch) {\n    if (this.current() === ch) {\n      this.advance();\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      if (state.eat(0x29 )) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D ) || state.eat(0x7D )) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C )) {\n      this.regexp_alternative(state);\n    }\n\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B )) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    if (state.eat(0x5E ) || state.eat(0x24 )) {\n      return true\n    }\n\n    if (state.eat(0x5C )) {\n      if (state.eat(0x42 ) || state.eat(0x62 )) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    if (state.eat(0x28 ) && state.eat(0x3F )) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C );\n      }\n      if (state.eat(0x3D ) || state.eat(0x21 )) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 )) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F );\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A ) ||\n      state.eat(0x2B ) ||\n      state.eat(0x3F ) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B )) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C ) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D )) {\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 )) {\n      if (state.eat(0x3F ) && state.eat(0x3A )) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 )) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 )) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F ) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 )) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E ) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24  ||\n      ch >= 0x28  && ch <= 0x2B  ||\n      ch === 0x2E  ||\n      ch === 0x3F  ||\n      ch >= 0x5B  && ch <= 0x5E  ||\n      ch >= 0x7B  && ch <= 0x7D \n    )\n  }\n\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24  &&\n      !(ch >= 0x28  && ch <= 0x2B ) &&\n      ch !== 0x2E  &&\n      ch !== 0x3F  &&\n      ch !== 0x5B  &&\n      ch !== 0x5E  &&\n      ch !== 0x7C \n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F )) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C )) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E )) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24  || ch === 0x5F \n  }\n\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var ch = state.current();\n    state.advance();\n\n    if (ch === 0x5C  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24  || ch === 0x5F  || ch === 0x200C  || ch === 0x200D \n  }\n\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      if (state.current() === 0x63 ) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B )) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 )) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30  && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 ) {\n      state.lastIntValue = 0x09; \n      state.advance();\n      return true\n    }\n    if (ch === 0x6E ) {\n      state.lastIntValue = 0x0A; \n      state.advance();\n      return true\n    }\n    if (ch === 0x76 ) {\n      state.lastIntValue = 0x0B; \n      state.advance();\n      return true\n    }\n    if (ch === 0x66 ) {\n      state.lastIntValue = 0x0C; \n      state.advance();\n      return true\n    }\n    if (ch === 0x72 ) {\n      state.lastIntValue = 0x0D; \n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41  && ch <= 0x5A ) ||\n      (ch >= 0x61  && ch <= 0x7A )\n    )\n  }\n\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x75 )) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C ) && state.eat(0x75 ) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        state.switchU &&\n        state.eat(0x7B ) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D ) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F )) {\n        state.lastIntValue = 0x2F; \n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63  && (!state.switchN || ch !== 0x6B )) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31  && ch <= 0x39 ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30  && ch <= 0x39 )\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50  || ch === 0x70 )\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B ) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D )\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64  ||\n      ch === 0x44  ||\n      ch === 0x73  ||\n      ch === 0x53  ||\n      ch === 0x77  ||\n      ch === 0x57 \n    )\n  }\n\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D )) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F \n  }\n\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B )) {\n      state.eat(0x5E );\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D )) {\n        return true\n      }\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D ) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C )) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        var ch$1 = state.current();\n        if (ch$1 === 0x63  || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 )) {\n      state.lastIntValue = 0x08; \n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D )) {\n      state.lastIntValue = 0x2D; \n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 )) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 )) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 );\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x39 \n  }\n\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30  && ch <= 0x39 ) ||\n      (ch >= 0x41  && ch <= 0x46 ) ||\n      (ch >= 0x61  && ch <= 0x66 )\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41  && ch <= 0x46 ) {\n      return 10 + (ch - 0x41 )\n    }\n    if (ch >= 0x61  && ch <= 0x66 ) {\n      return 10 + (ch - 0x61 )\n    }\n    return ch - 0x30 \n  }\n\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; \n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30  && ch <= 0x37 \n  }\n\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n\n  var pp$9 = Parser.prototype;\n\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 )\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: \n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: \n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: \n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { \n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { \n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { \n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    case 46: \n      return this.readToken_dot()\n\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n    case 63: ++this.pos; return this.finishToken(types.question)\n\n    case 96: \n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: \n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } \n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } \n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } \n      }\n\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: \n      return this.readNumber(false)\n\n    case 34: case 39: \n      return this.readString(code)\n\n\n    case 47: \n      return this.readToken_slash()\n\n    case 37: case 42: \n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: \n      return this.readToken_pipe_amp(code)\n\n    case 94: \n      return this.readToken_caret()\n\n    case 43: case 45: \n      return this.readToken_plus_min(code)\n\n    case 60: case 62: \n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: \n      return this.readToken_eq_excl(code)\n\n    case 126: \n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n\n  pp$9.readInt = function(radix, len) {\n    var start = this.pos, total = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n      if (code >= 97) { val = code - 97 + 10; } \n      else if (code >= 65) { val = code - 65 + 10; } \n      else if (code >= 48 && code <= 57) { val = code - 48; } \n      else { val = Infinity; }\n      if (val >= radix) { break }\n      ++this.pos;\n      total = total * radix + val;\n    }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; \n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = typeof BigInt !== \"undefined\" ? BigInt(this.input.slice(start, this.pos)) : null;\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var str$1 = this.input.slice(start, this.pos);\n      var val$1 = typeof BigInt !== \"undefined\" ? BigInt(str$1) : null;\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { \n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { \n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } \n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var str = this.input.slice(start, this.pos);\n    var val = octal ? parseInt(str, 8) : parseFloat(str);\n    return this.finishToken(types.num, val)\n  };\n\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { \n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { \n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { \n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" \n    case 114: return \"\\r\" \n    case 120: return String.fromCharCode(this.readHexChar(2)) \n    case 117: return codePointToString$1(this.readCodePoint()) \n    case 116: return \"\\t\" \n    case 98: return \"\\b\" \n    case 118: return \"\\u000b\" \n    case 102: return \"\\f\" \n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } \n    case 10: \n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { \n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) \n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n\n  var version = \"7.1.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { \n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); \n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables, onUnrecognizedArgumentLookup } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (!variables.hasOwnProperty(name)) continue;\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    if (onUnrecognizedArgumentLookup) {\n      return onUnrecognizedArgumentLookup(value);\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}([${Array.from(arg).join(',')}])`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n\n},{}],4:[function(require,module,exports){\nfunction setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  const mockMethod = () => kernel;\n  const methods = [\n    'setWarnVarUsage',\n    'setArgumentTypes',\n    'setTactic',\n    'setOptimizeFloatMemory',\n    'setDebug',\n    'setLoopMaxIterations',\n    'setConstantTypes',\n    'setFunctions',\n    'setNativeFunctions',\n    'setInjectedNative',\n    'setPipeline',\n    'setPrecision',\n    'setOutputToTexture',\n    'setImmutable',\n    'setStrictIntegers',\n    'setDynamicOutput',\n    'setHardcodeConstants',\n    'setDynamicArguments',\n    'setUseLegacyEncoder',\n    'setWarnVarUsage',\n    'addSubKernel',\n  ];\n  for (let i = 0; i < methods.length; i++) {\n    kernel[methods[i]] = mockMethod;\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  const halfHeight = height / 2 | 0; \n  const bytesPerRow = width * 4;\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n\n},{}],5:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};\n},{\"./utils\":114}],6:[function(require,module,exports){\nconst { FunctionNode } = require('../function-node');\n\nclass CPUFunctionNode extends FunctionNode {\n  astFunction(ast, retArr) {\n\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      retArr.push(') {\\n');\n    }\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          retArr.push('user_' + idtNode.name);\n        }\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      const declaration = declarations[i];\n      const info = this.getDeclaration(declaration.id);\n      if (!info.valueType) {\n        info.valueType = this.getType(declaration.init);\n      }\n      this.astGeneric(declaration, retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      case 'fn()[][]':\n        this.astGeneric(mNode.object.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.object.property, retArr);\n        retArr.push(']');\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n    const arrLen = arrNode.elements.length;\n    const elements = [];\n    for (let i = 0; i < arrLen; ++i) {\n      const element = [];\n      this.astGeneric(arrNode.elements[i], element);\n      elements.push(element.join(''));\n    }\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`[${elements.join(', ')}]`);\n        break;\n      default:\n        retArr.push(`new Float32Array([${elements.join(', ')}])`);\n    }\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};\n},{\"../function-node\":10}],7:[function(require,module,exports){\nconst { utils } = require('../../utils');\n\nfunction constantsToString(constants, types) {\n  const results = [];\n  for (const name in types) {\n    if (!types.hasOwnProperty(name)) continue;\n    const type = types[name];\n    const constant = constants[name];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n        results.push(`${name}:${constant}`);\n        break;\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        results.push(`${name}:new ${constant.constructor.name}(${JSON.stringify(Array.from(constant))})`);\n        break;\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants: incomingConstants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constantTypes = ${JSON.stringify(cpuKernel.constantTypes)};`,\n    `  const _constants = ${constantsToString(cpuKernel.constants, cpuKernel.constantTypes)};`\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},'\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    });\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._mediaTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _mediaTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in _constantTypes) {\n    if (!_constantTypes.hasOwnProperty(p)) continue;\n    const type = _constantTypes[p];\n    switch (type) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n      case 'Boolean':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        if (incomingConstants.hasOwnProperty(p)) {\n          console.warn('constant ' + p + ' of type ' + type + ' cannot be resigned');\n        }\n        continue;\n    }\n    if (!incomingConstants.hasOwnProperty(p)) {\n      throw new Error('constant ' + p + ' not found');\n    }\n    _constants[p] = incomingConstants[p];\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};\n},{\"../../utils\":114}],8:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`Looking up native function return type not supported on ${this.name}`);\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return 'cpu' + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this._prependedString = [];\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = [];\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      });\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    return this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() };\n  ${ this.injectedNative || '' }\n  const _this = this;\n  ${ this._resultKernelHeader() }\n  ${ this._processConstants() }\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._prependedString.join('') }\n    ${ this._earlyThrows() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n  }\n\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    const constants_${p} = this._mediaTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _earlyThrows() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    const arrayArguments = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      if (this.argumentTypes[i] === 'Array') {\n        arrayArguments.push(this.argumentNames[i]);\n      }\n    }\n    if (arrayArguments.length === 0) return '';\n    const checks = [];\n    for (let i = 0; i < arrayArguments.length; i++) {\n      const argumentName = arrayArguments[i];\n      const checkSubKernels = this._mapSubKernels(subKernel => `user_${argumentName} === result_${subKernel.name}`).join(' || ');\n      checks.push(`user_${argumentName} === result${checkSubKernels ? ` || ${checkSubKernels}` : ''}`);\n    }\n    return `if (${checks.join(' || ')}) throw new Error('Source and destination arrays are the same.  Use immutable = true');`;\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLCanvas':\n        case 'HTMLImage':\n        case 'HTMLVideo':\n          result.push(`    ${variableName} = this._mediaTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _mediaTo2DArray(media) {\n    const canvas = this.canvas;\n    const width = media.width > 0 ? media.width : media.videoWidth;\n    const height = media.height > 0 ? media.height : media.videoHeight;\n    if (canvas.width < width) {\n      canvas.width = width;\n    }\n    if (canvas.height < height) {\n      canvas.height = height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(media, 0, 0, width, height);\n    const pixelsData = ctx.getImageData(0, 0, width, height).data;\n    const imageArray = new Array(height);\n    let index = 0;\n    for (let y = height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(width);\n      for (let x = 0; x < width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; \n        pixel[1] = pixelsData[index++] / 255; \n        pixel[2] = pixelsData[index++] / 255; \n        pixel[3] = pixelsData[index++] / 255; \n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._mediaTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelHeader() {\n    if (this.graphical) return '';\n    if (this.immutable) return '';\n    if (!this.pipeline) return '';\n    switch (this.output.length) {\n      case 1:\n        return this._mutableKernel1DResults();\n      case 2:\n        return this._mutableKernel2DResults();\n      case 3:\n        return this._mutableKernel3DResults();\n    }\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel1DLoop(kernelString) : this._resultImmutableKernel1DLoop(kernelString)) + this._kernelOutput();\n      case 2:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel2DLoop(kernelString) : this._resultImmutableKernel2DLoop(kernelString)) + this._kernelOutput();\n      case 3:\n        return (!this.immutable && this.pipeline ? this._resultMutableKernel3DLoop(kernelString) : this._resultImmutableKernel3DLoop(kernelString)) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultImmutableKernel1DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _mutableKernel1DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }`;\n  }\n\n  _resultMutableKernel1DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultImmutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _mutableKernel2DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n    }`;\n  }\n\n  _resultMutableKernel2DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y];\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultImmutableKernel3DLoop(kernelString) {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _mutableKernel3DResults() {\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n      }\n    }`;\n  }\n\n  _resultMutableKernel3DLoop(kernelString) {\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z];\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y];\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n\n  prependString(value) {\n    if (this._kernelString) throw new Error('Kernel already built');\n    this._prependedString.push(value);\n  }\n\n  hasPrependString(value) {\n    return this._prependedString.indexOf(value) > -1;\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../kernel\":36,\"./function-node\":6,\"./kernel-string\":7}],9:[function(require,module,exports){\nclass FunctionBuilder {\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i];\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerImplyArgumentBitRatio = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, source) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(source, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerImplyArgumentBitRatio,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerImplyArgumentBitRatio,\n        onFunctionCall,\n        onNestedFunction,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      const nativeFunctionIndex = retList.indexOf(functionName);\n      if (nativeFunctionIndex === -1) {\n        retList.push(functionName);\n      } else {\n        const dependantNativeFunctionName = retList.splice(nativeFunctionIndex, 1)[0];\n        retList.push(dependantNativeFunctionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); \n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          if (this.lookupChain[i].ast === ast) {\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    return null;\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      }\n    }\n    const node = this._getFunction(functionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error('argument not found');\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error('argument bit ratio not found');\n    }\n    return bitRatio;\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  assignArgumentBitRatio(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    const node = this._getFunction(functionName);\n    if (this._isNativeFunction(calleeFunctionName)) return null;\n    const calleeNode = this._getFunction(calleeFunctionName);\n    const i = node.argumentNames.indexOf(argumentName);\n    if (i === -1) {\n      throw new Error(`Argument ${argumentName} not found in arguments from function ${functionName}`);\n    }\n    const bitRatio = node.argumentBitRatios[i];\n    if (typeof bitRatio !== 'number') {\n      throw new Error(`Bit ratio for argument ${argumentName} not found in function ${functionName}`);\n    }\n    if (!calleeNode.argumentBitRatios) {\n      calleeNode.argumentBitRatios = new Array(calleeNode.argumentNames.length);\n    }\n    const calleeBitRatio = calleeNode.argumentBitRatios[i];\n    if (typeof calleeBitRatio === 'number') {\n      if (calleeBitRatio !== bitRatio) {\n        throw new Error(`Incompatible bit ratio found at function ${functionName} at argument ${argumentName}`);\n      }\n      return calleeBitRatio;\n    }\n    calleeNode.argumentBitRatios[i] = bitRatio;\n    return bitRatio;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};\n},{}],10:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\nclass FunctionNode {\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerImplyArgumentBitRatio = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        if (ast.object.hasOwnProperty('name') && ast.object.name !== 'Math') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, inForLoopInit, inForLoopTest } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (inForLoopInit && inForLoopTest) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      declaration.valueType = valueType;\n      declaration.dependencies = dependencies;\n      declaration.isSafe = this.isSafeDependencies(dependencies);\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i], this.source);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast) {\n        return identifier.declaration;\n      }\n    }\n    return null;\n  }\n\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        const childType = this.getType(ast.elements[0]);\n        switch (childType) {\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return `Matrix(${ast.elements.length})`;\n        }\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = this.astKey(ast);\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            if (this.getVariableSignature(ast.callee, true) === 'this.color') {\n              return null;\n            }\n            if (ast.callee.type === 'MemberExpression' && ast.callee.object && ast.callee.property && ast.callee.property.name && ast.arguments) {\n              const functionName = ast.callee.property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'LogicalExpression':\n          return 'Boolean';\n        case 'BinaryExpression':\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              return this.getCheckVariableType(ast);\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getCheckVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getCheckVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n              case 'fn()[][]':\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                  case 'g':\n                  case 'b':\n                  case 'a':\n                    return this.getLookupType(this.getCheckVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        case 'SequenceExpression':\n          return this.getType(ast.expressions[ast.expressions.length - 1]);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  getCheckVariableType(ast) {\n    const type = this.getVariableType(ast);\n    if (!type) {\n      throw this.astErrorOutput(`${ast.type} is not defined`, ast);\n    }\n    return type;\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atan2',\n      'atanh',\n      'cbrt',\n      'ceil',\n      'clz32',\n      'cos',\n      'cosh',\n      'expm1',\n      'exp',\n      'floor',\n      'fround',\n      'imul',\n      'log',\n      'log2',\n      'log10',\n      'log1p',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'ConditionalExpression':\n        this.getDependencies(ast.test, dependencies, isNotSafe);\n        this.getDependencies(ast.alternate, dependencies, isNotSafe);\n        this.getDependencies(ast.consequent, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        case 'SequenceExpression':\n          return this.getDependencies(ast.expressions, dependencies, isNotSafe);\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast, returnRawValue) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift(returnRawValue ? '.' + ast.property.name : '.value');\n        }\n      } else if (ast.name) {\n        signature.unshift(returnRawValue ? ast.name : 'value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift(returnRawValue ? ast.callee.name + '()' : 'fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    if (returnRawValue) {\n      return signatureString;\n    }\n\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[this.astKey(ast)] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    const { expressions } = sNode;\n    const sequenceResult = [];\n    for (let i = 0; i < expressions.length; i++) {\n      const expression = expressions[i];\n      const expressionResult = [];\n      this.astGeneric(expression, expressionResult);\n      sequenceResult.push(expressionResult.join(''));\n    }\n    if (sequenceResult.length > 1) {\n      retArr.push('(', sequenceResult.join(','), ')');\n    } else {\n      retArr.push(sequenceResult[0]);\n    }\n    return retArr;\n  }\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case 'fn()[][]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  astKey(ast, separator = ',') {\n    if (!ast.start || !ast.end) throw new Error('AST start and end needed');\n    return `${ast.start}${separator}${ast.end}`;\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Matrix(2)': 'Number',\n  'Matrix(3)': 'Number',\n  'Matrix(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLCanvas': 'Array(4)',\n  'HTMLImage': 'Array(4)',\n  'HTMLVideo': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};\n},{\"../utils\":114,\"./function-tracer\":11,\"acorn\":1}],11:[function(require,module,exports){\nconst { utils } = require('../utils');\n\nfunction last(array) {\n  return array.length > 0 ? array[array.length - 1] : null;\n}\n\nconst states = {\n  trackIdentifiers: 'trackIdentifiers',\n  memberExpression: 'memberExpression',\n  inForLoopInit: 'inForLoopInit'\n};\n\nclass FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.functionContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.trackedIdentifiers = null;\n    this.states = [];\n    this.newFunctionContext();\n    this.scan(ast);\n  }\n\n  isState(state) {\n    return this.states[this.states.length - 1] === state;\n  }\n\n  hasState(state) {\n    return this.states.indexOf(state) > -1;\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.isState(state)) {\n      this.states.pop();\n    } else {\n      throw new Error(`Cannot pop the non-active state \"${state}\"`);\n    }\n  }\n\n  get currentFunctionContext() {\n    return last(this.functionContexts);\n  }\n\n  get currentContext() {\n    return last(this.runningContexts);\n  }\n\n  newFunctionContext() {\n    const newContext = { '@contextType': 'function' };\n    this.contexts.push(newContext);\n    this.functionContexts.push(newContext);\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({ '@contextType': 'const/let' }, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    const { currentFunctionContext } = this;\n    for (const p in currentFunctionContext) {\n      if (!currentFunctionContext.hasOwnProperty(p) || newContext.hasOwnProperty(p)) continue;\n      newContext[p] = currentFunctionContext[p];\n    }\n    this.runningContexts.pop();\n    return newContext;\n  }\n\n  useFunctionContext(run) {\n    const functionContext = last(this.functionContexts);\n    this.runningContexts.push(functionContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  getIdentifiers(run) {\n    const trackedIdentifiers = this.trackedIdentifiers = [];\n    this.pushState(states.trackIdentifiers);\n    run();\n    this.trackedIdentifiers = null;\n    this.popState(states.trackIdentifiers);\n    return trackedIdentifiers;\n  }\n\n  getDeclaration(name) {\n    const { currentContext, currentFunctionContext, runningContexts } = this;\n    const declaration = currentContext[name] || currentFunctionContext[name] || null;\n\n    if (\n      !declaration &&\n      currentContext === currentFunctionContext &&\n      runningContexts.length > 0\n    ) {\n      const previousRunningContext = runningContexts[runningContexts.length - 2];\n      if (previousRunningContext[name]) {\n        return previousRunningContext[name];\n      }\n    }\n\n    return declaration;\n  }\n\n  scan(ast) {\n    if (!ast) return;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.useFunctionContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        if (ast.operator === '++') {\n          const declaration = this.getDeclaration(ast.argument.name);\n          if (declaration) {\n            declaration.suggestedType = 'Integer';\n          }\n        }\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        if (ast.kind === 'var') {\n          this.useFunctionContext(() => {\n            ast.declarations = utils.normalizeDeclarations(ast);\n            this.scan(ast.declarations);\n          });\n        } else {\n          ast.declarations = utils.normalizeDeclarations(ast);\n          this.scan(ast.declarations);\n        }\n        break;\n      case 'VariableDeclarator': {\n        const { currentContext } = this;\n        const inForLoopInit = this.hasState(states.inForLoopInit);\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          inForLoopInit,\n          inForLoopTest: null,\n          assignable: currentContext === this.currentFunctionContext || (!inForLoopInit && !currentContext.hasOwnProperty(ast.id.name)),\n          suggestedType: null,\n          valueType: null,\n          dependencies: null,\n          isSafe: null,\n        };\n        if (!currentContext[ast.id.name]) {\n          currentContext[ast.id.name] = declaration;\n        }\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      }\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement': {\n        let testIdentifiers;\n        const context = this.newContext(() => {\n          this.pushState(states.inForLoopInit);\n          this.scan(ast.init);\n          this.popState(states.inForLoopInit);\n\n          testIdentifiers = this.getIdentifiers(() => {\n            this.scan(ast.test);\n          });\n\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n\n        if (testIdentifiers) {\n          for (const p in context) {\n            if (p === '@contextType') continue;\n            if (testIdentifiers.indexOf(p) > -1) {\n              context[p].inForLoopTest = true;\n            }\n          }\n        }\n        break;\n      }\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier': {\n        if (this.isState(states.trackIdentifiers)) {\n          this.trackedIdentifiers.push(ast.name);\n        }\n        this.identifiers.push({\n          context: this.currentContext,\n          declaration: this.getDeclaration(ast.name),\n          ast,\n        });\n        break;\n      }\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.pushState(states.memberExpression);\n        this.scan(ast.object);\n        this.scan(ast.property);\n        this.popState(states.memberExpression);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'SequenceExpression':\n        this.scan(ast.expressions);\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n\n      case 'ThisExpression':\n      case 'Literal':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'BreakStatement':\n      case 'ContinueStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};\n},{\"../utils\":114}],12:[function(require,module,exports){\nconst { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  if (!originKernel.built) {\n    originKernel.build.apply(originKernel, args);\n  }\n  args = args ? Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'boolean':\n        return new Boolean(arg);\n      case 'number':\n        return new Number(arg);\n      default:\n        return arg;\n    }\n  }) : null;\n  const uploadedValues = [];\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      const argumentName = findKernelValue(argument, kernel.kernelArguments, [], context, uploadedValues);\n      if (argumentName) {\n        return argumentName;\n      }\n      const constantName = findKernelValue(argument, kernel.kernelConstants, constants ? Object.keys(constants).map(key => constants[key]) : [], context, uploadedValues);\n      if (constantName) {\n        return constantName;\n      }\n      return null;\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n    tactic,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    tactic,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, args[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten4dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, args);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('    /** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push('    ' + kernelArgument.getStringValueHandler().split('\\n').join('\\n    '));\n  });\n  result.push('    /** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const framebufferName = context.getContextVariableName(kernel.framebuffer);\n    if (kernel.renderKernels) {\n      const results = kernel.renderKernels();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName, framebufferName) }\n      },`);\n      const { subKernels, mappedTextures } = kernel;\n      for (let i = 0; i < subKernels.length; i++) {\n        const texture = mappedTextures[i];\n        const subKernel = subKernels[i];\n        const subKernelResult = results[subKernel.property];\n        const subKernelTextureName = context.getContextVariableName(texture.texture);\n        result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName, framebufferName) }\n      },`);\n      }\n      result.push(`    };`);\n    } else {\n      const rendered = kernel.renderOutput();\n      const textureName = context.getContextVariableName(kernel.texture.texture);\n      result.push(`    return {\n        texture: ${ textureName },\n        type: '${ rendered.type }',\n        toArray: ${ getToArrayString(rendered, textureName, framebufferName) }\n      };`);\n    }\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`  innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName, framebufferName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        if (name === 'framebuffer') {\n          return '';\n        }\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property, isDeclaration) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (property === 'context') {\n        if (isDeclaration) return null;\n        return 'gl';\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  function framebuffer() { return ${framebufferName}; };\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\n\nfunction findKernelValue(argument, kernelValues, values, context, uploadedValues) {\n  if (argument === null) return null;\n  if (kernelValues === null) return null;\n  switch (typeof argument) {\n    case 'boolean':\n    case 'number':\n      return null;\n  }\n  if (\n    typeof HTMLImageElement !== 'undefined' &&\n    argument instanceof HTMLImageElement\n  ) {\n    for (let i = 0; i < kernelValues.length; i++) {\n      const kernelValue = kernelValues[i];\n      if (kernelValue.type !== 'HTMLImageArray' && kernelValue) continue;\n      if (kernelValue.uploadValue !== argument) continue;\n      const variableIndex = values[i].indexOf(argument);\n      if (variableIndex === -1) continue;\n      const variableName = `uploadValue_${kernelValue.name}[${variableIndex}]`;\n      context.insertVariable(variableName, argument);\n      return variableName;\n    }\n  }\n\n  for (let i = 0; i < kernelValues.length; i++) {\n    const kernelValue = kernelValues[i];\n    if (argument !== kernelValue.uploadValue) continue;\n    const variable = `uploadValue_${kernelValue.name}`;\n    context.insertVariable(variable, kernelValue);\n    return variable;\n  }\n  return null;\n}\n\nmodule.exports = {\n  glKernelString\n};\n},{\"../../utils\":114,\"gl-wiretap\":3}],13:[function(require,module,exports){\nconst { Kernel } = require('../kernel');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number',\n      tactic: 'speed',\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  static getIsSpeedTacticSupported() {\n    function kernelFunction(value) {\n      return value[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [4],\n      returnType: 'Number',\n      precision: 'unsigned',\n      tactic: 'speed',\n    });\n    const args = [\n      [0, 1, 2, 3]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return Math.round(result[0]) === 0 && Math.round(result[1]) === 1 && Math.round(result[2]) === 2 && Math.round(result[3]) === 3;\n  }\n\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    return kernel.getVariablePrecisionString() + (argumentTypes.length > 0 ? ':' + argumentTypes.join(',') : '');\n  }\n\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.switchingKernels = null;\n    this._textureSwitched = null;\n    this._mappedTextureSwitched = null;\n  }\n\n  checkTextureSize() {\n    const { features } = this.constructor;\n    if (this.texSize[0] > features.maxTextureSize || this.texSize[1] > features.maxTextureSize) {\n      throw new Error(`Texture size [${this.texSize[0]},${this.texSize[1]}] generated by kernel is larger than supported size [${features.maxTextureSize},${features.maxTextureSize}]`);\n    }\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n          }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n          }\n          case 'Array(2)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n          }\n          case 'Array(3)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n          }\n          case 'Array(4)': {\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n          }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  getFloatTacticDeclaration() {\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    return `precision ${variablePrecision} float;\\n`;\n  }\n\n  getIntTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic, true)} int;\\n`;\n  }\n\n  getSampler2DTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2D;\\n`;\n  }\n\n  getSampler2DArrayTacticDeclaration() {\n    return `precision ${this.getVariablePrecisionString(this.texSize, this.tactic)} sampler2DArray;\\n`;\n  }\n\n  renderTexture() {\n    return this.immutable ? this.texture.clone() : this.texture;\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = this.mappedTextures[i].toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    if (this.immutable) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i].clone();\n      }\n    } else {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        result[this.subKernels[i].property] = this.mappedTextures[i];\n      }\n    }\n    return result;\n  }\n\n  resetSwitchingKernels() {\n    const existingValue = this.switchingKernels;\n    this.switchingKernels = null;\n    return existingValue;\n  }\n\n  setOutput(output) {\n    const newOutput = this.toKernelOutput(output);\n    if (this.program) {\n      if (!this.dynamicOutput) {\n        throw new Error('Resizing a kernel with dynamicOutput: false is not possible');\n      }\n      const newThreadDim = [newOutput[0], newOutput[1] || 1, newOutput[2] || 1];\n      const newTexSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, newThreadDim);\n      const oldTexSize = this.texSize;\n      if (oldTexSize) {\n        const oldPrecision = this.getVariablePrecisionString(oldTexSize, this.tactic);\n        const newPrecision = this.getVariablePrecisionString(newTexSize, this.tactic);\n        if (oldPrecision !== newPrecision) {\n          if (this.debug) {\n            console.warn('Precision requirement changed, asking GPU instance to recompile');\n          }\n          this.switchKernels({\n            type: 'outputPrecisionMismatch',\n            precision: newPrecision,\n            needed: output\n          });\n          return;\n        }\n      }\n      this.output = newOutput;\n      this.threadDim = newThreadDim;\n      this.texSize = newTexSize;\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      if (this.texture) {\n        this.texture.delete();\n      }\n      this.texture = null;\n      this._setupOutputTexture();\n      if (this.mappedTextures && this.mappedTextures.length > 0) {\n        for (let i = 0; i < this.mappedTextures.length; i++) {\n          this.mappedTextures[i].delete();\n        }\n        this.mappedTextures = null;\n        this._setupSubOutputTextures();\n      }\n    } else {\n      this.output = newOutput;\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n  switchKernels(reason) {\n    if (this.switchingKernels) {\n      this.switchingKernels.push(reason);\n    } else {\n      this.switchingKernels = [reason];\n    }\n  }\n  getVariablePrecisionString(textureSize = this.texSize, tactic = this.tactic, isInt = false) {\n    if (!tactic) {\n      if (!this.constructor.features.isSpeedTacticSupported) return 'highp';\n      const low = this.constructor.features[isInt ? 'lowIntPrecision' : 'lowFloatPrecision'];\n      const medium = this.constructor.features[isInt ? 'mediumIntPrecision' : 'mediumFloatPrecision'];\n      const high = this.constructor.features[isInt ? 'highIntPrecision' : 'highFloatPrecision'];\n      const requiredSize = Math.log2(textureSize[0] * textureSize[1]);\n      if (requiredSize <= low.rangeMax) {\n        return 'lowp';\n      } else if (requiredSize <= medium.rangeMax) {\n        return 'mediump';\n      } else if (requiredSize <= high.rangeMax) {\n        return 'highp';\n      } else {\n        throw new Error(`The required size exceeds that of the ability of your system`);\n      }\n    }\n    switch (tactic) {\n      case 'speed':\n        return 'lowp';\n      case 'balanced':\n        return 'mediump';\n      case 'precision':\n        return 'highp';\n      default:\n        throw new Error(`Unknown tactic \"${tactic}\" use \"speed\", \"balanced\", \"precision\", or empty for auto`);\n    }\n  }\n\n  updateTextureArgumentRefs(kernelValue, arg) {\n    if (!this.immutable) return;\n    if (this.texture.texture === arg.texture) {\n      const { prevArg } = kernelValue;\n      if (prevArg) {\n        if (prevArg.texture._refs === 1) {\n          this.texture.delete();\n          this.texture = prevArg.clone();\n          this._textureSwitched = true;\n        }\n        prevArg.delete();\n      }\n      kernelValue.prevArg = arg.clone();\n    } else if (this.mappedTextures && this.mappedTextures.length > 0) {\n      const { mappedTextures } = this;\n      for (let i = 0; i < mappedTextures.length; i++) {\n        const mappedTexture = mappedTextures[i];\n        if (mappedTexture.texture === arg.texture) {\n          const { prevArg } = kernelValue;\n          if (prevArg) {\n            if (prevArg.texture._refs === 1) {\n              mappedTexture.delete();\n              mappedTextures[i] = prevArg.clone();\n              this._mappedTextureSwitched[i] = true;\n            }\n            prevArg.delete();\n          }\n          kernelValue.prevArg = arg.clone();\n          return;\n        }\n      }\n    }\n  }\n\n  onActivate(previousKernel) {\n    this._textureSwitched = true;\n    this.texture = previousKernel.texture;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        this._mappedTextureSwitched[i] = true;\n      }\n      this.mappedTextures = previousKernel.mappedTextures;\n    }\n  }\n\n  initCanvas() {}\n}\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel\n};\n},{\"../../utils\":114,\"../kernel\":36,\"./texture/array-2-float\":16,\"./texture/array-2-float-2d\":14,\"./texture/array-2-float-3d\":15,\"./texture/array-3-float\":19,\"./texture/array-3-float-2d\":17,\"./texture/array-3-float-3d\":18,\"./texture/array-4-float\":22,\"./texture/array-4-float-2d\":20,\"./texture/array-4-float-3d\":21,\"./texture/float\":25,\"./texture/float-2d\":23,\"./texture/float-3d\":24,\"./texture/graphical\":26,\"./texture/memory-optimized\":30,\"./texture/memory-optimized-2d\":28,\"./texture/memory-optimized-3d\":29,\"./texture/unsigned\":33,\"./texture/unsigned-2d\":31,\"./texture/unsigned-3d\":32}],14:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],15:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],16:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};\n},{\"../../../utils\":114,\"./float\":25}],17:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],18:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],19:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};\n},{\"../../../utils\":114,\"./float\":25}],20:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};\n},{\"../../../utils\":114,\"./float\":25}],21:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};\n},{\"../../../utils\":114,\"./float\":25}],22:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};\n},{\"../../../utils\":114,\"./float\":25}],23:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};\n},{\"../../../utils\":114,\"./float\":25}],24:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};\n},{\"../../../utils\":114,\"./float\":25}],25:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureFloat extends GLTexture {\n  get textureType() {\n    return this.context.FLOAT;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const gl = this.context;\n    const size = this.size;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(size[0] * size[1] * 4);\n    gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};\n},{\"../../../utils\":114,\"./index\":27}],26:[function(require,module,exports){\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};\n},{\"./unsigned\":33}],27:[function(require,module,exports){\nconst { Texture } = require('../../../texture');\n\nclass GLTexture extends Texture {\n  get textureType() {\n    throw new Error(`\"textureType\" not implemented on ${ this.name }`);\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  beforeMutate() {\n    if (this.texture._refs > 1) {\n      this.newTexture();\n      return true;\n    }\n    return false;\n  }\n\n  cloneTexture() {\n    this.texture._refs--;\n    const { context: gl, size, texture, kernel } = this;\n    if (kernel.debug) {\n      console.warn('cloning internal texture');\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, 0, 0, 0, 0, size[0], size[1]);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  newTexture() {\n    this.texture._refs--;\n    const gl = this.context;\n    const size = this.size;\n    const kernel = this.kernel;\n    if (kernel.debug) {\n      console.warn('new internal texture');\n    }\n    const target = gl.createTexture();\n    selectTexture(gl, target);\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    target._refs = 1;\n    this.texture = target;\n  }\n\n  clear() {\n    if (this.texture._refs) {\n      this.texture._refs--;\n      const gl = this.context;\n      const target = this.texture = gl.createTexture();\n      selectTexture(gl, target);\n      const size = this.size;\n      target._refs = 1;\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, size[0], size[1], 0, this.textureFormat, this.textureType, null);\n    }\n    const { context: gl, texture } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    selectTexture(gl, texture);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  delete() {\n    if (this._deleted) return;\n    this._deleted = true;\n    if (this.texture._refs) {\n      this.texture._refs--;\n      if (this.texture._refs) return;\n    }\n    this.context.deleteTexture(this.texture);\n  }\n\n  framebuffer() {\n    if (!this._framebuffer) {\n      this._framebuffer = this.kernel.getRawValueFramebuffer(this.size[0], this.size[1]);\n    }\n    return this._framebuffer;\n  }\n}\n\nfunction selectTexture(gl, texture) {\n  gl.activeTexture(gl.TEXTURE15);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nmodule.exports = { GLTexture };\n},{\"../../../texture\":113}],28:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};\n},{\"../../../utils\":114,\"./float\":25}],29:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};\n},{\"../../../utils\":114,\"./float\":25}],30:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};\n},{\"../../../utils\":114,\"./float\":25}],31:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],32:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};\n},{\"../../../utils\":114,\"./unsigned\":33}],33:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { GLTexture } = require('./index');\n\nclass GLTextureUnsigned extends GLTexture {\n  get textureType() {\n    return this.context.UNSIGNED_BYTE;\n  }\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer());\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    if (this._deleted) return null;\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};\n},{\"../../../utils\":114,\"./index\":27}],34:[function(require,module,exports){\nconst getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { \n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n        WEBGL_color_buffer_float: testContext.getExtension('WEBGL_color_buffer_float'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    return getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `    if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n    return this;\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};\n},{\"../gl/kernel-string\":12,\"../web-gl/kernel\":70,\"gl\":2}],35:[function(require,module,exports){\nclass KernelValue {\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n      tactic,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.tactic = tactic;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n    this.forceUploadEachRun = null;\n  }\n\n  get id() {\n    return `${this.origin}_${name}`;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};\n},{}],36:[function(require,module,exports){\nconst { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n    this.forceUploadKernelConstants = null;\n\n\n    this.source = source;\n\n    this.output = null;\n\n    this.debug = false;\n\n    this.graphical = false;\n\n    this.loopMaxIterations = 0;\n\n    this.constants = null;\n\n    this.constantTypes = null;\n\n    this.constantBitRatios = null;\n\n    this.dynamicArguments = false;\n\n    this.dynamicOutput = false;\n\n    this.canvas = null;\n\n    this.context = null;\n\n    this.checkContext = null;\n\n    this.gpu = null;\n\n    this.functions = null;\n\n    this.nativeFunctions = null;\n\n    this.injectedNative = null;\n\n    this.subKernels = null;\n\n    this.validate = true;\n\n    this.immutable = false;\n\n    this.pipeline = false;\n\n    this.precision = null;\n\n    this.tactic = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.built = false;\n    this.signature = null;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); \n            continue;\n          }\n          break;\n        case 'functions':\n          this.functions = [];\n          for (let i = 0; i < settings.functions.length; i++) {\n            this.addFunction(settings.functions[i]);\n          }\n          continue;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n        case 'nativeFunctions':\n          if (!settings.nativeFunctions) continue;\n          this.nativeFunctions = [];\n          for (let i = 0; i < settings.nativeFunctions.length; i++) {\n            const s = settings.nativeFunctions[i];\n            const { name, source } = s;\n            this.addNativeFunction(name, source, s);\n          }\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  addFunction(source, settings = {}) {\n    if (source.name && source.source && source.argumentTypes && 'returnType' in source) {\n      this.functions.push(source);\n    } else if ('settings' in source && 'source' in source) {\n      this.functions.push(this.functionToIGPUFunction(source.source, source.settings));\n    } else if (typeof source === 'string' || typeof source === 'function') {\n      this.functions.push(this.functionToIGPUFunction(source, settings));\n    } else {\n      throw new Error(`function not properly defined`);\n    }\n    return this;\n  }\n\n  addNativeFunction(name, source, settings = {}) {\n    const { argumentTypes, argumentNames } = settings.argumentTypes ?\n      splitArgumentTypes(settings.argumentTypes) :\n      this.constructor.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.constructor.nativeFunctionReturnType(source)\n    });\n    return this;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  toKernelOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          return [output.x, output.y, output.z];\n        } else {\n          return [output.x, output.y];\n        }\n      } else {\n        return [output.x];\n      }\n    } else {\n      return output;\n    }\n  }\n\n  setOutput(output) {\n    this.output = this.toKernelOutput(output);\n    return this;\n  }\n\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  setFunctions(functions) {\n    for (let i = 0; i < functions.length; i++) {\n      this.addFunction(functions[i]);\n    }\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    for (let i = 0; i < nativeFunctions.length; i++) {\n      const settings = nativeFunctions[i];\n      const { name, source } = settings;\n      this.addNativeFunction(name, source, settings);\n    }\n    return this;\n  }\n\n  setInjectedNative(injectedNative) {\n    this.injectedNative = injectedNative;\n    return this;\n  }\n\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  setDimensions(flag) {\n    utils.warnDeprecated('method', 'setDimensions', 'setOutput');\n    this.output = flag;\n    return this;\n  }\n\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  setWarnVarUsage(flag) {\n    utils.warnDeprecated('method', 'setWarnVarUsage');\n    return this;\n  }\n\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        if (!argumentTypes.hasOwnProperty(p)) continue;\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  setTactic(tactic) {\n    this.tactic = tactic;\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  getPixels(flip) {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  prependString(value) {\n    throw new Error(`\"prependString\" called on ${ this.constructor.name }`);\n  }\n\n  hasPrependString(value) {\n    throw new Error(`\"hasPrependString\" called on ${ this.constructor.name }`);\n  }\n\n  toJSON() {\n    return {\n      settings: {\n        output: this.output,\n        pipeline: this.pipeline,\n        argumentNames: this.argumentNames,\n        argumentsTypes: this.argumentTypes,\n        constants: this.constants,\n        pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n        returnType: this.returnType,\n      }\n    };\n  }\n\n  buildSignature(args) {\n    const Constructor = this.constructor;\n    this.signature = Constructor.getSignature(this, Constructor.getArgumentTypes(this, args));\n  }\n\n  static getArgumentTypes(kernel, args) {\n    const argumentTypes = new Array(args.length);\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      const type = kernel.argumentTypes[i];\n      if (arg.type) {\n        argumentTypes[i] = arg.type;\n      } else {\n        switch (type) {\n          case 'Number':\n          case 'Integer':\n          case 'Float':\n          case 'ArrayTexture(1)':\n            argumentTypes[i] = utils.getVariableType(arg);\n            break;\n          default:\n            argumentTypes[i] = type;\n        }\n      }\n    }\n    return argumentTypes;\n  }\n\n  static getSignature(kernel, argumentTypes) {\n    throw new Error(`\"getSignature\" not implemented on ${ this.name }`);\n  }\n\n  functionToIGPUFunction(source, settings = {}) {\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      name: utils.getFunctionNameFromString(sourceString) || null,\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  }\n\n  onActivate(previousKernel) {}\n}\n\nfunction splitArgumentTypes(argumentTypesObject) {\n  const argumentNames = Object.keys(argumentTypesObject);\n  const argumentTypes = [];\n  for (let i = 0; i < argumentNames.length; i++) {\n    const argumentName = argumentNames[i];\n    argumentTypes.push(argumentTypesObject[argumentName]);\n  }\n  return { argumentTypes, argumentNames };\n}\n\nmodule.exports = {\n  Kernel\n};\n},{\"../input\":110,\"../utils\":114}],37:[function(require,module,exports){\nconst fragmentShader = `__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nfloat acosh(float x) {\n  return log(x + sqrt(x * x - 1.0));\n}\n\nfloat sinh(float x) {\n  return (pow(${Math.E}, x) - pow(${Math.E}, -x)) / 2.0;\n}\n\nfloat asinh(float x) {\n  return log(x + sqrt(x * x + 1.0));\n}\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat atanh(float x) {\n  x = (x + 1.0) / (x - 1.0);\n  if (x < 0.0) {\n    return 0.5 * log(-x);\n  }\n  return 0.5 * log(x);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat cosh(float x) {\n  return (pow(${Math.E}, x) + pow(${Math.E}, -x)) / 2.0; \n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat tanh(float x) {\n  float e = exp(2.0 * x);\n  return (e - 1.0) / (e + 1.0);\n}\n\nfloat trunc(float x) {\n  if (x >= 0.0) {\n    return floor(x); \n  } else {\n    return ceil(x);\n  }\n}\n\nvec4 _round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(_round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(_round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],38:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    const consequentType = this.getType(ast.consequent);\n    const alternateType = this.getType(ast.alternate);\n    if (consequentType === null && alternateType === null) {\n      retArr.push('if (');\n      this.astGeneric(ast.test, retArr);\n      retArr.push(') {');\n      this.astGeneric(ast.consequent, retArr);\n      retArr.push(';');\n      retArr.push('} else {');\n      this.astGeneric(ast.alternate, retArr);\n      retArr.push(';');\n      retArr.push('}');\n      return retArr;\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  astFunction(ast, retArr) {\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        const name = utils.sanitizeName(argumentName);\n        if (type === 'sampler2D' || type === 'sampler2DArray') {\n          retArr.push(`${type} user_${name},ivec2 user_${name}Size,ivec3 user_${name}Dim`);\n        } else {\n          retArr.push(`${type} user_${name}`);\n        }\n      }\n    }\n\n    retArr.push(') {\\n');\n\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  astLiteral(ast, retArr) {\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = this.astKey(ast);\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('divWithIntCheck(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': this.fixIntegerDivisionAccuracy ? 'integerCorrectionModulo' : 'modulo',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      const { declarations } = forNode.init;\n      if (declarations.length > 1) {\n        isSafe = false;\n      }\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      const initString = initArr.join('');\n      const initNeedsSemiColon = initString[initString.length - 1] !== ';';\n      retArr.push(`for (${initString}${initNeedsSemiColon ? ';' : ''}${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), '\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  astAssignmentExpression(assNode, retArr) {\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); \n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const declarationSets = [];\n    let declarationSet = [];\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const actualType = this.getType(declaration.init);\n      let type = actualType;\n      if (type === 'LiteralInteger') {\n        if (info.suggestedType === 'Integer') {\n          type = 'Integer';\n        } else {\n          type = 'Number';\n        }\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ type } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer') {\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          declarationSets.push(declarationSet.join(','));\n          declarationSet = [];\n          declarationResult.push(`${markupType} `);\n        }\n        lastType = type;\n        declarationResult.push(`user_${utils.sanitizeName(declaration.id.name)}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else if (actualType === 'LiteralInteger' && type === 'Integer') {\n          this.castLiteralToInteger(init, declarationResult);\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      declarationSet.push(declarationResult.join(''));\n    }\n\n    if (declarationSet.length > 0) {\n      declarationSets.push(declarationSet.join(','));\n    }\n\n    result.push(declarationSets.join(';'));\n\n    retArr.push(result.join(''));\n    retArr.push(';');\n    return retArr;\n  }\n\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement' || ifNode.alternate.type === 'IfStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${this.astKey(ast, '_')}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        const cleanName = utils.sanitizeName(name);\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ cleanName }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ cleanName }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ cleanName }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ cleanName }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ utils.sanitizeName(name) }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case 'fn()[][]':\n          this.astCallExpression(mNode.object.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.object.property));\n          retArr.push(']');\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(mNode.property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${utils.sanitizeName(name)}`);\n          return retArr;\n      }\n    }\n\n    const markupName = `${origin}_${utils.sanitizeName(name)}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLCanvas':\n      case 'HTMLImage':\n      case 'HTMLVideo':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`${markupName}[${this.memberExpressionPropertyMarkup(yProperty)}]`);\n        if (yProperty) {\n          retArr.push(`[${this.memberExpressionPropertyMarkup(xProperty)}]`);\n        }\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    switch (functionName) {\n      case 'pow':\n        functionName = '_pow';\n        break;\n      case 'round':\n        functionName = '_round';\n        break;\n    }\n\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    retArr.push(functionName);\n\n    retArr.push('(');\n\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Boolean':\n            this.astGeneric(argument, retArr);\n            continue;\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              if (argument.type === 'Identifier') {\n                retArr.push(`user_${utils.sanitizeName(argument.name)}`);\n              } else if (argument.type === 'ArrayExpression' || argument.type === 'MemberExpression' || argument.type === 'CallExpression') {\n                this.astGeneric(argument, retArr);\n              } else {\n                throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              }\n              continue;\n            }\n            break;\n          case 'HTMLCanvas':\n          case 'HTMLImage':\n          case 'HTMLImageArray':\n          case 'HTMLVideo':\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              if (argument.type !== 'Identifier') throw this.astErrorOutput(`Unhandled argument type ${ argument.type }`, ast);\n              this.triggerImplyArgumentBitRatio(this.name, argument.name, functionName, i);\n              const name = utils.sanitizeName(argument.name);\n              retArr.push(`user_${name},user_${name}Size,user_${name}Dim`);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  astArrayExpression(arrNode, retArr) {\n    const returnType = this.getType(arrNode);\n\n    const arrLen = arrNode.elements.length;\n\n    switch (returnType) {\n      case 'Matrix(2)':\n      case 'Matrix(3)':\n      case 'Matrix(4)':\n        retArr.push(`mat${arrLen}(`);\n        break;\n      default:\n        retArr.push(`vec${arrLen}(`);\n    }\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Matrix(2)': 'mat2',\n  'Matrix(3)': 'mat3',\n  'Matrix(4)': 'mat4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n  'HTMLVideo': 'sampler2D',\n  'HTMLCanvas': 'sampler2D',\n  'HTMLImage': 'sampler2D',\n  'HTMLImageArray': 'sampler2DArray',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};\n},{\"../../utils\":114,\"../function-node\":10}],39:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGLKernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGLKernelValueHTMLImage,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n      'HTMLVideo': WebGLKernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType,\n  kernelValueMaps,\n};\n},{\"./kernel-value/boolean\":41,\"./kernel-value/dynamic-html-image\":42,\"./kernel-value/dynamic-html-video\":43,\"./kernel-value/dynamic-memory-optimized-number-texture\":44,\"./kernel-value/dynamic-number-texture\":45,\"./kernel-value/dynamic-single-array\":46,\"./kernel-value/dynamic-single-array1d-i\":47,\"./kernel-value/dynamic-single-array2d-i\":48,\"./kernel-value/dynamic-single-array3d-i\":49,\"./kernel-value/dynamic-single-input\":50,\"./kernel-value/dynamic-unsigned-array\":51,\"./kernel-value/dynamic-unsigned-input\":52,\"./kernel-value/float\":53,\"./kernel-value/html-image\":54,\"./kernel-value/html-video\":55,\"./kernel-value/integer\":57,\"./kernel-value/memory-optimized-number-texture\":58,\"./kernel-value/number-texture\":59,\"./kernel-value/single-array\":60,\"./kernel-value/single-array1d-i\":61,\"./kernel-value/single-array2\":62,\"./kernel-value/single-array2d-i\":63,\"./kernel-value/single-array3\":64,\"./kernel-value/single-array3d-i\":65,\"./kernel-value/single-array4\":66,\"./kernel-value/single-input\":67,\"./kernel-value/unsigned-array\":68,\"./kernel-value/unsigned-input\":69}],40:[function(require,module,exports){\nconst { WebGLKernelValue } = require('./index');\nconst { Input } = require('../../../input');\n\nclass WebGLKernelArray extends WebGLKernelValue {\n  checkSize(width, height) {\n    if (!this.kernel.validate) return;\n    const { maxTextureSize } = this.kernel.constructor.features;\n    if (width > maxTextureSize || height > maxTextureSize) {\n      if (width > height) {\n        throw new Error(`Argument texture width of ${width} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else if (width < height) {\n        throw new Error(`Argument texture height of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      } else {\n        throw new Error(`Argument texture height and width of ${height} larger than maximum size of ${maxTextureSize} for your GPU`);\n      }\n    }\n  }\n\n  setup() {\n    this.requestTexture();\n    this.setupTexture();\n    this.defineTexture();\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n  }\n\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  destroy() {\n    if (this.prevArg) {\n      this.prevArg.delete();\n    }\n    this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelArray\n};\n},{\"../../../input\":110,\"./index\":56}],41:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};\n},{\"../../../utils\":114,\"./index\":56}],42:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"./html-image\":54}],43:[function(require,module,exports){\nconst { WebGLKernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGLKernelValueDynamicHTMLVideo extends WebGLKernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLVideo\n};\n},{\"./dynamic-html-image\":42}],44:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.checkSize(inputTexture.size[0], inputTexture.size[1]);\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"./memory-optimized-number-texture\":58}],45:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.checkSize(value.size[0], value.size[1]);\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"./number-texture\":59}],46:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"./single-array\":60}],47:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"./single-array1d-i\":61}],48:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"./single-array2d-i\":63}],49:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"./single-array3d-i\":65}],50:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"./single-input\":67}],51:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"./unsigned-array\":68}],52:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"./unsigned-input\":69}],53:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};\n},{\"../../../utils\":114,\"./index\":56}],54:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.checkSize(width, height);\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputImage.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"./array\":40}],55:[function(require,module,exports){\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueHTMLVideo extends WebGLKernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGLKernelValueHTMLVideo\n};\n},{\"./html-image\":54}],56:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n    this.prevArg = null;\n  }\n\n  get id() {\n    return `${this.origin}_${utils.sanitizeName(this.name)}`;\n  }\n\n  setup() {}\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n\n  getVariablePrecisionString() {\n    return this.kernel.getVariablePrecisionString(this.textureSize || undefined, this.tactic || undefined);\n  }\n\n  destroy() {}\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};\n},{\"../../../utils\":114,\"../../kernel-value\":35}],57:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};\n},{\"../../../utils\":114,\"./index\":56}],58:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nconst sameError = `Source and destination textures are the same.  Use immutable = true and manually cleanup kernel output texture memory with texture.delete()`;\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture,\n  sameError\n};\n\n},{\"../../../utils\":114,\"./array\":40}],59:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\nconst { sameError } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    const [width, height] = value.size;\n    this.checkSize(width, height);\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n    this.forceUploadEachRun = true;\n  }\n\n  setup() {\n    this.setupTexture();\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(inputTexture.constructor);\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n\n    const { kernel, context: gl } = this;\n    if (kernel.pipeline) {\n      if (kernel.immutable) {\n        kernel.updateTextureArgumentRefs(this, inputTexture);\n      } else {\n        if (kernel.texture && kernel.texture.texture === inputTexture.texture) {\n          throw new Error(sameError);\n        } else if (kernel.mappedTextures) {\n          const { mappedTextures } = kernel;\n          for (let i = 0; i < mappedTextures.length; i++) {\n            if (mappedTextures[i].texture === inputTexture.texture) {\n              throw new Error(sameError);\n            }\n          }\n        }\n      }\n    }\n\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};\n\n},{\"../../../utils\":114,\"./array\":40,\"./memory-optimized-number-texture\":58}],60:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};\n},{\"../../../utils\":114,\"./array\":40}],61:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"./array\":40}],62:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};\n},{\"../../../utils\":114,\"./index\":56}],63:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"./array\":40}],64:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};\n},{\"../../../utils\":114,\"./index\":56}],65:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"./array\":40}],66:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    if (this.origin === 'constants') return '';\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};\n},{\"../../../utils\":114,\"./index\":56}],67:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(input.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};\n},{\"../../../utils\":114,\"./array\":40}],68:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"./array\":40}],69:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('./array');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"./array\":40}],70:[function(require,module,exports){\nconst { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst mrud = require('../../plugins/math-random-uniformly-distributed');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [mrud];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n\n    this.maxTexSize = null;\n    this.onRequestSwitchKernel = null;\n\n    this.texture = null;\n    this.mappedTextures = null;\n    this.mergeSettings(source.settings || settings);\n\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n\n    this.textureCache = [];\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      if (settings.pluginNames) { \n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n\n    const onRequestTexture = () => {\n      return this.createTexture();\n    };\n    const onRequestIndex = () => {\n      return this.constantTextureCount + textureIndexes++;\n    };\n    const onUpdateValueMismatch = (constructor) => {\n      this.switchKernels({\n        type: 'argumentMismatch',\n        needed: constructor\n      });\n    };\n    const onRequestContextHandle = () => {\n      return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n    };\n\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture,\n        onRequestIndex,\n        onUpdateValueMismatch,\n        onRequestContextHandle,\n      });\n      this.kernelArguments.push(kernelArgument);\n      kernelArgument.setup();\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  createTexture() {\n    const texture = this.context.createTexture();\n    this.textureCache.push(texture);\n    return texture;\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    this.forceUploadKernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        tactic: this.tactic,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n      kernelValue.setup();\n      if (kernelValue.forceUploadEachRun) {\n        this.forceUploadKernelConstants.push(kernelValue);\n      }\n    }\n  }\n\n  build() {\n    if (this.built) return;\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n    this.rawValueFramebuffers = {};\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    this._setupOutputTexture();\n    if (\n      this.subKernels !== null &&\n      this.subKernels.length > 0\n    ) {\n      this._mappedTextureSwitched = {};\n      this._setupSubOutputTextures();\n    }\n    this.buildSignature(arguments);\n    this.built = true;\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  setupReturnTypes(functionBuilder) {\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize, forceUploadKernelConstants, context: gl } = this;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < forceUploadKernelConstants.length; i++) {\n      const constant = forceUploadKernelConstants[i];\n      constant.updateValue(this.constants[constant.name]);\n      if (this.switchingKernels) return;\n    }\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (this.immutable) {\n          this._replaceOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return this.immutable ? this.texture.clone() : this.texture;\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._replaceOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._replaceSubOutputTextures();\n      }\n      this.drawBuffers();\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n  }\n\n  getInternalFormat() {\n    return this.context.RGBA;\n  }\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n\n  _replaceOutputTexture() {\n    if (this.texture.beforeMutate() || this._textureSwitched) {\n      const gl = this.context;\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      this._textureSwitched = false;\n    }\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    const texture = this.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _replaceSubOutputTextures() {\n    const gl = this.context;\n    for (let i = 0; i < this.mappedTextures.length; i++) {\n      const mappedTexture = this.mappedTextures[i];\n      if (mappedTexture.beforeMutate() || this._mappedTextureSwitched[i]) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, mappedTexture.texture, 0);\n        this._mappedTextureSwitched[i] = false;\n      }\n    }\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      INJECTED_NATIVE: this._getInjectedNative(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString(),\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getVertShaderArtifactMap(args) {\n    return {\n      FLOAT_TACTIC_DECLARATION: this.getFloatTacticDeclaration(),\n      INT_TACTIC_DECLARATION: this.getIntTacticDeclaration(),\n      SAMPLER_2D_TACTIC_DECLARATION: this.getSampler2DTacticDeclaration(),\n      SAMPLER_2D_ARRAY_TACTIC_DECLARATION: this.getSampler2DArrayTacticDeclaration(),\n    };\n  }\n\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float divWithIntCheck(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x) / int(y));\n  }\n  return x / y;\n}\n\nfloat integerCorrectionModulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -(number - (divisor * floor(divWithIntCheck(number, divisor))));\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return number - (divisor * floor(divWithIntCheck(number, divisor)));\n}` :\n      '';\n  }\n\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getInjectedNative() {\n    return this.injectedNative || '';\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        if (!this.constants.hasOwnProperty(name)) continue;\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  getRawValueFramebuffer(width, height) {\n    if (!this.rawValueFramebuffers[width]) {\n      this.rawValueFramebuffers[width] = {};\n    }\n    if (!this.rawValueFramebuffers[width][height]) {\n      const framebuffer = this.context.createFramebuffer();\n      framebuffer.width = width;\n      framebuffer.height = height;\n      this.rawValueFramebuffers[width][height] = framebuffer;\n    }\n    return this.rawValueFramebuffers[width][height];\n  }\n\n  getKernelResultDeclaration() {\n    switch (this.returnType) {\n      case 'Array(2)':\n        return 'vec2 kernelResult';\n      case 'Array(3)':\n        return 'vec3 kernelResult';\n      case 'Array(4)':\n        return 'vec4 kernelResult';\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        return 'float kernelResult';\n      default:\n        if (this.graphical) {\n          return 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n  }\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const { subKernels } = this;\n    if (subKernels !== null) {\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z]*[0-9]?)*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.replaceArtifacts(this.constructor.vertexShader, this._getVertShaderArtifactMap(args));\n  }\n\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (!this.context) return;\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    for (const width in this.rawValueFramebuffers) {\n      for (const height in this.rawValueFramebuffers[width]) {\n        this.context.deleteFramebuffer(this.rawValueFramebuffers[width][height]);\n        delete this.rawValueFramebuffers[width][height];\n      }\n      delete this.rawValueFramebuffers[width];\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n    if (this.texture) {\n      this.texture.delete();\n      const textureCacheIndex = this.textureCache.indexOf(this.texture.texture);\n      if (textureCacheIndex > -1) {\n        this.textureCache.splice(textureCacheIndex, 1);\n      }\n      this.texture = null;\n    }\n    if (this.mappedTextures && this.mappedTextures.length) {\n      for (let i = 0; i < this.mappedTextures.length; i++) {\n        const mappedTexture = this.mappedTextures[i];\n        mappedTexture.delete();\n        const textureCacheIndex = this.textureCache.indexOf(mappedTexture.texture);\n        if (textureCacheIndex > -1) {\n          this.textureCache.splice(textureCacheIndex, 1);\n        }\n      }\n      this.mappedTextures = null;\n    }\n    if (this.kernelArguments) {\n      for (let i = 0; i < this.kernelArguments.length; i++) {\n        this.kernelArguments[i].destroy();\n      }\n    }\n    if (this.kernelConstants) {\n      for (let i = 0; i < this.kernelConstants.length; i++) {\n        this.kernelConstants[i].destroy();\n      }\n    }\n    while (this.textureCache.length > 0) {\n      const texture = this.textureCache.pop();\n      this.context.deleteTexture(texture);\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n    if (!this.gpu) return;\n    const i = this.gpu.kernels.indexOf(this);\n    if (i === -1) return;\n    this.gpu.kernels.splice(i, 1);\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};\n},{\"../../plugins/math-random-uniformly-distributed\":112,\"../../utils\":114,\"../function-builder\":9,\"../gl/kernel\":13,\"../gl/kernel-string\":12,\"./fragment-shader\":37,\"./function-node\":38,\"./kernel-value-maps\":39,\"./vertex-shader\":71}],71:[function(require,module,exports){\nconst vertexShader = `__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],72:[function(require,module,exports){\nconst fragmentShader = `#version 300 es\n__HEADER__;\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n__SAMPLER_2D_ARRAY_TACTIC_DECLARATION__;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nfloat atan2(float v1, float v2) {\n  if (v1 == 0.0 || v2 == 0.0) return 0.0;\n  return atan(v1 / v2);\n}\n\nfloat cbrt(float x) {\n  if (x >= 0.0) {\n    return pow(x, 1.0 / 3.0);\n  } else {\n    return -pow(x, 1.0 / 3.0);\n  }\n}\n\nfloat expm1(float x) {\n  return pow(${Math.E}, x) - 1.0; \n}\n\nfloat fround(highp float x) {\n  return x;\n}\n\nfloat imul(float v1, float v2) {\n  return float(int(v1) * int(v2));\n}\n\nfloat log10(float x) {\n  return log2(x) * (1.0 / log2(10.0));\n}\n\nfloat log1p(float x) {\n  return log(1.0 + x);\n}\n\nfloat _pow(float v1, float v2) {\n  if (v2 == 0.0) return 1.0;\n  return pow(v1, v2);\n}\n\nfloat _round(float x) {\n  return floor(x + 0.5);\n}\n\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nfloat modulo(float number, float divisor) {\n  if (number < 0.0) {\n    number = abs(number);\n    if (divisor < 0.0) {\n      divisor = abs(divisor);\n    }\n    return -mod(number, divisor);\n  }\n  if (divisor < 0.0) {\n    divisor = abs(divisor);\n  }\n  return mod(number, divisor);\n}\n\n__INJECTED_NATIVE__;\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};\n},{}],73:[function(require,module,exports){\nconst { utils } = require('../../utils');\nconst { WebGLFunctionNode } = require('../web-gl/function-node');\n\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    const name = utils.sanitizeName(idtNode.name);\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(name) > -1) {\n        retArr.push(`bool(user_${name})`);\n      } else {\n        retArr.push(`user_${name}`);\n      }\n    } else {\n      retArr.push(`user_${name}`);\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};\n},{\"../../utils\":114,\"../web-gl/function-node\":38}],74:[function(require,module,exports){\nconst { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHTMLImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHTMLImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueHTMLVideo } = require('./kernel-value/html-video');\nconst { WebGL2KernelValueDynamicHTMLVideo } = require('./kernel-value/dynamic-html-video');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueDynamicHTMLVideo,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLCanvas': WebGL2KernelValueHTMLImage,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHTMLImageArray,\n      'HTMLVideo': WebGL2KernelValueHTMLVideo,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  kernelValueMaps,\n  lookupKernelValueType\n};\n},{\"./kernel-value/boolean\":75,\"./kernel-value/dynamic-html-image\":77,\"./kernel-value/dynamic-html-image-array\":76,\"./kernel-value/dynamic-html-video\":78,\"./kernel-value/dynamic-memory-optimized-number-texture\":79,\"./kernel-value/dynamic-number-texture\":80,\"./kernel-value/dynamic-single-array\":81,\"./kernel-value/dynamic-single-array1d-i\":82,\"./kernel-value/dynamic-single-array2d-i\":83,\"./kernel-value/dynamic-single-array3d-i\":84,\"./kernel-value/dynamic-single-input\":85,\"./kernel-value/dynamic-unsigned-array\":86,\"./kernel-value/dynamic-unsigned-input\":87,\"./kernel-value/float\":88,\"./kernel-value/html-image\":90,\"./kernel-value/html-image-array\":89,\"./kernel-value/html-video\":91,\"./kernel-value/integer\":92,\"./kernel-value/memory-optimized-number-texture\":93,\"./kernel-value/number-texture\":94,\"./kernel-value/single-array\":95,\"./kernel-value/single-array1d-i\":96,\"./kernel-value/single-array2\":97,\"./kernel-value/single-array2d-i\":98,\"./kernel-value/single-array3\":99,\"./kernel-value/single-array3d-i\":100,\"./kernel-value/single-array4\":101,\"./kernel-value/single-input\":102,\"./kernel-value/unsigned-array\":103,\"./kernel-value/unsigned-input\":104}],75:[function(require,module,exports){\nconst { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};\n},{\"../../web-gl/kernel-value/boolean\":41}],76:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHTMLImageArray extends WebGL2KernelValueHTMLImageArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { width, height } = images[0];\n    this.checkSize(width, height);\n    this.dimensions = [width, height, images.length];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImageArray\n};\n},{\"../../../utils\":114,\"./html-image-array\":89}],77:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-html-image\":42}],78:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLVideo extends WebGL2KernelValueDynamicHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLVideo\n};\n},{\"../../../utils\":114,\"./dynamic-html-image\":77}],79:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-memory-optimized-number-texture\":44}],80:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-number-texture\":45}],81:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array\":95}],82:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array1d-i\":96}],83:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array2d-i\":98}],84:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-array3d-i\":100}],85:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.checkSize(this.textureSize[0], this.textureSize[1]);\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl2/kernel-value/single-input\":102}],86:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-array\":51}],87:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `uniform ${ variablePrecision } ivec2 ${this.sizeId}`,\n      `uniform ${ variablePrecision } ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/dynamic-unsigned-input\":52}],88:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/float\":53}],89:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelArray } = require('../../web-gl/kernel-value/array');\n\nclass WebGL2KernelValueHTMLImageArray extends WebGLKernelArray {\n  constructor(value, settings) {\n    super(value, settings);\n    this.checkSize(value[0].width, value[0].height);\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  defineTexture() {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2DArray ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImageArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/array\":40}],90:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/html-image\":54}],91:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGL2KernelValueHTMLImage } = require('./html-image');\n\nclass WebGL2KernelValueHTMLVideo extends WebGL2KernelValueHTMLImage {}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLVideo\n};\n},{\"../../../utils\":114,\"./html-image\":90}],92:[function(require,module,exports){\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    const variablePrecision = this.getVariablePrecisionString();\n    if (this.origin === 'constants') {\n      return `const ${ variablePrecision } int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform ${ variablePrecision } int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};\n},{\"../../web-gl/kernel-value/integer\":57}],93:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/memory-optimized-number-texture\":58}],94:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    const { id, sizeId, textureSize, dimensionsId, dimensions } = this;\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${id}`,\n      `${ variablePrecision } ivec2 ${sizeId} = ivec2(${textureSize[0]}, ${textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${dimensionsId} = ivec3(${dimensions[0]}, ${dimensions[1]}, ${dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/number-texture\":59}],95:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array\":60}],96:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array1d-i\":61}],97:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};\n},{\"../../web-gl/kernel-value/single-array2\":62}],98:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array2d-i\":63}],99:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};\n},{\"../../web-gl/kernel-value/single-array3\":64}],100:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch(value.constructor);\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-array3d-i\":65}],101:[function(require,module,exports){\nconst { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};\n},{\"../../web-gl/kernel-value/single-array4\":66}],102:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/single-input\":67}],103:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-array\":68}],104:[function(require,module,exports){\nconst { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    const variablePrecision = this.getVariablePrecisionString();\n    return utils.linesToString([\n      `uniform ${ variablePrecision } sampler2D ${this.id}`,\n      `${ variablePrecision } ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `${ variablePrecision } ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};\n},{\"../../../utils\":114,\"../../web-gl/kernel-value/unsigned-input\":69}],105:[function(require,module,exports){\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\nlet features = null;\n\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const gl = this.testContext;\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isSpeedTacticSupported: this.getIsSpeedTacticSupported(),\n      kernelMap: true,\n      isTextureFloat: true,\n      isDrawBuffers: true,\n      channelCount: this.getChannelCount(),\n      maxTextureSize: this.getMaxTextureSize(),\n      lowIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n      lowFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n      mediumIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n      mediumFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n      highIntPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n      highFloatPrecision: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static getMaxTextureSize() {\n    return testContext.getParameter(testContext.MAX_TEXTURE_SIZE);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl2', settings);\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n\n    this.checkTextureSize();\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    this.setupReturnTypes(functionBuilder);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getTextureFormat() {\n    const { context: gl } = this;\n    switch (this.getInternalFormat()) {\n      case gl.R32F:\n        return gl.RED;\n      case gl.RG32F:\n        return gl.RG;\n      case gl.RGBA32F:\n        return gl.RGBA;\n      case gl.RGBA:\n        return gl.RGBA;\n      default:\n        throw new Error('Unknown internal format');\n    }\n  }\n  getInternalFormat() {\n    const { context: gl } = this;\n\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              return gl.RGBA32F;\n            } else {\n              return gl.R32F;\n            }\n            case 'Array(2)':\n              return gl.RG32F;\n            case 'Array(3)': \n            case 'Array(4)':\n              return gl.RGBA32F;\n            default:\n              throw new Error('Unhandled return type');\n        }\n      }\n      return gl.RGBA32F;\n    }\n    return gl.RGBA;\n  }\n\n  _setupOutputTexture() {\n    const gl = this.context;\n    if (this.texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);\n      return;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const texture = gl.createTexture();\n    const texSize = this.texSize;\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    const format = this.getInternalFormat();\n    if (this.precision === 'single') {\n      gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, format, texSize[0], texSize[1], 0, format, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    this.texture = new this.TextureConstructor({\n      texture,\n      size: texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n      internalFormat: this.getInternalFormat(),\n      textureFormat: this.getTextureFormat(),\n      kernel: this,\n    });\n  }\n\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    if (this.mappedTextures) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, this.mappedTextures[i].texture, 0);\n      }\n      return;\n    }\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.mappedTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.createTexture();\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      const format = this.getInternalFormat();\n      if (this.precision === 'single') {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, format, texSize[0], texSize[1]);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\n      this.mappedTextures.push(new this.TextureConstructor({\n        texture,\n        size: texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n        internalFormat: this.getInternalFormat(),\n        textureFormat: this.getTextureFormat(),\n        kernel: this,\n      }));\n    }\n  }\n\n  _getHeaderString() {\n    return '';\n  }\n\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    const variablePrecision = this.getVariablePrecisionString(this.texSize, this.tactic);\n    if (subKernels === null || subKernels.length < 1) {\n      return `in ${ variablePrecision } vec2 vTexCoord;\\n`;\n    } else {\n      return `out ${ variablePrecision } vec2 vTexCoord;\\n`;\n    }\n  }\n\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  getKernelString() {\n    const result = [this.getKernelResultDeclaration()];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        'layout(location = 0) out vec4 data0'\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`,\n              `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        'out vec4 data0'\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`\n      );\n    }\n    return result;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    json.settings.threadDim = this.threadDim;\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};\n},{\"../../utils\":114,\"../function-builder\":9,\"../web-gl/kernel\":70,\"./fragment-shader\":72,\"./function-node\":73,\"./kernel-value-maps\":74,\"./vertex-shader\":106}],106:[function(require,module,exports){\nconst vertexShader = `#version 300 es\n__FLOAT_TACTIC_DECLARATION__;\n__INT_TACTIC_DECLARATION__;\n__SAMPLER_2D_TACTIC_DECLARATION__;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};\n},{}],107:[function(require,module,exports){\nconst lib = require('./index');\nconst GPU = lib.GPU;\nfor (const p in lib) {\n  if (!lib.hasOwnProperty(p)) continue;\n  if (p === 'GPU') continue; \n  GPU[p] = lib[p];\n}\n\nif (typeof window !== 'undefined') {\n  bindTo(window);\n}\nif (typeof self !== 'undefined') {\n  bindTo(self);\n}\n\nfunction bindTo(target) {\n  if (target.GPU) return;\n  Object.defineProperty(target, 'GPU', {\n    get() {\n      return GPU;\n    }\n  });\n}\n\nmodule.exports = lib;\n},{\"./index\":109}],108:[function(require,module,exports){\nconst { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { Kernel } = require('./backend/kernel');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    this.injectedNative = null;\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        if (!settings.nativeFunctions.hasOwnProperty(p)) continue;\n        const s = settings.nativeFunctions[p];\n        const { name, source } = s;\n        this.addNativeFunction(name, source, s);\n      }\n    }\n  }\n\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    const kernels = this.kernels;\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      console.warn('Falling back to CPU');\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        injectedNative: kernelRun.injectedNative,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(reasons, args, _kernel) {\n      if (_kernel.debug) {\n        console.warn('Switching kernels');\n      }\n      let newOutput = null;\n      if (_kernel.signature && !switchableKernels[_kernel.signature]) {\n        switchableKernels[_kernel.signature] = _kernel;\n      }\n      if (_kernel.dynamicOutput) {\n        for (let i = reasons.length - 1; i >= 0; i--) {\n          const reason = reasons[i];\n          if (reason.type === 'outputPrecisionMismatch') {\n            newOutput = reason.needed;\n          }\n        }\n      }\n\n      const Constructor = _kernel.constructor;\n      const argumentTypes = Constructor.getArgumentTypes(_kernel, args);\n      const signature = Constructor.getSignature(_kernel, argumentTypes);\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.onActivate(_kernel);\n        return existingKernel;\n      }\n\n      const newKernel = switchableKernels[signature] = new Constructor(source, {\n        argumentTypes,\n        constantTypes: _kernel.constantTypes,\n        graphical: _kernel.graphical,\n        loopMaxIterations: _kernel.loopMaxIterations,\n        constants: _kernel.constants,\n        dynamicOutput: _kernel.dynamicOutput,\n        dynamicArgument: _kernel.dynamicArguments,\n        context: _kernel.context,\n        canvas: _kernel.canvas,\n        output: newOutput || _kernel.output,\n        precision: _kernel.precision,\n        pipeline: _kernel.pipeline,\n        immutable: _kernel.immutable,\n        optimizeFloatMemory: _kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: _kernel.fixIntegerDivisionAccuracy,\n        functions: _kernel.functions,\n        nativeFunctions: _kernel.nativeFunctions,\n        injectedNative: _kernel.injectedNative,\n        subKernels: _kernel.subKernels,\n        strictIntegers: _kernel.strictIntegers,\n        debug: _kernel.debug,\n        gpu: _kernel.gpu,\n        validate,\n        returnType: _kernel.returnType,\n        tactic: _kernel.tactic,\n        onRequestFallback,\n        onRequestSwitchKernel,\n        texture: _kernel.texture,\n        mappedTextures: _kernel.mappedTextures,\n        drawBuffersMap: _kernel.drawBuffersMap,\n      });\n      newKernel.build.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      kernels.push(newKernel);\n      return newKernel;\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      injectedNative: this.injectedNative,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernel = new this.Kernel(source, mergedSettings);\n    const kernelRun = kernelRunShortcut(kernel);\n\n    if (!this.canvas) {\n      this.canvas = kernel.canvas;\n    }\n\n    if (!this.context) {\n      this.context = kernel.context;\n    }\n\n    kernels.push(kernel);\n\n    return kernelRun;\n  }\n\n  createKernelMap() {\n    let fn;\n    let settings;\n    const argument2Type = typeof arguments[arguments.length - 2];\n    if (argument2Type === 'function' || argument2Type === 'string') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    return this.createKernel(fn, settingsCopy);\n  }\n\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  setFunctions(functions) {\n    this.functions = functions;\n    return this;\n  }\n\n  setNativeFunctions(nativeFunctions) {\n    this.nativeFunctions = nativeFunctions;\n    return this;\n  }\n\n  addFunction(source, settings) {\n    this.functions.push({ source, settings });\n    return this;\n  }\n\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    this.nativeFunctions.push(Object.assign({ name, source }, settings));\n    return this;\n  }\n\n  injectNative(source) {\n    this.injectedNative = source;\n    return this;\n  }\n\n  destroy() {\n    return new Promise((resolve, reject) => {\n      if (!this.kernels) {\n        resolve();\n      }\n      setTimeout(() => {\n        try {\n          for (let i = 0; i < this.kernels.length; i++) {\n            this.kernels[i].destroy(true); \n          }\n          let firstKernel = this.kernels[0];\n          if (firstKernel) {\n            if (firstKernel.kernel) {\n              firstKernel = firstKernel.kernel;\n            }\n            if (firstKernel.constructor.destroyContext) {\n              firstKernel.constructor.destroyContext(this.context);\n            }\n          }\n        } catch (e) {\n          reject(e);\n        }\n        resolve();\n      }, 0);\n    });\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};\n},{\"./backend/cpu/kernel\":8,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/kernel\":70,\"./backend/web-gl2/kernel\":105,\"./kernel-run-shortcut\":111,\"./utils\":114,\"gpu-mock.js\":4}],109:[function(require,module,exports){\nconst { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelValueMaps: webGLKernelValueMaps } = require('./backend/web-gl/kernel-value-maps');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { kernelValueMaps: webGL2KernelValueMaps } = require('./backend/web-gl2/kernel-value-maps');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nconst { FunctionTracer } = require('./backend/function-tracer');\n\nconst mathRandom = require('./plugins/math-random-uniformly-distributed');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  webGL2KernelValueMaps,\n\n  WebGLFunctionNode,\n  WebGLKernel,\n  webGLKernelValueMaps,\n\n  GLKernel,\n  Kernel,\n  FunctionTracer,\n\n  plugins: {\n    mathRandom\n  }\n};\n},{\"./alias\":5,\"./backend/cpu/function-node\":6,\"./backend/cpu/kernel\":8,\"./backend/function-builder\":9,\"./backend/function-node\":10,\"./backend/function-tracer\":11,\"./backend/gl/kernel\":13,\"./backend/headless-gl/kernel\":34,\"./backend/kernel\":36,\"./backend/web-gl/function-node\":38,\"./backend/web-gl/kernel\":70,\"./backend/web-gl/kernel-value-maps\":39,\"./backend/web-gl2/function-node\":73,\"./backend/web-gl2/kernel\":105,\"./backend/web-gl2/kernel-value-maps\":74,\"./gpu\":108,\"./input\":110,\"./plugins/math-random-uniformly-distributed\":112,\"./texture\":113,\"./utils\":114}],110:[function(require,module,exports){\nclass Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n},{\"./utils\":114}],111:[function(require,module,exports){\nconst { utils } = require('./utils');\n\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    run = function() {\n      let result = kernel.run.apply(kernel, arguments);\n      if (kernel.switchingKernels) {\n        const reasons = kernel.resetSwitchingKernels();\n        const newKernel = kernel.onRequestSwitchKernel(reasons, arguments, kernel);\n        shortcut.kernel = kernel = newKernel;\n        result = newKernel.run.apply(newKernel, arguments);\n      }\n      if (kernel.renderKernels) {\n        return kernel.renderKernels();\n      } else if (kernel.renderOutput) {\n        return kernel.renderOutput();\n      } else {\n        return result;\n      }\n    };\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  if (shortcut.kernel) {\n    shortcut.kernel = kernel;\n    return;\n  }\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          shortcut.kernel[property].apply(shortcut.kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        shortcut[property] = function() {\n          return shortcut.kernel[property].apply(shortcut.kernel, arguments);\n        };\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => shortcut.kernel[property]);\n      shortcut.__defineSetter__(property, (value) => {\n        shortcut.kernel[property] = value;\n      });\n    }\n  }\n  shortcut.kernel = kernel;\n}\nmodule.exports = {\n  kernelRunShortcut\n};\n},{\"./utils\":114}],112:[function(require,module,exports){\nconst source = `// https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0,1]\nhighp float randomSeedShift = 1.0;\nhighp float slide = 1.0;\nuniform highp float randomSeed1;\nuniform highp float randomSeed2;\n\nhighp float nrand(highp vec2 n) {\n  highp float result = fract(sin(dot((n.xy + 1.0) * vec2(randomSeed1 * slide, randomSeed2 * randomSeedShift), vec2(12.9898, 78.233))) * 43758.5453);\n  randomSeedShift = result;\n  if (randomSeedShift > 0.5) {\n    slide += 0.00009; \n  } else {\n    slide += 0.0009;\n  }\n  return result;\n}`;\n\nconst name = 'math-random-uniformly-distributed';\n\nconst functionMatch = `Math.random()`;\n\nconst functionReplace = `nrand(vTexCoord)`;\n\nconst functionReturnType = 'Number';\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('randomSeed1', Math.random());\n  kernel.setUniform1f('randomSeed2', Math.random());\n};\n\nconst plugin = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};\n\nmodule.exports = plugin;\n},{}],113:[function(require,module,exports){\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n      kernel,\n      internalFormat,\n      textureFormat\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    if (!texture) throw new Error('settings property \"texture\" required.');\n    if (!kernel) throw new Error('settings property \"kernel\" required.');\n    this.texture = texture;\n    if (texture._refs) {\n      texture._refs++;\n    } else {\n      texture._refs = 1;\n    }\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = kernel;\n    this.type = type;\n    this._deleted = false;\n    this.internalFormat = internalFormat;\n    this.textureFormat = textureFormat;\n  }\n\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clone() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  delete() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  clear() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  Texture\n};\n},{}],114:[function(require,module,exports){\nconst acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nconst utils = {\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  getFunctionNameFromString(funcStr) {\n    const result = FUNCTION_NAME.exec(funcStr);\n    if (!result || result.length === 0) return null;\n    return result[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); \n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value.length > 0 && value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n    switch (value.nodeName) {\n      case 'IMG':\n        return 'HTMLImage';\n      case 'CANVAS':\n        return 'HTMLImage';\n      case 'VIDEO':\n        return 'HTMLVideo';\n    }\n    if (value.hasOwnProperty('type')) {\n      return value.type;\n    }\n    return 'Unknown';\n  },\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  flipPixels: (pixels, width, height) => {\n    const halfHeight = height / 2 | 0; \n    const bytesPerRow = width * 4;\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n    let indent = 0;\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body) + (ast.body[0].type === 'VariableDeclaration' ? ';' : '');\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          indent += 2;\n          for (let i = 0; i < ast.body.length; i++) {\n            const flat = flatten(ast.body[i]);\n            if (flat) {\n              result.push(' '.repeat(indent) + flat, ';\\n');\n            }\n          }\n          indent -= 2;\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          const declarations = utils.normalizeDeclarations(ast)\n            .map(flatten)\n            .filter(r => r !== null);\n          if (declarations.length < 1) {\n            return '';\n          } else {\n            return `${ast.kind} ${declarations.join(',')}`;\n          }\n          case 'VariableDeclarator':\n            if (ast.init.object && ast.init.object.type === 'ThisExpression') {\n              const lookup = thisLookup(ast.init.property.name, true);\n              if (lookup) {\n                return `${ast.id.name} = ${flatten(ast.init)}`;\n              } else {\n                return null;\n              }\n            } else {\n              return `${ast.id.name} = ${flatten(ast.init)}`;\n            }\n            case 'CallExpression': {\n              if (ast.callee.property.name === 'subarray') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n                return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              }\n              if (ast.callee.object.type === 'ThisExpression') {\n                functionDependencies.push(findDependency('this', ast.callee.property.name));\n                return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else if (ast.callee.object.name) {\n                const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n                if (foundSource === null) {\n                  return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                } else {\n                  functionDependencies.push(foundSource);\n                  return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n                }\n              } else if (ast.callee.object.type === 'MemberExpression') {\n                return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              } else {\n                throw new Error('unknown ast.callee');\n              }\n            }\n            case 'ReturnStatement':\n              return `return ${flatten(ast.argument)}`;\n            case 'BinaryExpression':\n              return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n            case 'UnaryExpression':\n              if (ast.prefix) {\n                return `${ast.operator} ${flatten(ast.argument)}`;\n              } else {\n                return `${flatten(ast.argument)} ${ast.operator}`;\n              }\n              case 'ExpressionStatement':\n                return `${flatten(ast.expression)}`;\n              case 'SequenceExpression':\n                return `(${flatten(ast.expressions)})`;\n              case 'ArrowFunctionExpression':\n                return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n              case 'Literal':\n                return ast.raw;\n              case 'Identifier':\n                return ast.name;\n              case 'MemberExpression':\n                if (ast.object.type === 'ThisExpression') {\n                  return thisLookup(ast.property.name);\n                }\n                if (ast.computed) {\n                  return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n                }\n                return flatten(ast.object) + '.' + flatten(ast.property);\n              case 'ThisExpression':\n                return 'this';\n              case 'NewExpression':\n                return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n              case 'ForStatement':\n                return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n              case 'AssignmentExpression':\n                return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n              case 'UpdateExpression':\n                return `${flatten(ast.argument)}${ast.operator}`;\n              case 'IfStatement':\n                return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n              case 'ThrowStatement':\n                return `throw ${flatten(ast.argument)}`;\n              case 'ObjectPattern':\n                return ast.properties.map(flatten).join(', ');\n              case 'ArrayPattern':\n                return ast.elements.map(flatten).join(', ');\n              case 'DebuggerStatement':\n                return 'debugger;';\n              case 'ConditionalExpression':\n                return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n              case 'Property':\n                if (ast.kind === 'init') {\n                  return flatten(ast.key);\n                }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        functionDependency ? flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + '\\n') : '';\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  normalizeDeclarations: (ast) => {\n    if (ast.type !== 'VariableDeclaration') throw new Error('Ast is not of type \"VariableDeclaration\"');\n    const normalizedDeclarations = [];\n    for (let declarationIndex = 0; declarationIndex < ast.declarations.length; declarationIndex++) {\n      const declaration = ast.declarations[declarationIndex];\n      if (declaration.id && declaration.id.type === 'ObjectPattern' && declaration.id.properties) {\n        const { properties } = declaration.id;\n        for (let propertyIndex = 0; propertyIndex < properties.length; propertyIndex++) {\n          const property = properties[propertyIndex];\n          if (property.value.type === 'ObjectPattern' && property.value.properties) {\n            for (let subPropertyIndex = 0; subPropertyIndex < property.value.properties.length; subPropertyIndex++) {\n              const subProperty = property.value.properties[subPropertyIndex];\n              if (subProperty.type === 'Property') {\n                normalizedDeclarations.push({\n                  type: 'VariableDeclarator',\n                  id: {\n                    type: 'Identifier',\n                    name: subProperty.key.name\n                  },\n                  init: {\n                    type: 'MemberExpression',\n                    object: {\n                      type: 'MemberExpression',\n                      object: declaration.init,\n                      property: {\n                        type: 'Identifier',\n                        name: property.key.name\n                      },\n                      computed: false\n                    },\n                    property: {\n                      type: 'Identifier',\n                      name: subProperty.key.name\n                    },\n                    computed: false\n                  }\n                });\n              } else {\n                throw new Error('unexpected state');\n              }\n            }\n          } else if (property.value.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: property.value && property.value.name ? property.value.name : property.key.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Identifier',\n                  name: property.key.name\n                },\n                computed: false\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else if (declaration.id && declaration.id.type === 'ArrayPattern' && declaration.id.elements) {\n        const { elements } = declaration.id;\n        for (let elementIndex = 0; elementIndex < elements.length; elementIndex++) {\n          const element = elements[elementIndex];\n          if (element.type === 'Identifier') {\n            normalizedDeclarations.push({\n              type: 'VariableDeclarator',\n              id: {\n                type: 'Identifier',\n                name: element.name\n              },\n              init: {\n                type: 'MemberExpression',\n                object: declaration.init,\n                property: {\n                  type: 'Literal',\n                  value: elementIndex,\n                  raw: elementIndex.toString(),\n                  start: element.start,\n                  end: element.end\n                },\n                computed: true\n              }\n            });\n          } else {\n            throw new Error('unexpected state');\n          }\n        }\n      } else {\n        normalizedDeclarations.push(declaration);\n      }\n    }\n    return normalizedDeclarations;\n  },\n\n  splitHTMLImageToRGB: (gpu, image) => {\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: { a: 'HTMLImage' },\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  splitRGBAToCanvases: (gpu, rgba, width, height) => {\n    const visualKernelR = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelR(rgba);\n\n    const visualKernelG = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelG(rgba);\n\n    const visualKernelB = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelB(rgba);\n\n    const visualKernelA = gpu.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, {\n      output: [width, height],\n      graphical: true,\n      argumentTypes: { v: 'Array2D(4)' }\n    });\n    visualKernelA(rgba);\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  },\n\n  getMinifySafeName: (fn) => {\n    try {\n      const ast = acorn.parse(`const value = ${fn.toString()}`);\n      const { init } = ast.body[0].declarations[0];\n      return init.body.name || init.body.body[0].argument.name;\n    } catch (e) {\n      throw new Error('Unrecognized function type.  Please use `() => yourFunctionVariableHere` or function() { return yourFunctionVariableHere; }');\n    }\n  },\n  sanitizeName: function(name) {\n    if (dollarSign.test(name)) {\n      name = name.replace(dollarSign, 'S_S');\n    }\n    if (doubleUnderscore.test(name)) {\n      name = name.replace(doubleUnderscore, 'U_U');\n    } else if (singleUnderscore.test(name)) {\n      name = name.replace(singleUnderscore, 'u_u');\n    }\n    return name;\n  }\n};\n\nconst dollarSign = /\\$/;\nconst doubleUnderscore = /__/;\nconst singleUnderscore = /_/;\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};\n},{\"./input\":110,\"./texture\":113,\"acorn\":1}]},{},[107])(107)\n});\n","import {\n  GPU,\n  IConstantsThis,\n  IGPUKernelSettings,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  Input,\n  ISubKernelObject,\n  KernelFunction,\n  KernelOutput,\n  OutputDimensions,\n  Texture,\n  ThreadFunction,\n  ThreadKernelVariable,\n} from 'gpu.js';\n\nlet gpuInstance: GPU | null = null;\n\n/**\n * Sets up the gpu.js instance\n */\nexport function setup(value: GPU): void {\n  gpuInstance = value;\n}\n\n/**\n * Destroys any existing gpu.js instance\n */\nexport function teardown(): void {\n  if (gpuInstance !== null) {\n    gpuInstance.destroy().catch(console.log);\n  }\n  gpuInstance = null;\n}\n\nexport function makeKernel<\n  ArgTypes extends ThreadKernelVariable[] = ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis = IConstantsThis\n>(\n  fn: KernelFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings\n): IKernelRunShortcut {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernel<ArgTypes, ConstantsTypes>(fn, settings)\n    .setPipeline(true);\n}\n\nexport function makeKernelMap<\n  ArgTypes extends ThreadKernelVariable[],\n  ConstantsTypes extends IConstantsThis\n>(\n  map: ISubKernelObject,\n  fn: ThreadFunction<ArgTypes, ConstantsTypes>,\n  settings: IGPUKernelSettings\n): IKernelMapRunShortcut<ISubKernelObject> {\n  let _gpuInstance: GPU = gpuInstance as GPU;\n  if (_gpuInstance === null) {\n    _gpuInstance = new GPU({ mode: 'gpu' });\n    setup(_gpuInstance);\n  }\n\n  return _gpuInstance\n    .createKernelMap<ArgTypes, ConstantsTypes>(map, fn, settings)\n    .setPipeline(true);\n}\n\n/**\n * Compiles a function into a gpu.js dev mode kernel\n */\n// export function makeDevKernel(\n//   fn: ThreadFunction,\n//   settings: makeKernelSettings\n// ): IKernelRunShortcut {\n//   if ('map' in settings) {\n//     throw new Error('map kernels are not supported by dev kernels');\n//   }\n//   const gpu = new GPU({ mode: 'dev' });\n//   return gpu.createKernel(fn, settings);\n// }\n\nexport function kernelInput(value: number[], size: OutputDimensions): Input {\n  return new Input(value, size);\n}\n\n/**\n * Deletes a gpu.js texture and frees VRAM\n */\nexport function release(possibleTexture: KernelOutput | Input): void {\n  if (possibleTexture instanceof Texture) {\n    possibleTexture.delete();\n  }\n}\n\n/**\n * Cleans ie sets all elements to 0 of a Texture or a js array\n */\nexport function clear(value: KernelOutput): void {\n  if (value instanceof Texture) {\n    value.clear();\n    return;\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      (value as number[]).fill(0);\n    } else if (typeof value[0][0] === 'number') {\n      for (let x = 0; x < value.length; x++) {\n        (value[x] as number[]).fill(0);\n      }\n      return;\n    } else if (typeof value[0][0][0] === 'number') {\n      // cube\n      for (let y = 0; y < value.length; y++) {\n        const row: number[][] = value[y] as number[][];\n        for (let x = 0; x < row.length; x++) {\n          row[x].fill(0);\n        }\n      }\n      return;\n    }\n  }\n  throw new Error('unhandled value');\n}\n\n/**\n * Clones a value\n */\nexport function clone(value: KernelOutput): KernelOutput {\n  if (value instanceof Texture) {\n    return value.clone();\n  }\n  if (value instanceof Float32Array) {\n    return value.slice(0);\n  }\n  if (Array.isArray(value)) {\n    if (typeof value[0] === 'number') {\n      return value.slice(0);\n    } else if (typeof value[0][0] === 'number') {\n      const matrix = new Array(value.length);\n      for (let x = 0; x < value.length; x++) {\n        matrix[x] = (value[x] as Float32Array).slice(0);\n      }\n      return matrix;\n    } else if (typeof value[0][0][0] === 'number') {\n      const cube = new Array(value.length);\n      for (let y = 0; y < value.length; y++) {\n        const row = value[y] as number[][];\n        const matrix = new Array(row.length);\n        for (let x = 0; x < row.length; x++) {\n          matrix[x] = row[x].slice(0);\n        }\n      }\n      return cube;\n    }\n  }\n  throw new Error('unhandled value');\n}\n","import { IKernelRunShortcut, IKernelFunctionThis } from 'gpu.js';\nimport { makeKernel } from '../utilities/kernel';\n\ninterface mse2dThis extends IKernelFunctionThis {\n  constants: { height: number; width: number; length: number };\n}\n\n/**\n * 2D Mean Squared Error\n */\nexport function mse2d(\n  this: mse2dThis,\n  errors: Array<[number, number]>\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.height; y++) {\n    for (let x = 0; x < this.constants.width; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / this.constants.length;\n}\n\nexport class MeanSquaredError {\n  /** Calculate the mean squared error given an array of errors */\n  calculate: IKernelRunShortcut;\n  /** Returns the sum of absolute values of previuous error and previous layer errors */\n  addAbsolute: IKernelRunShortcut;\n  /** Adds two erros */\n  add: IKernelRunShortcut;\n  /** Returns the ratio of sum of errors and length (ie the average) */\n  divide: IKernelRunShortcut;\n\n  constructor({ width, height }: { width: number; height: number }) {\n    this.calculate = makeKernel(mse2d, {\n      output: [1],\n      constants: {\n        width,\n        height,\n        length: width * height,\n      },\n      immutable: true,\n    });\n\n    this.addAbsolute = makeKernel(\n      function (prevError: number[], prevLayerErrors: number[][]) {\n        return prevError[0] + Math.abs(prevLayerErrors[0][0]);\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.add = makeKernel(\n      function (value1: number[], value2: number[]) {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n\n    this.divide = makeKernel(\n      function (length: number, mseSum: number[]) {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n        immutable: true,\n      }\n    );\n  }\n}\n","import {\n  IKernelRunShortcut,\n  Input,\n  Kernel,\n  KernelOutput,\n  Texture,\n  TextureArrayOutput,\n} from 'gpu.js';\nimport { IPraxis, IPraxisSettings } from '../praxis/base-praxis';\nimport { clear, release } from '../utilities/kernel';\n\nexport interface ILayerJSON {\n  width?: number;\n  height?: number;\n  depth?: number;\n  weights?: number[] | number[][] | number[][][] | null;\n  type: string;\n  inputLayerIndex?: number;\n  inputLayer1Index?: number;\n  inputLayer2Index?: number;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n}\n\nexport interface ILayer {\n  width: number;\n  height: number;\n  depth: number;\n  weights: KernelOutput | Input;\n  deltas: KernelOutput;\n  praxis: IPraxis | null;\n  errors?: KernelOutput | null;\n  setupKernels: (training?: boolean) => void;\n  predictKernel: IKernelRunShortcut | null;\n  compareKernel: IKernelRunShortcut | null;\n  settings: Partial<ILayerSettings>;\n  reuseKernels: (layer: ILayer) => void;\n  predict: (inputs?: KernelOutput) => void;\n  compare: (targetValues?: KernelOutput) => void;\n  learn: ((learningRate?: number) => void) | ((learningRate: number) => void);\n  toJSON: () => Partial<ILayerJSON>;\n  inputLayer?: ILayer;\n  inputLayer1?: ILayer;\n  inputLayer2?: ILayer;\n  index?: number;\n  id?: string;\n}\n\nexport interface ILayerSettings {\n  width?: number | null;\n  height?: number | null;\n  depth?: number | null;\n  weights?: KernelOutput | null;\n  deltas?: KernelOutput | null;\n  id?: string;\n  praxis?: IPraxis | null;\n  praxisOpts?: Partial<IPraxisSettings> | null;\n  initPraxis?:\n    | ((layerTemplate: ILayer, settings?: IPraxisSettings) => IPraxis)\n    | null;\n}\n\nexport const baseLayerDefaultSettings: ILayerSettings = {\n  width: 1,\n  height: 1,\n  depth: null,\n  weights: null,\n  deltas: null,\n  praxis: null,\n  praxisOpts: null,\n};\n\nexport type BaseLayerType = new (settings?: Partial<ILayerSettings>) => ILayer;\n\nexport class BaseLayer implements ILayer {\n  praxis: IPraxis | null = null;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  settings: Partial<ILayerSettings>;\n\n  get width(): number {\n    return this.settings.width ?? 0;\n  }\n\n  get height(): number {\n    return this.settings.height ?? 0;\n  }\n\n  get depth(): number {\n    return this.settings.depth ?? 0;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  get id(): string {\n    return this.settings.id ?? '';\n  }\n\n  set id(title: string) {\n    this.settings.id = title;\n  }\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    if (settings) {\n      this.settings = { ...baseLayerDefaultSettings, ...settings };\n    } else {\n      this.settings = { ...baseLayerDefaultSettings };\n    }\n    this.setupPraxis();\n  }\n\n  setupPraxis(): void {\n    const { initPraxis, praxis, praxisOpts } = this.settings;\n    if (!this.praxis) {\n      if (initPraxis) {\n        if (praxisOpts) {\n          this.praxis = initPraxis(this, praxisOpts);\n        } else {\n          this.praxis = initPraxis(this);\n        }\n      } else if (praxis) {\n        this.praxis = praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n        }\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value.dimensions) {\n        if (value.dimensions[0] !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.dimensions[1] !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      } else {\n        if (value[0].length !== this.width) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n        }\n        if (value.length !== this.height) {\n          throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n        }\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate(): void {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels(isTraining?: boolean): void {}\n\n  reuseKernels(layer: ILayer): void {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel') && layer.predictKernel !== null) {\n      if (!(layer.predictKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.predictKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel') && layer.compareKernel !== null) {\n      if (!(layer.compareKernel as Kernel).immutable) {\n        throw new Error(\n          `${layer.constructor.name}.compareKernel is not reusable, set kernel.immutable = true`\n        );\n      }\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict(inputs?: KernelOutput): void {}\n\n  compare(targetValues?: KernelOutput): void {}\n\n  learn(learningRate?: number): void {\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    if (!this.praxis) throw new Error('this.praxis not defined');\n    this.weights = this.praxis.run(this, learningRate as number);\n    release(oldWeights);\n    clear(this.deltas);\n  }\n\n  toArray(): TextureArrayOutput {\n    return Array.isArray(this.weights)\n      ? this.weights\n      : (this.weights as Texture).toArray();\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  static toJSON(layer: ILayer): Partial<ILayerJSON> {\n    const { weights } = layer;\n    return {\n      width: layer.width,\n      height: layer.height,\n      depth: layer.depth,\n      weights: toUntypedArray(\n        (weights && weights instanceof Texture\n          ? weights.toArray()\n          : weights) as\n          | Float32Array\n          | Float32Array[]\n          | Float32Array[][]\n          | number[]\n          | number[][]\n          | number[][][]\n          | null\n      ),\n      type: layer.constructor.name,\n      praxisOpts: layer.praxis ? layer.praxis.toJSON() : null,\n    };\n  }\n}\n\nfunction toUntypedArray(\n  weights:\n    | Float32Array\n    | Float32Array[]\n    | Float32Array[][]\n    | number[]\n    | number[][]\n    | number[][][]\n    | null\n): number[][][] | number[][] | number[] | null {\n  if (weights === null) return null;\n  if (Array.isArray(weights)) {\n    if (typeof weights[0] === 'number') {\n      return weights as number[];\n    } else if (Array.isArray(weights[0]) && typeof weights[0][0] === 'number') {\n      return weights as number[][];\n    } else if (\n      Array.isArray(weights[0][0]) &&\n      typeof weights[0][0][0] === 'number'\n    ) {\n      return weights as number[][][];\n    } else if (weights[0] instanceof Float32Array) {\n      const matrix = weights as Float32Array[];\n      return matrix.map((row: Float32Array) => {\n        return Array.from(row);\n      });\n    } else if (weights[0][0] instanceof Float32Array) {\n      const cube = weights as Float32Array[][];\n      return cube.map((matrix: Float32Array[]): number[][] => {\n        return matrix.map((row: Float32Array): number[] => {\n          return Array.from(row);\n        });\n      });\n    }\n  } else if (weights) {\n    return Array.from(weights);\n  }\n  throw new Error('unexpected value');\n}\n","/**\n * Returns an array of zeros\n */\nexport function zeros(size: number): Float32Array {\n  return new Float32Array(size);\n}\n","import { zeros } from './zeros';\n\n/**\n * Returns a 2D tensor(matrix) of zeros\n */\nexport function zeros2D(width: number, height: number): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n}\n","import { zeros2D } from './zeros-2d';\n\n/**\n * Returns a 3D tensor of arrays\n */\nexport function zeros3D(\n  width: number,\n  height: number,\n  depth: number\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\n\nexport type ActivationType = new (\n  inputLayer: ILayer,\n  settings: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Activation extends BaseLayer {\n  inputLayer: ILayer;\n\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    const { width, height, depth } = this;\n    this.predictKernel = null;\n    this.compareKernel = null;\n    this.validate();\n    if (depth > 0) {\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else if (height > 0) {\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n    this.setupPraxis();\n  }\n}\n","import { KernelOutput } from 'gpu.js';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport interface IFilterSettings extends ILayerSettings {\n  filterCount: number;\n  filterWidth: number;\n  filterHeight: number;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport type FilterType = new (\n  settings: Partial<IFilterSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Filter extends BaseLayer {\n  get width(): number {\n    return this.inputLayer.width;\n  }\n\n  get height(): number {\n    return this.inputLayer.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer.depth;\n  }\n\n  get filterCount(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterWidth(): number {\n    return this.settings.filterWidth as number;\n  }\n\n  get filterHeight(): number {\n    return this.settings.filterHeight as number;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  settings: Partial<IFilterSettings>;\n  inputLayer: ILayer;\n  constructor(settings: Partial<IFilterSettings>, inputLayer: ILayer) {\n    super();\n    this.settings = settings;\n    this.inputLayer = inputLayer;\n  }\n}\n","import { BaseLayer, ILayer, ILayerJSON, ILayerSettings } from './base-layer';\nimport { IKernelRunShortcut, Input, KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport type InternalType = new (settings: Partial<ILayerSettings>) => ILayer;\n\nexport abstract class Internal implements ILayer {\n  abstract settings: ILayerSettings;\n  abstract predict(inputs?: KernelOutput): void;\n  abstract compare(targetValues?: KernelOutput): void;\n  abstract learn(learningRate?: number): void;\n  abstract setupKernels(training?: boolean): void;\n  predictKernel: IKernelRunShortcut | null = null;\n  compareKernel: IKernelRunShortcut | null = null;\n  praxis: IPraxis | null = null;\n\n  get width(): number {\n    return this.settings.width as number;\n  }\n\n  get height(): number {\n    return this.settings.height as number;\n  }\n\n  get depth(): number {\n    return this.settings.depth as number;\n  }\n\n  get weights(): KernelOutput | Input {\n    return this.settings.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput | Input) {\n    this.settings.weights = weights as KernelOutput;\n  }\n\n  get deltas(): KernelOutput {\n    return this.settings.deltas as KernelOutput;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    this.settings.deltas = deltas;\n  }\n\n  toJSON(): Partial<ILayerJSON> {\n    return BaseLayer.toJSON(this);\n  }\n\n  abstract reuseKernels(layer: ILayer): void;\n}\n","import { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport type ModifierType = new (\n  inputLayer: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport class Modifier extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings?: Partial<ILayerSettings>) {\n    super({\n      ...settings,\n      width: inputLayer.width,\n      height: inputLayer.height,\n      depth: inputLayer.depth,\n    });\n    this.inputLayer = inputLayer;\n  }\n\n  validate(): void {\n    super.validate();\n\n    if (this.width !== this.inputLayer.width) {\n      throw new Error(\n        `width of ${this.width} does not match inputLayer.width of ${this.inputLayer.width}`\n      );\n    }\n\n    if (this.height !== this.inputLayer.height) {\n      throw new Error(\n        `height of ${this.height} does not match inputLayer.height of ${this.inputLayer.height}`\n      );\n    }\n\n    if (this.depth !== (this.inputLayer.depth ?? 0)) {\n      throw new Error(\n        `depth of ${this.depth} does not match inputLayer.depth of ${this.inputLayer.depth}`\n      );\n    }\n  }\n}\n","import { BaseLayer, ILayerSettings, ILayer } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\n\nexport type OperatorType = new (\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: Partial<ILayerSettings>\n) => ILayer;\n\nexport abstract class Operator extends BaseLayer {\n  inputLayer1: ILayer;\n  inputLayer2: ILayer;\n  constructor(\n    inputLayer1: ILayer,\n    inputLayer2: ILayer,\n    settings?: Partial<ILayerSettings>\n  ) {\n    super(settings);\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis();\n  }\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nimport { makeKernel, release, clone, clear } from '../utilities/kernel';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport function compare1D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[]\n): number {\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  targetValues: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] -\n    targetValues[this.thread.y][this.thread.x]\n  );\n}\n\nexport type TargetType = new (\n  settings: Partial<ILayerSettings>,\n  inputLayer: ILayer\n) => ILayer;\n\nexport class Target extends BaseLayer {\n  errors: KernelOutput;\n  inputLayer: ILayer;\n  constructor(settings: Partial<ILayerSettings>, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    if (this.depth) {\n      throw new Error('Target layer not implemented for depth');\n    } else if (this.height) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.compareKernel = makeKernel(compare1D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    } else {\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    // TODO: should we clone here?\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n    clear(this.deltas);\n  }\n\n  compare(targetValues: KernelOutput): void {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    release(this.deltas);\n    release(this.errors);\n    release(this.inputLayer.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      targetValues\n    );\n    this.inputLayer.deltas = clone(this.deltas);\n    this.errors = clone(this.deltas);\n  }\n\n  setupPraxis(): void {}\n}\n\nexport function target(settings: ILayerSettings, inputLayer: ILayer): Target {\n  return new Target(settings, inputLayer);\n}\n","import { BaseLayer, ILayer, ILayerSettings } from './base-layer';\n\nexport { Activation } from './activation';\nexport { Filter } from './filter';\nexport { Internal } from './internal';\nexport { Modifier } from './modifier';\nexport { Operator } from './operator';\nexport { Target } from './target';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class InternalModel {}\n\nexport type EntryPointType = new (settings: Partial<ILayerSettings>) => ILayer;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class EntryPoint extends BaseLayer {}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Model extends BaseLayer {}\n","import { KernelOutput } from 'gpu.js';\n\nexport interface INumberHash {\n  [character: string]: number;\n}\n\nexport interface INumberArray {\n  length: number;\n  buffer?: ArrayBuffer;\n  [index: number]: number;\n}\n\nexport type InputOutputValue = INumberArray | Partial<INumberHash>;\n\nexport interface ITrainingDatum {\n  input: InputOutputValue | InputOutputValue[] | KernelOutput;\n  output: InputOutputValue | InputOutputValue[] | KernelOutput;\n}\n\nexport type FormattableData =\n  | number\n  | ITrainingDatum\n  | InputOutputValue\n  | InputOutputValue[];\n\n/* Functions for turning sparse hashes into arrays and vice versa */\nexport const lookup = {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  toTable(hashes: INumberHash[]): INumberHash {\n    const hash = hashes.reduce((memo, hash) => {\n      return Object.assign(memo, hash);\n    }, {});\n\n    return lookup.toHash(hash);\n  },\n\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   */\n  toTable2D(objects2D: INumberHash[][]): INumberHash {\n    const table: INumberHash = {};\n    let valueIndex = 0;\n    for (let i = 0; i < objects2D.length; i++) {\n      const objects = objects2D[i];\n      for (let j = 0; j < objects.length; j++) {\n        const object = objects[j];\n        for (const p in object) {\n          if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n            table[p] = valueIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toInputTable2D(\n    data: Array<{ input: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const input = data[dataIndex].input;\n      for (let i = 0; i < input.length; i++) {\n        const object = input[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  toOutputTable2D(\n    data: Array<{ output: Array<{ [key: string]: number }> }>\n  ): INumberHash {\n    const table: INumberHash = {};\n    let tableIndex = 0;\n    for (let dataIndex = 0; dataIndex < data.length; dataIndex++) {\n      const output = data[dataIndex].output;\n      for (let i = 0; i < output.length; i++) {\n        const object = output[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n    }\n    return table;\n  },\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   */\n  toHash(hash: INumberHash): INumberHash {\n    const lookup: INumberHash = {};\n    let index = 0;\n    const keys = Object.keys(hash);\n    for (let i = 0; i < keys.length; i++) {\n      lookup[keys[i]] = index++;\n    }\n    return lookup;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   */\n  toArray(\n    lookup: INumberHash,\n    object: INumberHash,\n    arrayLength: number\n  ): Float32Array {\n    const result = new Float32Array(arrayLength);\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n    }\n    return result;\n  },\n\n  toArrayShort(lookup: INumberHash, object: INumberHash): Float32Array {\n    const result = [];\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (!object.hasOwnProperty(p)) break;\n      result[lookup[p]] = object[p];\n    }\n    return Float32Array.from(result);\n  },\n\n  toArrays(\n    lookup: INumberHash,\n    objects: INumberHash[],\n    arrayLength: number\n  ): Float32Array[] {\n    const result = [];\n    for (let i = 0; i < objects.length; i++) {\n      result.push(this.toArray(lookup, objects[i], arrayLength));\n    }\n    return result;\n  },\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookup\n   * @param {Array} array\n   * @returns {Object}\n   */\n  toObject(lookup: INumberHash, array: number[] | Float32Array): INumberHash {\n    const object: INumberHash = {};\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      object[p] = array[lookup[p]];\n    }\n    return object;\n  },\n\n  toObjectPartial(\n    lookup: INumberHash,\n    array: number[] | Float32Array,\n    offset = 0,\n    limit = 0\n  ): INumberHash {\n    const object: INumberHash = {};\n    let i = 0;\n    for (const p in lookup) {\n      if (!lookup.hasOwnProperty(p)) continue;\n      if (offset > 0) {\n        if (i++ < offset) continue;\n      }\n      if (limit > 0) {\n        if (i++ >= limit) continue;\n      }\n      object[p] = array[lookup[p] - offset];\n    }\n    return object;\n  },\n\n  dataShape(data: FormattableData[] | FormattableData): string[] {\n    const shape = [];\n    let lastData;\n    if (data.hasOwnProperty('input')) {\n      shape.push('datum');\n      lastData = (data as ITrainingDatum).input;\n    } else if (Array.isArray(data)) {\n      if (\n        (data as ITrainingDatum[])[0] &&\n        (data as ITrainingDatum[])[0].input\n      ) {\n        shape.push('array', 'datum');\n        lastData = (data as ITrainingDatum[])[0].input;\n      } else if (Array.isArray(data[0])) {\n        shape.push('array');\n        lastData = data[0];\n      } else {\n        lastData = data as\n          | InputOutputValue\n          | InputOutputValue[]\n          | InputOutputValue[][];\n      }\n    } else {\n      lastData = data as\n        | InputOutputValue\n        | InputOutputValue[]\n        | InputOutputValue[][];\n    }\n\n    let p;\n    while (lastData) {\n      p = Object.keys(lastData)[0];\n      if (\n        Array.isArray(lastData) ||\n        typeof (lastData as Float32Array).buffer === 'object'\n      ) {\n        shape.push('array');\n        const possibleNumber:\n          | number\n          | INumberArray = (lastData as INumberArray[])[parseInt(p)];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else if (\n        typeof lastData === 'object' &&\n        typeof (lastData as Float32Array).buffer !== 'object'\n      ) {\n        shape.push('object');\n        const possibleNumber: number | INumberHash = (lastData as INumberHash)[\n          p\n        ];\n        if (typeof possibleNumber === 'number') {\n          shape.push('number');\n          break;\n        } else {\n          lastData = possibleNumber;\n        }\n      } else {\n        throw new Error('unhandled signature');\n      }\n    }\n    return shape;\n  },\n\n  addKeys(value: number[] | INumberHash, table: INumberHash): INumberHash {\n    if (Array.isArray(value)) return table;\n    let i = Object.keys(table).length;\n    for (const p in value) {\n      if (!value.hasOwnProperty(p)) continue;\n      if (table.hasOwnProperty(p)) continue;\n      table[p] = i++;\n    }\n    return table;\n  },\n};\n","import { ILayer } from '../layer';\nimport { IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface ILayerTemplate {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisJSON {\n  width: number;\n  height: number;\n  depth: number;\n}\n\nexport interface IPraxisSettings {\n  width?: number;\n  height?: number;\n  depth?: number;\n  kernel?: IKernelRunShortcut | null;\n}\n\nexport interface IPraxis {\n  layerTemplate: ILayerTemplate | null;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n  setupKernels: () => void;\n  width: number;\n  height: number;\n  depth: number;\n  run:\n    | ((layer: ILayer, learningRate: number) => KernelOutput)\n    | ((layer: ILayer, learningRate?: number) => KernelOutput);\n  toJSON: () => Partial<IPraxisSettings>;\n}\n\nexport abstract class BasePraxis implements IPraxis {\n  layerTemplate: ILayerTemplate;\n  kernel: IKernelRunShortcut | null;\n  settings: Partial<IPraxisSettings>;\n\n  get width(): number {\n    return this.layerTemplate.width;\n  }\n\n  get height(): number {\n    return this.layerTemplate.height;\n  }\n\n  get depth(): number {\n    return this.layerTemplate.depth;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IPraxisSettings> = {}\n  ) {\n    this.layerTemplate = layerTemplate;\n    this.settings = { ...settings };\n    this.kernel = null;\n  }\n\n  setupKernels(): void {}\n\n  reuseKernels(praxis: IPraxis): void {\n    if (praxis.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.width} is not ${this.width}`\n      );\n    }\n    if (praxis.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${praxis.height} is not ${this.height}`\n      );\n    }\n    if (praxis.hasOwnProperty('kernel')) {\n      this.kernel = praxis.kernel;\n    }\n  }\n\n  abstract run(layer: ILayer, learningRate?: number): KernelOutput;\n\n  toJSON(): Partial<IPraxisSettings> {\n    return { ...this.settings };\n  }\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\n\nexport interface IUpdateThis extends IKernelFunctionThis {\n  constants: {\n    learningRate: number;\n  };\n}\n\nexport function update(\n  this: IUpdateThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] +\n    this.constants.learningRate * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport interface IArthurDeviationBiasesSettings extends IPraxisSettings {\n  learningRate?: number;\n}\n\nexport const defaultSettings = {\n  learningRate: 0.3,\n};\n\nexport class ArthurDeviationBiases extends BasePraxis {\n  settings: IArthurDeviationBiasesSettings;\n  kernel: IKernelRunShortcut | null;\n  constructor(layer: ILayer, settings?: IArthurDeviationBiasesSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.kernel = null;\n  }\n\n  run(layer: ILayer): KernelOutput {\n    return (this.kernel as IKernelRunShortcut)(layer.weights, layer.deltas);\n  }\n\n  setupKernels(): void {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.settings.learningRate,\n      },\n    });\n  }\n}\n\nexport function arthurDeviationBiases(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationBiasesSettings>\n): ArthurDeviationBiases {\n  return new ArthurDeviationBiases(layer, settings);\n}\n","import { makeKernelMap } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { BasePraxis, IPraxisSettings } from './base-praxis';\nimport { ILayer } from '../layer/base-layer';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  ISubKernelsResults,\n  KernelOutput,\n} from 'gpu.js';\n\nexport function updateChange(value: number): number {\n  return value;\n}\n\nexport interface IUpdateConstants extends IConstantsThis {\n  learningRate: number;\n  momentum: number;\n}\n\nexport function update(\n  this: IKernelFunctionThis<IUpdateConstants>,\n  changes: number[][],\n  weights: number[][],\n  incomingWeights: number[][],\n  inputDeltas: number[][]\n): number {\n  const lastChange: number = changes[this.thread.y][this.thread.x];\n  const inputDelta: number = inputDeltas[this.thread.y][0];\n  const weight: number = weights[this.thread.y][this.thread.x];\n  const incoming: number = incomingWeights[this.thread.x][0];\n\n  const change =\n    this.constants.learningRate * inputDelta * incoming +\n    this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nexport interface IArthurDeviationWeightsSettings extends IPraxisSettings {\n  learningRate?: number;\n  momentum?: number;\n  weightsLayer?: ILayer | null;\n  incomingLayer?: ILayer | null;\n  deltaLayer?: ILayer | null;\n}\n\nexport interface IKernelMapResults extends ISubKernelsResults {\n  changes: KernelOutput;\n}\n\nexport const defaultSettings: IArthurDeviationWeightsSettings = {\n  learningRate: 0.3,\n  momentum: 0.1,\n  weightsLayer: null,\n  incomingLayer: null,\n  deltaLayer: null,\n};\n\nexport class ArthurDeviationWeights extends BasePraxis {\n  changes: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: IArthurDeviationWeightsSettings;\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get momentum(): number {\n    return this.settings.momentum as number;\n  }\n\n  get weightsLayer(): ILayer {\n    return this.settings.weightsLayer as ILayer;\n  }\n\n  set weightsLayer(layer: ILayer) {\n    this.settings.weightsLayer = layer;\n  }\n\n  get deltaLayer(): ILayer {\n    return this.settings.deltaLayer as ILayer;\n  }\n\n  set deltaLayer(layer: ILayer) {\n    this.settings.deltaLayer = layer;\n  }\n\n  get incomingLayer(): ILayer {\n    return this.settings.incomingLayer as ILayer;\n  }\n\n  set incomingLayer(layer: ILayer) {\n    this.settings.incomingLayer = layer;\n  }\n\n  constructor(layer: ILayer, settings?: IArthurDeviationWeightsSettings) {\n    super(layer);\n    this.settings = { ...defaultSettings, ...settings };\n    this.changes = zeros2D(layer.width, layer.height);\n  }\n\n  run(): KernelOutput {\n    const output = (this.kernelMap as IKernelMapRunShortcut<IKernelMapResults>)(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap<Parameters<typeof update>, IUpdateConstants>(\n      {\n        changes: updateChange,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          learningRate: this.learningRate,\n          momentum: this.momentum,\n        },\n      }\n    );\n  }\n}\n\nexport function arthurDeviationWeights(\n  layer: ILayer,\n  settings?: Partial<IArthurDeviationWeightsSettings>\n): ArthurDeviationWeights {\n  return new ArthurDeviationWeights(layer, settings);\n}\n","import { BasePraxis, ILayerTemplate, IPraxisSettings } from './base-praxis';\n\nimport { makeKernelMap, release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer } from '../layer';\n\nexport function getMomentum(\n  delta: number,\n  decay: number,\n  previousMomentum: number\n): number {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nexport function clipByValue(value: number, max: number, min: number): number {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\ninterface IUpdate extends IConstantsThis {\n  clipValue: number;\n  decayRate: number;\n  smoothEps: number;\n  regularizationStrength: number;\n}\n/**\n * @description Momentum Root Mean Square Propagation Function\n */\nexport function update(\n  this: IKernelFunctionThis<IUpdate>,\n  weights: number[][],\n  deltas: number[][],\n  previousMomenta: number[][]\n): number {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomenta[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nexport function isClippedByValue(\n  value: number,\n  max: number,\n  min: number\n): number {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface IMomentumRootMeanSquaredPropagationSettings\n  extends IPraxisSettings {\n  decayRate?: number;\n  regularizationStrength?: number;\n  learningRate?: number;\n  smoothEps: number;\n  clipValue: number;\n}\n\nexport const defaults: IMomentumRootMeanSquaredPropagationSettings = {\n  decayRate: 0.999,\n  regularizationStrength: 0.0001,\n  learningRate: 0.01,\n  smoothEps: 1e-8,\n  clipValue: 5,\n};\n\nexport class MomentumRootMeanSquaredPropagation extends BasePraxis {\n  momenta: KernelOutput;\n  kernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>;\n\n  get clipValue(): number {\n    return this.settings.clipValue as number;\n  }\n\n  get decayRate(): number {\n    return this.settings.decayRate as number;\n  }\n\n  get learningRate(): number {\n    return this.settings.learningRate as number;\n  }\n\n  get regularizationStrength(): number {\n    return this.settings.regularizationStrength as number;\n  }\n\n  get smoothEps(): number {\n    return this.settings.smoothEps as number;\n  }\n\n  constructor(\n    layerTemplate: ILayerTemplate,\n    settings: Partial<IMomentumRootMeanSquaredPropagationSettings> = {}\n  ) {\n    super(layerTemplate);\n    this.settings = { ...defaults, ...settings };\n    this.momenta = zeros2D(layerTemplate.width, layerTemplate.height);\n  }\n\n  run(layer: ILayer): KernelOutput {\n    const { momenta, result } = (this.kernelMap as IKernelMapRunShortcut<\n      ISubKernelObject\n    >)(layer.weights, layer.deltas, this.momenta);\n    release(this.momenta);\n    this.momenta = momenta;\n    return result;\n  }\n\n  setupKernels(): void {\n    this.kernelMap = makeKernelMap(\n      {\n        momenta: getMomentum,\n      },\n      update,\n      {\n        output: [this.width, this.height],\n        constants: {\n          clipValue: this.clipValue,\n          decayRate: this.decayRate,\n          learningRate: this.learningRate,\n          regularizationStrength: this.regularizationStrength,\n          smoothEps: this.smoothEps,\n        },\n        functions: [clipByValue],\n        immutable: true,\n      }\n    );\n  }\n}\n\nexport function momentumRootMeanSquaredPropagation(\n  layer: ILayer,\n  settings: Partial<IMomentumRootMeanSquaredPropagationSettings>\n): MomentumRootMeanSquaredPropagation {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n */\nexport const MRmsProp = MomentumRootMeanSquaredPropagation;\nexport const mRmsProp = momentumRootMeanSquaredPropagation;\n","import { ILayer } from '../layer/base-layer';\n\nexport function traverseLayersFrom(\n  layer: ILayer,\n  cb: (layer: ILayer) => void\n): void {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(\n      (layer as ILayer & { inputLayer: ILayer }).inputLayer,\n      cb\n    );\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer1: ILayer }).inputLayer1,\n        cb\n      );\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(\n        (layer as ILayer & { inputLayer2: ILayer }).inputLayer2,\n        cb\n      );\n    }\n  }\n  cb(layer);\n}\n","import { ILayer } from '../layer/base-layer';\nimport { traverseLayersFrom } from './traverse-layers-from';\n\nexport function flattenLayers(layers: ILayer[]): ILayer[] {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], (layer: ILayer) => {\n      if (!result.includes(layer)) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","import { ILayer } from '../layer/base-layer';\n\nexport function checkSameSize(layer1: ILayer, layer2: ILayer): void {\n  if (layer1.width !== layer2.width) {\n    throw new Error(\n      `Layer width mismatch of ${layer1.width} and ${layer2.width}`\n    );\n  }\n\n  if (layer1.height !== layer2.height) {\n    throw new Error(\n      `Layer height mismatch of ${layer1.height} and ${layer2.height}`\n    );\n  }\n}\n","import { makeKernel, release, clone, clear } from '../utilities/kernel';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { Operator } from './operator';\nimport { IKernelFunctionThis, IKernelRunShortcut, Texture } from 'gpu.js';\nimport { ILayerSettings, ILayer } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputWeights1: number[][],\n  inputWeights2: number[][]\n): number {\n  return (\n    inputWeights1[this.thread.y][this.thread.x] +\n    inputWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport class Add extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    // TODO: Do we need release and clone here?\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = clone(this.deltas);\n    this.inputLayer2.deltas = clone(this.deltas);\n  }\n\n  learn(): void {}\n}\n\nexport function add(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Add {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n","export function randomWeight(): number {\n  return Math.random() * 0.4 - 0.2;\n}\n","/**\n * Returns a random float between given min and max bounds (inclusive)\n * @param min Minimum value of the ranfom float\n * @param max Maximum value of the random float\n */\nexport function randomFloat(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Complicated math. All you need to know is that it returns a random number.\n * More info: https://en.wikipedia.org/wiki/Normal_distribution\n */\nexport function gaussRandom(): number {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\n/**\n * Returns a random integer between given min and max bounds\n * @param min Minimum value of the random integer\n * @param max Maximum value of the random integer\n */\nexport function randomInteger(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\n/**\n * If you know what this is: https://en.wikipedia.org/wiki/Normal_distribution\n * @param mu\n * @param std\n */\nexport function randomN(mu: number, std: number): number {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n","import { randomWeight } from './random-weight';\nimport { randomFloat } from './random';\n\n/**\n * Returns an array of given size, full of randomness\n */\nexport function randos(size: number, std: number | null = null): Float32Array {\n  const array: Float32Array = new Float32Array(size);\n  if (std === null) {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomWeight();\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      array[i] = randomFloat(-std, std);\n    }\n  }\n  return array;\n}\n\n/**\n * Returns a 2D matrix of given size, full of randomness\n */\nexport function randos2D(\n  width: number,\n  height: number,\n  std?: number | null\n): Float32Array[] {\n  const result: Float32Array[] = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width, std);\n  }\n  return result;\n}\n\n/**\n * Returns a 3D tensor of given size, full of randomness\n */\nexport function randos3D(\n  width: number,\n  height: number,\n  depth: number,\n  std?: number | null\n): Float32Array[][] {\n  const result: Float32Array[][] = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = randos2D(width, height, std);\n  }\n  return result;\n}\n","import { randos2D } from '../utilities/randos';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { baseLayerDefaultSettings, ILayer, ILayerSettings } from './base-layer';\nimport { Model } from './types';\n\nexport interface IRandomSettings extends ILayerSettings {\n  std?: number | null;\n}\n\nexport const defaults: IRandomSettings = {\n  ...baseLayerDefaultSettings,\n  std: null,\n};\n\nexport class Random extends Model implements ILayer {\n  settings: IRandomSettings;\n  constructor(settings: Partial<IRandomSettings>) {\n    super();\n    this.settings = { ...defaults, ...settings };\n    this.setupPraxis();\n    this.validate();\n\n    if (!this.weights) {\n      this.weights = randos2D(this.width, this.height, settings.std);\n    }\n    if (!this.deltas) {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  predict(): void {}\n\n  compare(): void {}\n}\n\nexport function random(settings: IRandomSettings): Random {\n  return new Random(settings);\n}\n","import { makeKernel, release, clear } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  Texture,\n} from 'gpu.js';\nimport { ILayer, ILayerJSON, ILayerSettings } from './base-layer';\n\nexport interface IMultiplyConstants extends IConstantsThis {\n  size: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  weights1: number[][],\n  weights2: number[][]\n): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nexport function compareFromX(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nexport function compareFromY(\n  this: IKernelFunctionThis<IMultiplyConstants>,\n  deltas: number[][],\n  inputDeltas: number[][],\n  inputWeights: number[][]\n): number {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nexport class Multiply extends Operator {\n  compareKernel1: IKernelRunShortcut | null = null;\n  compareKernel2: IKernelRunShortcut | null = null;\n\n  get width(): number {\n    return this.inputLayer2.width;\n  }\n\n  set width(width: number) {\n    throw new Error('Cannot set width on Multiply');\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  set height(height: number) {\n    throw new Error('Cannot set height on Multiply');\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  set depth(depth: number) {\n    throw new Error('Cannot set depth on Multiply');\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`\n      );\n    }\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n      immutable: true,\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n      immutable: true,\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n      immutable: true,\n    });\n  }\n\n  reuseKernels(layer: ILayer): void {\n    super.reuseKernels(layer);\n    this.compareKernel1 = (layer as Multiply).compareKernel1;\n    this.compareKernel2 = (layer as Multiply).compareKernel2;\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (!this.predictKernel) throw new Error('this.predictKernel is not set');\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    ) as Texture;\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    if (!this.compareKernel1) throw new Error('this.compareKernel1 not set');\n    if (!this.compareKernel2) throw new Error('this.compareKernel2 not set');\n\n    const inputLayer1Deltas = this.inputLayer1.deltas;\n    const inputLayer2Deltas = this.inputLayer2.deltas;\n\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n\n    this.inputLayer2.deltas = newDeltas2 as Texture;\n    this.inputLayer1.deltas = newDeltas1 as Texture;\n\n    release(inputLayer1Deltas);\n    release(inputLayer2Deltas);\n  }\n\n  setupPraxis(): void {}\n  learn(): void {}\n\n  toJSON(): Partial<ILayerJSON> {\n    return {\n      ...super.toJSON(),\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n\nexport function multiply(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): Multiply {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n","import { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release, clear } from '../utilities/kernel';\nimport { activate, measure } from '../activation/sigmoid';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return (\n    1 / (1 + Math.exp(-inputs[this.thread.z][this.thread.y][this.thread.x]))\n  );\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  const weight = weights[this.thread.z][this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.z][this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nexport class Sigmoid extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function sigmoid(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Sigmoid {\n  return new Sigmoid(inputLayer, settings);\n}\n","import { IConvolutionSettingsBase } from '../layer/convolution';\n\nexport interface IStride {\n  strideX: number;\n  strideY: number;\n}\n\nexport function getStride(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IStride {\n  if (typeof settings.stride === 'number') {\n    return { strideX: settings.stride, strideY: settings.stride };\n  } else {\n    let strideX: number = defaults.stride as number;\n    let strideY: number = defaults.stride as number;\n    if (typeof settings.strideX === 'number') {\n      strideX = settings.strideX;\n    }\n    if (typeof settings.strideY === 'number') {\n      strideY = settings.strideY;\n    }\n    return { strideX, strideY };\n  }\n}\n\nexport interface IPadding {\n  paddingX: number;\n  paddingY: number;\n}\n\nexport function getPadding(\n  settings: IConvolutionSettingsBase,\n  defaults: IConvolutionSettingsBase\n): IPadding {\n  if (typeof settings.padding === 'number') {\n    return { paddingX: settings.padding, paddingY: settings.padding };\n  } else {\n    let paddingX: number = defaults.padding as number;\n    let paddingY: number = defaults.padding as number;\n    if (typeof settings.paddingX === 'number') {\n      paddingX = settings.paddingX;\n    }\n    if (typeof settings.paddingY === 'number') {\n      paddingY = settings.paddingY;\n    }\n    return { paddingX, paddingY };\n  }\n}\n","/**\n * Returns an array of a given size with each element filled with a single value\n */\nexport function values(size: number, value: number): Float32Array {\n  return new Float32Array(size).fill(value);\n}\n","import { makeKernel, release, clone, clear } from '../utilities/kernel';\nimport { getStride, getPadding } from '../utilities/layer-setup';\nimport { Filter } from './filter';\nimport { randos, randos3D } from '../utilities/randos';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { values } from '../utilities/values';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IConvolutionConstantsBase extends IConstantsThis {\n  paddingX: number;\n  paddingY: number;\n  strideX: number;\n  strideY: number;\n  filterWidth: number;\n  filterHeight: number;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][][],\n  biases: number[]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (\n      let filterY = Math.max(0, startFilterY),\n        inputY = Math.max(0, startInputY);\n      filterY < endFilterY;\n      filterY++, inputY++\n    ) {\n      for (\n        let filterX = Math.max(0, startFilterX),\n          inputX = Math.max(0, startInputX);\n        filterX < endFilterX;\n        filterX++, inputX++\n      ) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nexport interface ICompareFilterDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaWidth: number;\n  deltaHeight: number;\n  inputWidth: number;\n  inputHeight: number;\n  deltaZ: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFilterDeltasConstants>,\n  filterDeltas: number[][][],\n  inputs: number[][][],\n  deltas: number[][][]\n): number {\n  const startDeltaX = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingX - this.thread.x) / this.constants.strideX\n    )\n  );\n  const startInputX =\n    startDeltaX * this.constants.strideX +\n    this.thread.x -\n    this.constants.paddingX;\n  const endDeltaX = Math.min(\n    this.constants.deltaWidth,\n    Math.floor(\n      (this.constants.inputWidth -\n        1 -\n        this.thread.x +\n        this.constants.paddingX) /\n        this.constants.strideX\n    ) + 1\n  );\n\n  const startDeltaY = Math.max(\n    0,\n    Math.ceil(\n      (this.constants.paddingY - this.thread.y) / this.constants.strideY\n    )\n  );\n  const startInputY =\n    startDeltaY * this.constants.strideY +\n    this.thread.y -\n    this.constants.paddingY;\n  const endDeltaY = Math.min(\n    this.constants.deltaHeight,\n    Math.floor(\n      (this.constants.inputHeight -\n        1 -\n        this.thread.y +\n        this.constants.paddingY) /\n        this.constants.strideY\n    ) + 1\n  );\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (\n    let deltaY = startDeltaY, inputY = startInputY;\n    deltaY < endDeltaY;\n    deltaY++, inputY += this.constants.strideY\n  ) {\n    for (\n      let deltaX = startDeltaX, inputX = startInputX;\n      deltaX < endDeltaX;\n      deltaX++, inputX += this.constants.strideX\n    ) {\n      sum +=\n        inputs[this.thread.z][inputY][inputX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareInputDeltasConstants\n  extends IConvolutionConstantsBase {\n  deltaHeight: number;\n  deltaWidth: number;\n  deltaZ: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  filters: number[][][],\n  deltas: number[][][]\n): number {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX =\n    x < this.constants.filterWidth\n      ? 0\n      : Math.floor(\n          (x - this.constants.filterWidth + this.constants.strideX) /\n            this.constants.strideX\n        );\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(\n    startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1,\n    this.constants.deltaWidth\n  );\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY =\n    y < this.constants.filterHeight\n      ? 0\n      : Math.floor(\n          (y - this.constants.filterHeight + this.constants.strideY) /\n            this.constants.strideY\n        );\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(\n    startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1,\n    this.constants.deltaHeight\n  );\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (\n    let filterY = startFilterY;\n    deltaY < endDeltaY;\n    filterY -= this.constants.strideY, deltaY++\n  ) {\n    let deltaX = startDeltaX;\n    for (\n      let filterX = startFilterX;\n      deltaX < endDeltaX;\n      filterX -= this.constants.strideX, deltaX++\n    ) {\n      sum +=\n        filters[this.thread.z][filterY][filterX] *\n        deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nexport interface ICompareBiasesConstants extends IConstantsThis {\n  deltaHeight: number;\n  deltaWdith: number;\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis<ICompareBiasesConstants>,\n  biasDeltas: number[][][],\n  deltas: number[][][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nexport interface IConvolutionSettingsBase {\n  stride?: number;\n  strideX?: number;\n  strideY?: number;\n  padding?: number;\n  paddingX?: number;\n  paddingY?: number;\n  filterCount?: number;\n  filterWidth?: number;\n  filterHeight?: number;\n}\n\nexport interface IConvolutionSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n  filters?: KernelOutput;\n  filterDeltas?: KernelOutput;\n}\n\nexport const defaults: IConvolutionSettings = {\n  stride: 0,\n  padding: 0,\n  bias: 0.1,\n  filterCount: 1,\n  filterWidth: 0,\n  filterHeight: 0,\n};\n\nexport class Convolution extends Filter {\n  settings: Partial<IConvolutionSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get depth(): number {\n    return this.filterCount;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biasDeltas;\n  }\n\n  set biasDeltas(weights: KernelOutput) {\n    this.settings.biasDeltas = weights;\n  }\n\n  get filters(): KernelOutput {\n    return this.settings.filters;\n  }\n\n  set filters(filters: KernelOutput) {\n    this.settings.filters = filters;\n  }\n\n  get filterDeltas(): KernelOutput {\n    return this.settings.filterDeltas;\n  }\n\n  set filterDeltas(filterDeltas: KernelOutput) {\n    this.settings.filterDeltas = filterDeltas;\n  }\n\n  constructor(settings: IConvolutionSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...defaults,\n      ...settings,\n      ...getPadding(settings, defaults),\n      ...getStride(settings, defaults),\n    };\n\n    this.weights =\n      settings.weights ?? randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = settings.biasDeltas ?? randos(this.depth);\n\n    this.filters =\n      settings.filters ??\n      randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  setupKernels(): void {\n    this.predictKernel = makeKernel<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n      immutable: true,\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      immutable: true,\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const { filterDeltas, biasDeltas } = this;\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(filterDeltas);\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      biasDeltas,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(this.deltas);\n    this.deltas = (this.compareInputDeltasKernel as IKernelRunShortcut)(\n      this.filters,\n      this.inputLayer.deltas\n    );\n\n    release(this.inputLayer.deltas);\n    // TODO: do we need to clone here?\n    this.inputLayer.deltas = clone(this.deltas);\n  }\n\n  learn(learningRate: number): void {\n    // TODO: handle filters\n    // TODO: do we need to release here?\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    release(oldWeights);\n    clear(this.deltas);\n  }\n}\n\nexport function convolution(\n  settings: IConvolutionSettings,\n  inputLayer: ILayer\n): Convolution {\n  return new Convolution(settings, inputLayer);\n}\n","import { Filter, IFilterSettings } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport { ILayer, ILayerSettings, baseLayerDefaultSettings } from './base-layer';\n\nexport function setDropout(dropout: number): number {\n  return dropout;\n}\n\nexport interface IDropoutConstants extends IConstantsThis {\n  probability: number;\n}\n\nexport function trainingPredict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  if (setDropout(Math.random()) < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IDropoutConstants>,\n  inputs: number[][]\n): number {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  dropouts: number[][],\n  deltas: number[][]\n): number {\n  if (dropouts[this.thread.y][this.thread.x] === 0) {\n    return 0;\n  }\n  return deltas[this.thread.y][this.thread.x];\n}\n\nexport interface IDropoutSettings extends ILayerSettings {\n  probability: number;\n}\n\nexport const dropoutDefaults: IDropoutSettings = {\n  ...baseLayerDefaultSettings,\n  probability: 0.5,\n};\n\nexport class Dropout extends Filter {\n  dropouts: KernelOutput | null;\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  settings: Partial<IDropoutSettings>;\n  constructor(\n    inputLayer: ILayer,\n    settings?: Partial<IDropoutSettings> & Partial<IFilterSettings>\n  ) {\n    super(settings as Partial<IFilterSettings>, inputLayer);\n    this.settings = { ...dropoutDefaults, ...settings };\n    this.dropouts = null;\n    this.validate();\n  }\n\n  setupKernels(isTraining?: boolean): void {\n    const output = [this.width, this.height];\n\n    if (isTraining) {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof trainingPredict>,\n        IDropoutConstants\n      >({ dropouts: setDropout }, trainingPredict, {\n        output,\n        immutable: true,\n      });\n      this.compareKernel = makeKernel(compare, { output, immutable: true });\n    } else {\n      this.predictKernelMap = makeKernelMap<\n        Parameters<typeof predict>,\n        IDropoutConstants\n      >({}, predict, { output, immutable: true });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    if (this.dropouts) {\n      release(this.dropouts);\n    }\n    const { result, dropouts } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.weights = result;\n    this.dropouts = dropouts;\n  }\n\n  compare(): void {\n    release(this.deltas);\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.dropouts as KernelOutput,\n      this.inputLayer.deltas\n    );\n  }\n}\n\nexport function dropout(\n  inputLayer: ILayer,\n  settings?: Partial<IDropoutSettings>\n): Dropout {\n  return new Dropout(inputLayer, settings);\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n} from 'gpu.js';\nimport { Filter, IFilterSettings } from './filter';\nimport { makeKernel, release } from '../utilities/kernel';\nimport { values } from '../utilities/values';\nimport { randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer } from './base-layer';\n\nexport interface IPredictConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][],\n  filters: number[][],\n  biases: number[]\n): number {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nexport interface ICompareInputDeltasConstants extends IConstantsThis {\n  filterCount: number;\n}\n\nexport function compareInputDeltas(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nexport function compareInputDeltas3D(\n  this: IKernelFunctionThis<ICompareInputDeltasConstants>,\n  inputDeltas: number[][][],\n  deltas: number[][],\n  filters: number[][]\n): number {\n  let sum = 0;\n  const filterX = this.thread.x + this.thread.y * this.output.x;\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nexport function compareBiases(\n  this: IKernelFunctionThis,\n  biases: number[],\n  deltas: number[][]\n): number {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nexport interface ICompareFiltersDeltas extends IConstantsThis {\n  deltaX: number;\n  deltaY: number;\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function compareFilterDeltas(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[this.thread.y][this.thread.x] *\n      deltas[this.constants.deltaY][this.constants.deltaX]\n  );\n}\n\nexport function compareFilterDeltas3D(\n  this: IKernelFunctionThis<ICompareFiltersDeltas>,\n  filterDeltas: number[][],\n  inputWeights: number[][][],\n  deltas: number[][]\n): number {\n  const inputZ = Math.floor(\n    this.thread.x / (this.constants.inputWidth * this.constants.inputHeight)\n  );\n  const inputY = Math.floor(\n    (this.thread.x -\n      inputZ * this.constants.inputWidth * this.constants.inputHeight) /\n      this.constants.inputWidth\n  );\n  const inputX =\n    this.thread.x -\n    this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return (\n    filterDeltas[this.thread.y][this.thread.x] +\n    inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]\n  );\n}\n\nexport interface IFullyConnectedDefaultSettings\n  extends Partial<IFilterSettings> {\n  bias?: number;\n  biases?: KernelOutput;\n  biasDeltas?: KernelOutput;\n}\n\nexport const defaults: IFullyConnectedDefaultSettings = {\n  bias: 0.1,\n};\n\nexport class FullyConnected extends Filter {\n  get bias(): number {\n    return this.settings.bias as number;\n  }\n\n  get biases(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biases(biases: KernelOutput) {\n    this.settings.biases = biases;\n  }\n\n  get biasDeltas(): KernelOutput {\n    return this.settings.biases;\n  }\n\n  set biasDeltas(biasDeltas: KernelOutput) {\n    this.settings.biasDeltas = biasDeltas;\n  }\n\n  settings: Partial<IFullyConnectedDefaultSettings>;\n  compareFilterDeltasKernel: IKernelRunShortcut | null = null;\n  compareInputDeltasKernel: IKernelRunShortcut | null = null;\n  compareBiasesKernel: IKernelRunShortcut | null = null;\n  constructor(\n    settings: Partial<IFullyConnectedDefaultSettings>,\n    inputLayer: ILayer\n  ) {\n    super(settings, inputLayer);\n    this.settings = { ...settings };\n    this.validate();\n\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate(): void {\n    super.validate();\n    if (this.depth > 0) throw new Error('depth not supported');\n  }\n\n  setupKernels(): void {\n    const { inputLayer } = this;\n    const connectionCount =\n      inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n        immutable: true,\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare(): void {\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this\n      .compareInputDeltasKernel as IKernelRunShortcut)(\n      inputLayerDeltas,\n      this.deltas,\n      this.filters\n    );\n    release(inputLayerDeltas);\n\n    const { biasDeltas, filterDeltas } = this;\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = (this.compareBiasesKernel as IKernelRunShortcut)(\n      this.biases,\n      this.deltas\n    );\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = (this.compareFilterDeltasKernel as IKernelRunShortcut)(\n      filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    release(biasDeltas);\n    release(filterDeltas);\n  }\n}\n\nexport function fullyConnected(\n  settings: IFullyConnectedDefaultSettings,\n  inputLayer: ILayer\n): FullyConnected {\n  return new FullyConnected(settings, inputLayer);\n}\n","import { makeKernel } from '../utilities/kernel';\nimport { Modifier } from './types';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  weights: number[][]\n): number {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nexport class Negative extends Modifier {\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n  }\n}\n\nexport function negative(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): Negative {\n  return new Negative(inputLayer, settings);\n}\n","import { makeKernel, release, clear } from '../utilities/kernel';\nimport { Operator } from './operator';\nimport { checkSameSize } from '../utilities/layer-size';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nexport function predict(\n  this: IKernelFunctionThis,\n  inputLayerWeights1: number[][],\n  inputLayerWeights2: number[][]\n): number {\n  return (\n    inputLayerWeights1[this.thread.y][this.thread.x] *\n    inputLayerWeights2[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport class MultiplyElement extends Operator {\n  get width(): number {\n    return this.inputLayer1.width;\n  }\n\n  get height(): number {\n    return this.inputLayer1.height;\n  }\n\n  get depth(): number {\n    return this.inputLayer1.depth;\n  }\n\n  validate(): void {\n    super.validate();\n    checkSameSize(this.inputLayer1, this.inputLayer2);\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      immutable: true,\n    });\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    release(this.inputLayer1.deltas);\n    release(this.inputLayer2.deltas);\n    this.inputLayer1.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer2.weights,\n      this.deltas\n    );\n    this.inputLayer2.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.inputLayer1.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function multiplyElement(\n  inputLayer1: ILayer,\n  inputLayer2: ILayer,\n  settings?: ILayerSettings\n): MultiplyElement {\n  return new MultiplyElement(inputLayer1, inputLayer2, settings);\n}\n","export function ones(size: number): Float32Array {\n  return new Float32Array(size).fill(1);\n}\n\nexport function ones2D(width: number, height: number): Float32Array[] {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","import { ILayerSettings } from './base-layer';\n\nimport { ones2D } from '../utilities/ones';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\n\nexport class Ones extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nexport function ones(settings: ILayerSettings): Ones {\n  return new Ones(settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './activation';\nimport { activate, measure } from '../activation/tanh';\nimport { release, clear, makeKernel } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  errors: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  errors: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    errors[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Tanh extends Activation {\n  setupKernels(): void {\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [this.width, this.height, this.depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [this.width, this.height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [this.width, this.height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function tanh(inputLayer: ILayer, settings?: ILayerSettings): Tanh {\n  return new Tanh(inputLayer, settings);\n}\n","import { zeros2D } from '../utilities/zeros-2d';\nimport { Model } from './types';\nimport { ILayerSettings } from './base-layer';\n\nexport class Zeros extends Model {\n  constructor(settings: ILayerSettings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nexport function zeros(settings: ILayerSettings): Zeros {\n  return new Zeros(settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut, KernelOutput } from 'gpu.js';\nimport { EntryPoint } from './types';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport {\n  makeKernel,\n  release,\n  kernelInput,\n  clear,\n  clone,\n} from '../utilities/kernel';\n\nexport const defaults: ILayerSettings = {\n  weights: null,\n};\n\nexport class Input extends EntryPoint {\n  reshapeInput: IKernelRunShortcut | null = null;\n  constructor(settings: ILayerSettings) {\n    super({ ...defaults, ...settings });\n    this.validate();\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels(): void {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(\n        function (this: IKernelFunctionThis, value: number[]) {\n          return value[this.thread.y];\n        },\n        {\n          output: [1, this.height],\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  reuseKernels(layer: ILayer): void {\n    // super.reuseKernels(layer);\n    this.reshapeInput = (layer as Input).reshapeInput;\n  }\n\n  predict(inputs: KernelOutput): void {\n    if (\n      (Array.isArray(inputs) || inputs instanceof Float32Array) &&\n      typeof inputs[0] === 'number' &&\n      inputs.length === this.height * this.width\n    ) {\n      release(this.weights);\n      this.weights = kernelInput(inputs as number[], [this.width, this.height]);\n    } else if (\n      Array.isArray(inputs) &&\n      inputs.length === this.height &&\n      (Array.isArray(inputs[0]) || inputs[0] instanceof Float32Array) &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = clone(inputs);\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n    clear(this.deltas);\n  }\n\n  predict1D(inputs: KernelOutput): void {\n    if (this.weights) release(this.weights);\n    if (this.reshapeInput) {\n      this.weights = this.reshapeInput(inputs);\n    } else {\n      this.weights = inputs;\n    }\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nexport function input(settings: ILayerSettings): Input {\n  return new Input(settings);\n}\n","import { Activation } from './types';\nimport { makeKernel, release, clear } from '../utilities/kernel';\nimport { activate, measure } from '../activation/leaky-relu';\nimport { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class LeakyRelu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    const { deltas } = this;\n    this.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      deltas\n    );\n    release(deltas);\n  }\n}\n\nexport function leakyRelu(\n  inputLayer: ILayer,\n  settings: ILayerSettings\n): LeakyRelu {\n  return new LeakyRelu(inputLayer, settings);\n}\n","import { Filter } from './filter';\nimport { makeKernel, makeKernelMap, release } from '../utilities/kernel';\nimport { getPadding, getStride } from '../utilities/layer-setup';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { randos3D } from '../utilities/randos';\nimport {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IKernelRunShortcut,\n  ISubKernelObject,\n  KernelOutput,\n} from 'gpu.js';\nimport {\n  IConvolutionSettingsBase,\n  IConvolutionConstantsBase,\n} from './convolution';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function setSwitchY(value: number): number {\n  return value;\n}\n\nexport function setSwitchX(value: number): number {\n  return value;\n}\n\nexport interface IPredictConstants extends IConvolutionConstantsBase {\n  inputWidth: number;\n  inputHeight: number;\n}\n\nexport function predict(\n  this: IKernelFunctionThis<IPredictConstants>,\n  inputs: number[][][]\n): number {\n  const startFilterX =\n    this.constants.paddingX - this.thread.x * this.constants.strideX;\n  const startInputX =\n    this.thread.x * this.constants.strideX - this.constants.paddingX;\n  const endFilterX = Math.min(\n    this.constants.filterWidth,\n    startFilterX + this.constants.inputWidth\n  );\n\n  const startFilterY =\n    this.constants.paddingY - this.thread.y * this.constants.strideY;\n  const startInputY =\n    this.thread.y * this.constants.strideY - this.constants.paddingY;\n  const endFilterY = Math.min(\n    this.constants.filterHeight,\n    startFilterY + this.constants.inputHeight\n  );\n\n  let largestValue = -99999;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (\n    let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY);\n    filterY < endFilterY;\n    filterY++, inputY++\n  ) {\n    for (\n      let filterX = Math.max(0, startFilterX),\n        inputX = Math.max(0, startInputX);\n      filterX < endFilterX;\n      filterX++, inputX++\n    ) {\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nexport interface ICompareConstants extends IConstantsThis {\n  inputWidth: number;\n  inputHeight: number;\n\n  outputWidth: number;\n  outputHeight: number;\n}\n\nexport function compare(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][],\n  switchY: number[][],\n  switchX: number[][]\n): number {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis<ICompareConstants>,\n  deltas: number[][][],\n  switchY: number[][][],\n  switchX: number[][][]\n): number {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nexport interface IPoolSettings\n  extends ILayerSettings,\n    IConvolutionSettingsBase {\n  switchX?: KernelOutput;\n  switchY?: KernelOutput;\n}\n\nexport const defaults: IPoolSettings = {\n  padding: 0,\n  stride: 0,\n  filterWidth: 0,\n  filterHeight: 0,\n  filterCount: 0,\n};\n\nexport class Pool extends Filter {\n  settings: Partial<IPoolSettings>;\n\n  get strideX(): number {\n    return this.settings.strideX as number;\n  }\n\n  get strideY(): number {\n    return this.settings.strideY as number;\n  }\n\n  get paddingX(): number {\n    return this.settings.paddingX as number;\n  }\n\n  get paddingY(): number {\n    return this.settings.paddingY as number;\n  }\n\n  get width(): number {\n    return Math.floor(\n      (this.inputLayer.width + this.paddingX * 2 - this.filterWidth) /\n        this.strideX +\n        1\n    );\n  }\n\n  get height(): number {\n    return Math.floor(\n      (this.inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n  }\n\n  get depth(): number {\n    return this.settings.filterCount as number;\n  }\n\n  get filterCount(): number {\n    // TODO: handle 1 depth?\n    return this.settings.filterCount as number;\n  }\n\n  get switchX(): KernelOutput {\n    return this.settings.switchX;\n  }\n\n  set switchX(switchX: KernelOutput) {\n    this.settings.switchX = switchX;\n  }\n\n  get switchY(): KernelOutput {\n    return this.settings.switchY;\n  }\n\n  set switchY(switchY: KernelOutput) {\n    this.settings.switchY = switchY;\n  }\n\n  predictKernelMap: IKernelMapRunShortcut<ISubKernelObject> | null = null;\n  constructor(settings: IPoolSettings, inputLayer: ILayer) {\n    super(settings, inputLayer);\n    this.settings = {\n      ...settings,\n      ...getStride(settings, defaults),\n      ...getPadding(settings, defaults),\n    };\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.filterDeltas = zeros3D(\n      this.filterWidth,\n      this.filterHeight,\n      this.filterCount\n    );\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernelMap = makeKernelMap<\n      Parameters<typeof predict>,\n      IPredictConstants\n    >(\n      {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      predict,\n      {\n        output: [this.width, this.height, this.depth],\n        constants: {\n          inputWidth: this.inputLayer.width,\n          inputHeight: this.inputLayer.height,\n          paddingX: this.paddingX,\n          paddingY: this.paddingY,\n          filterHeight: this.filterHeight,\n          filterWidth: this.filterWidth,\n        },\n      }\n    );\n\n    this.compareKernel = makeKernel(compare, {\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n\n        outputWidth: this.width,\n        outputHeight: this.height,\n      },\n    });\n  }\n\n  predict(): void {\n    const { result: weights, switchX, switchY } = (this\n      .predictKernelMap as IKernelMapRunShortcut<ISubKernelObject>)(\n      this.inputLayer.weights\n    );\n    this.switchX = switchX;\n    this.switchY = switchY;\n    this.weights = weights;\n  }\n\n  compare(): void {\n    // debugger;\n    // const depth = this.inputLayer.deltas.length;\n    // const height = this.inputLayer.deltas[0].length;\n    // const width = this.inputLayer.deltas[0][0].length;\n    // const type = typeof this.inputLayer.deltas[0][0][0];\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    release(inputLayerDeltas);\n    // debugger;\n    // if (depth !== this.inputLayer.deltas.length) debugger;\n    // if (height !== this.inputLayer.deltas[0].length) debugger;\n    // if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    // if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nexport function pool(settings: IPoolSettings, inputLayer: ILayer): Pool {\n  return new Pool(settings, inputLayer);\n}\n","import { KernelOutput } from 'gpu.js';\nimport { IPraxis } from '../praxis/base-praxis';\nimport { release } from '../utilities/kernel';\nimport { BaseLayer, ILayer } from './base-layer';\nimport { Internal } from './internal';\n\nexport interface IRecurrentInput extends ILayer {\n  setDimensions?: (width: number, height: number) => void;\n}\n\nexport class RecurrentInput extends Internal implements IRecurrentInput {\n  recurrentInput: ILayer;\n  praxis: IPraxis | null = null;\n  predictKernel: any = null;\n  compareKernel: any = null;\n  settings = {};\n  constructor(recurrentInput: ILayer) {\n    super();\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get width(): number {\n    return this.recurrentInput.width;\n  }\n\n  get height(): number {\n    return this.recurrentInput.height;\n  }\n\n  get depth(): number {\n    return this.recurrentInput.depth;\n  }\n\n  get deltas(): KernelOutput {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    const recurrentInputDeltas = this.recurrentInput.deltas;\n    this.recurrentInput.deltas = deltas;\n    release(recurrentInputDeltas);\n  }\n\n  get weights(): KernelOutput {\n    return this.recurrentInput.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    const recurrentInputWeights = this.recurrentInput.weights;\n    this.recurrentInput.weights = weights;\n    release(recurrentInputWeights);\n  }\n\n  validate(): void {\n    BaseLayer.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.recurrentInput.width = width;\n    this.recurrentInput.height = height;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { IPraxis } from '../praxis/base-praxis';\nimport { clear, release } from '../utilities/kernel';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { ILayerSettings } from './base-layer';\nimport { Internal } from './internal';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport class RecurrentZeros extends Internal implements IRecurrentInput {\n  praxis: IPraxis | null = null;\n  settings: Partial<ILayerSettings> = {};\n  predictKernel = null;\n  compareKernel = null;\n\n  constructor(settings?: Partial<ILayerSettings>) {\n    super();\n    if (settings) {\n      this.settings = { ...settings };\n    }\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.praxis = null;\n    this.settings = {\n      ...this.settings,\n      width,\n      height,\n      weights: zeros2D(width, height),\n      deltas: zeros2D(width, height),\n    };\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(learningRate: number): void {\n    const { weights: oldWeights } = this;\n    this.weights = (this.praxis as IPraxis).run(this, learningRate);\n    // this.deltas = deltas;\n    release(oldWeights);\n    clear(this.deltas);\n  }\n\n  // validate(): void {\n  //   throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  // }\n\n  // reset(): void {\n  //   throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  // }\n}\n\nexport function recurrentZeros(): RecurrentZeros {\n  return new RecurrentZeros();\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\n\nimport { Activation } from './types';\nimport { makeKernel, release, clear } from '../utilities/kernel';\nimport { activate, measure } from '../activation/relu';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  inputs: number[][]\n): number {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  weights: number[][],\n  deltas: number[][]\n): number {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][]\n): number {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  weights: number[][][],\n  deltas: number[][][]\n): number {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport class Relu extends Activation {\n  setupKernels(): void {\n    const { width, height, depth } = this.inputLayer;\n    if (depth > 0) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n        immutable: true,\n      });\n    } else {\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n        functions: [activate],\n        immutable: true,\n      });\n\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        functions: [measure],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    release(this.inputLayer.deltas);\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.weights,\n      this.deltas\n    );\n  }\n}\n\nexport function relu(inputLayer: ILayer, settings?: ILayerSettings): Relu {\n  return new Relu(inputLayer, settings);\n}\n","import { IKernelFunctionThis, KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class Regression extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(settings: ILayerSettings, inputLayer: ILayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// TODO: Connect up\nexport function learn(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  targets: number[]\n): number {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nexport function regression(\n  settings: ILayerSettings,\n  inputLayer: ILayer\n): Regression {\n  return new Regression(settings, inputLayer);\n}\n","import {\n  IConstantsThis,\n  IKernelFunctionThis,\n  IKernelRunShortcut,\n  KernelOutput,\n  Texture,\n} from 'gpu.js';\n\nimport { makeKernel, release, clone } from '../utilities/kernel';\nimport { randos, randos2D, randos3D } from '../utilities/randos';\nimport { zeros } from '../utilities/zeros';\nimport { zeros2D } from '../utilities/zeros-2d';\nimport { zeros3D } from '../utilities/zeros-3d';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { Modifier } from './modifier';\n\ninterface ISoftMaxConstants extends IConstantsThis {\n  inputWidth: number;\n}\n\nexport function getMaxValue(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getMaxValue3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nexport function getSum(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[]\n): number {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nexport function getSum2D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][]\n): number {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nexport function getSum3D(\n  this: IKernelFunctionThis<ISoftMaxConstants>,\n  inputs: number[][][]\n): number {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nexport function getExponentials(\n  this: IKernelFunctionThis,\n  inputs: number[],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials2D(\n  this: IKernelFunctionThis,\n  inputs: number[][],\n  maxInput: number[]\n): number {\n  return Math.exp(inputs[this.thread.y][this.thread.x] - maxInput[0]);\n}\n\nexport function getExponentials3D(\n  this: IKernelFunctionThis,\n  inputs: number[][][],\n  maxInput: number[]\n): number {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nexport function predict(\n  this: IKernelFunctionThis,\n  exponentials: number[],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict2D(\n  this: IKernelFunctionThis,\n  exponentials: number[][],\n  exponentialsSum: number[]\n): number {\n  return exponentials[this.thread.y][this.thread.x] / exponentialsSum[0];\n}\n\nexport function predict3D(\n  this: IKernelFunctionThis,\n  exponentials: number[][][],\n  exponentialsSum: number[]\n): number {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nexport function compare(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[]\n): number {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nexport function compare2D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][]\n): number {\n  let indicator = 0;\n  const index = this.thread.x + this.thread.y * this.output.x;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nexport function compare3D(\n  this: IKernelFunctionThis,\n  target: number,\n  exponentials: number[][][]\n): number {\n  let indicator = 0;\n  const index =\n    this.thread.x +\n    this.thread.y * this.output.x +\n    this.thread.z * this.output.x * this.output.y;\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(\n    indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nexport function loss(): number {\n  return -Math.log(0);\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nexport class SoftMax extends Modifier {\n  getExponentialsKernel: IKernelRunShortcut | null;\n  getMaxValueKernel: IKernelRunShortcut | null;\n  getSumKernel: IKernelRunShortcut | null;\n  errors: KernelOutput | null = null;\n  constructor(inputLayer: ILayer, settings?: ILayerSettings) {\n    super(inputLayer, settings);\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.validate();\n\n    if (this.depth > 0) {\n      this.weights = randos3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 0) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels(): void {\n    const { width, height, depth } = this;\n    if (depth > 0) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        immutable: true,\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n        immutable: true,\n      });\n    }\n  }\n\n  predict(): void {\n    const maxValue = (this.getMaxValueKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    const exponentials = (this.getExponentialsKernel as IKernelRunShortcut)(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = (this.getSumKernel as IKernelRunShortcut)(\n      exponentials\n    );\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      exponentials,\n      exponentialsSum\n    );\n  }\n\n  compare(targetValues: KernelOutput): void {\n    const { deltas, errors } = this;\n    this.errors = (this.compareKernel as IKernelRunShortcut)(\n      (targetValues as number[])[0],\n      deltas\n    );\n    this.deltas = clone(this.errors);\n    release(deltas);\n    release(errors as Texture);\n\n    const inputLayerDeltas = this.inputLayer.deltas;\n    this.inputLayer.deltas = clone(this.deltas);\n    release(inputLayerDeltas);\n  }\n}\n\nexport function softMax(\n  inputLayer: ILayer,\n  settings?: ILayerSettings\n): SoftMax {\n  return new SoftMax(inputLayer, settings);\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { BaseLayer, ILayer, ILayerSettings } from './base-layer';\nimport { clone, release } from '../utilities/kernel';\n\nexport class SVM extends BaseLayer {\n  inputLayer: ILayer;\n  constructor(inputLayer: ILayer, settings: ILayerSettings) {\n    super(settings);\n    this.inputLayer = inputLayer;\n  }\n\n  predict(): void {\n    release(this.weights);\n    this.weights = clone(this.inputLayer.weights as KernelOutput);\n    this.validate();\n  }\n\n  learn(): void {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\n// function learn(target) {\n//   if (y === i) {\n//     continue;\n//   }\n//   const ydiff = -yscore + x.w[i] + margin;\n//   if (ydiff > 0) {\n//     // violating dimension, apply loss\n//     x.dw[i] += 1;\n//     x.dw[y] -= 1;\n//     loss += ydiff;\n//   }\n// }\n\nexport function svm(inputLayer: ILayer, settings: ILayerSettings): SVM {\n  return new SVM(inputLayer, settings);\n}\n","import { IKernelFunctionThis, IKernelRunShortcut } from 'gpu.js';\nimport { clear, makeKernel } from '../utilities/kernel';\nimport { ILayer } from './base-layer';\nimport { Modifier } from './types';\n\nexport function predict(this: IKernelFunctionThis, value: number[][]): number {\n  return value[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nexport class Transpose extends Modifier {\n  get width(): number {\n    return this.inputLayer.height;\n  }\n\n  get height(): number {\n    return this.inputLayer.width;\n  }\n\n  constructor(inputLayer: ILayer) {\n    super(inputLayer);\n    this.validate();\n  }\n\n  setupKernels(): void {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict(): void {\n    this.weights = (this.predictKernel as IKernelRunShortcut)(\n      this.inputLayer.weights\n    );\n    clear(this.deltas);\n  }\n\n  compare(): void {\n    this.inputLayer.deltas = (this.compareKernel as IKernelRunShortcut)(\n      this.deltas\n    );\n  }\n}\n\nexport function transpose(inputLayer: ILayer): Transpose {\n  return new Transpose(inputLayer);\n}\n","import {\n  Activation,\n  EntryPoint,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './types';\n\nexport { Add, add } from './add';\nexport { arthurFeedForward } from './arthur-feed-forward';\nexport {\n  BaseLayer,\n  ILayer,\n  ILayerSettings,\n  ILayerJSON,\n  baseLayerDefaultSettings,\n} from './base-layer';\nexport { Convolution, convolution } from './convolution';\nexport { Dropout, dropout } from './dropout';\nexport { feedForward } from './feed-forward';\nexport { FullyConnected, fullyConnected } from './fully-connected';\nexport { gru } from './gru';\nexport { Input, input } from './input';\nexport { LeakyRelu, leakyRelu } from './leaky-relu';\nexport { lstmCell } from './lstm-cell';\nexport { Multiply, multiply } from './multiply';\nexport { MultiplyElement, multiplyElement } from './multiply-element';\nexport { Negative, negative } from './negative';\nexport { Ones, ones } from './ones';\nexport { output } from './output';\nexport { Pool, pool } from './pool';\nexport { Random, random } from './random';\nexport { RecurrentInput, IRecurrentInput } from './recurrent-input';\nexport { RecurrentZeros } from './recurrent-zeros';\nexport { rnnCell } from './rnn-cell';\nexport { Regression, regression } from './regression';\nexport { Relu, relu } from './relu';\nexport { Sigmoid, sigmoid } from './sigmoid';\nexport { SoftMax, softMax } from './soft-max';\nexport { SVM, svm } from './svm';\nexport { Tanh, tanh } from './tanh';\nexport { Target, target } from './target';\nexport { Transpose, transpose } from './transpose';\nexport { Zeros, zeros } from './zeros';\n\nexport const layerTypes = {\n  Activation,\n  Internal,\n  InternalModel,\n  EntryPoint,\n  Filter,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n};\n","import {\n  ArthurDeviationWeights,\n  arthurDeviationWeights,\n  IArthurDeviationWeightsSettings,\n} from '../praxis/arthur-deviation-weights';\nimport {\n  arthurDeviationBiases,\n  IArthurDeviationBiasesSettings,\n} from '../praxis/arthur-deviation-biases';\nimport { ILayer } from './base-layer';\nimport { add } from './add';\nimport { IRandomSettings, random } from './random';\nimport { multiply } from './multiply';\nimport { Sigmoid, sigmoid } from './sigmoid';\nimport { IPraxis } from '../praxis/base-praxis';\n\nexport interface IArthurFeedForwardPraxisSettings\n  extends IArthurDeviationBiasesSettings,\n    IArthurDeviationWeightsSettings {}\n\nexport interface IArthurFeedForwardSettings extends IRandomSettings {\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings?: IArthurFeedForwardPraxisSettings | null\n  ) => IPraxis;\n}\n\nexport function arthurFeedForward(\n  settings: IArthurFeedForwardPraxisSettings,\n  inputLayer: ILayer\n): Sigmoid {\n  const { height } = settings;\n  function initWeightsPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationWeightsSettings\n  ): IPraxis {\n    const praxis = arthurDeviationWeights(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  function initBiasesPraxis(\n    layerTemplate: ILayer,\n    settings?: IArthurDeviationBiasesSettings\n  ): IPraxis {\n    const praxis = arthurDeviationBiases(layerTemplate, settings);\n    praxis.setupKernels();\n    return praxis;\n  }\n  const weightsLayer = random({\n    id: 'weights',\n    height,\n    width: inputLayer.height,\n    initPraxis: initWeightsPraxis,\n  });\n\n  const biasesLayer = random({\n    id: 'biases',\n    height,\n    initPraxis: initBiasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer);\n  const addLayer = add(multiplyLayer, biasesLayer);\n  const sigmoidLayer = sigmoid(addLayer);\n\n  const weightsPraxis = weightsLayer.praxis as ArthurDeviationWeights;\n  weightsPraxis.weightsLayer = weightsLayer;\n  weightsPraxis.incomingLayer = inputLayer;\n  weightsPraxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n","import { random } from './random';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { sigmoid } from './sigmoid';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function feedForward(settings: ILayerSettings, input: ILayer): ILayer {\n  const { height, praxisOpts = null } = settings;\n  const weights = random({\n    id: 'weights',\n    height,\n    width: input.height,\n    praxisOpts,\n  });\n  const biases = random({ id: 'biases', height, praxisOpts });\n  return sigmoid(\n    add(multiply(weights, input, { praxisOpts }), biases, { praxisOpts }),\n    { praxisOpts }\n  );\n}\n","import { add } from './add';\nimport { negative } from './negative';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { ones } from './ones';\nimport { sigmoid } from './sigmoid';\nimport { random } from './random';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { RecurrentInput } from './recurrent-input';\n\nexport function gru(\n  settings: ILayerSettings,\n  recurrentInput: RecurrentInput,\n  input: ILayer\n): ILayer {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        ones({ width: updateGate.width, height: updateGate.height }),\n        negative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { multiplyElement } from './multiply-element';\nimport { random } from './random';\nimport { sigmoid } from './sigmoid';\nimport { tanh } from './tanh';\nimport { zeros } from './zeros';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function lstmCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') {\n    throw new Error('no settings.height given');\n  }\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  const inputGateWeights = random({\n    height,\n    width: input.height,\n    std: 0.08,\n    id: 'inputGateWeights',\n  });\n  const inputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'inputGatePeepholes',\n  });\n  const inputGateBias = zeros({ height, id: 'inputGateBias' });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    ),\n    { id: 'inputGate' }\n  );\n\n  const forgetGateWeights = random({\n    height,\n    width: input.height,\n    std: 0.08,\n    id: 'forgetGateWeights',\n  });\n  const forgetGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'forgetGatePeepholes',\n  });\n  const forgetGateBias = zeros({ height, id: 'forgetGateBias' });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    ),\n    { id: 'forgetGate' }\n  );\n\n  const outputGateWeights = random({\n    height,\n    width: input.height,\n    std: 0.08,\n    id: 'outputGateWeights',\n  });\n  const outputGatePeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'outputGatePeepholes',\n  });\n  const outputGateBias = zeros({ height, id: 'outputGateBias' });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    ),\n    { id: 'outputGate' }\n  );\n\n  const memoryWeights = random({\n    height,\n    width: input.height,\n    std: 0.08,\n    id: 'memoryWeights',\n  });\n  const memoryPeepholes = random({\n    width: height,\n    height,\n    std: 0.08,\n    id: 'memoryPeepholes',\n  });\n  const memoryBias = zeros({ height, id: 'memoryBias' });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    ),\n    { id: 'memory' }\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, recurrentInput, {\n    id: 'retainCell',\n  }); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory, { id: 'writeCell' }); // what do we write to cell\n  const cell = add(retainCell, writeCell, { id: 'cell' }); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell), { id: 'activations' });\n}\n","import { add } from './add';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { target } from './target';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport function output(settings: ILayerSettings, inputLayer: ILayer): ILayer {\n  const { height } = settings;\n  const outputGate = random({\n    height,\n    width: inputLayer.height,\n    id: 'outputGate',\n    std: 0.08,\n  });\n  const output = random({ height, id: 'output', std: 0.08 });\n  const outputGateConnector = multiply(outputGate, inputLayer, {\n    id: 'outputGateConnected',\n  });\n  return target(\n    { id: 'target', ...settings },\n    add(outputGateConnector, output)\n  );\n}\n","import { add } from './add';\nimport { ILayer, ILayerSettings } from './base-layer';\nimport { multiply } from './multiply';\nimport { random } from './random';\nimport { relu } from './relu';\nimport { zeros } from './zeros';\nimport { IRecurrentInput } from './recurrent-input';\n\nexport function rnnCell(\n  settings: ILayerSettings,\n  input: ILayer,\n  recurrentInput: IRecurrentInput\n): ILayer {\n  const { height } = settings;\n\n  if (typeof height !== 'number') throw new Error('height not set');\n  if (recurrentInput.setDimensions) {\n    recurrentInput.setDimensions(1, height);\n  }\n\n  // wxh\n  const weight = random({\n    id: 'weight',\n    height,\n    width: input.height,\n    std: 0.08,\n  });\n  // whh\n  const transition = random({\n    id: 'transition',\n    height,\n    width: height,\n    std: 0.08,\n  });\n  // bhh\n  const bias = zeros({ id: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n","import * as layer from '../layer';\nimport { layerTypes, ILayerJSON, ILayer, Target } from '../layer';\nimport { ActivationType } from '../layer/activation';\nimport { FilterType } from '../layer/filter';\nimport { InternalType } from '../layer/internal';\nimport { ModifierType } from '../layer/modifier';\nimport { OperatorType } from '../layer/operator';\nimport { BaseLayerType } from '../layer/base-layer';\nimport { TargetType } from '../layer/target';\n\nexport function layerFromJSON(\n  jsonLayer: ILayerJSON,\n  inputLayer1?: ILayer,\n  inputLayer2?: ILayer\n): ILayer | null {\n  if (!layer.hasOwnProperty(jsonLayer.type)) {\n    return null;\n  }\n  const Layer = ((layer as unknown) as {\n    [layerType: string]:\n      | TargetType\n      | ActivationType\n      | FilterType\n      | InternalType\n      | ModifierType\n      | OperatorType;\n  })[jsonLayer.type];\n  if (Layer.prototype instanceof layerTypes.Filter) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as FilterType)(jsonLayer, inputLayer1);\n  } else if (\n    Layer.prototype instanceof layerTypes.Activation ||\n    Layer.prototype instanceof layerTypes.Modifier\n  ) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as ActivationType)(inputLayer1, jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Internal) {\n    return new (Layer as InternalType)(jsonLayer);\n  } else if (Layer.prototype instanceof layerTypes.Operator) {\n    if (!inputLayer1) throw new Error('inputLayer1 missing');\n    if (!inputLayer2) throw new Error('inputLayer2 missing');\n    return new (Layer as OperatorType)(inputLayer1, inputLayer2, jsonLayer);\n  } else if (\n    Layer.prototype instanceof layerTypes.InternalModel ||\n    Layer.prototype instanceof layerTypes.EntryPoint ||\n    Layer.prototype instanceof layerTypes.Model\n  ) {\n    return new (Layer as BaseLayerType)(jsonLayer);\n  } else if (Layer === Target) {\n    if (!inputLayer1) throw new Error('inputLayer missing');\n    return new (Layer as TargetType)(jsonLayer, inputLayer1);\n  }\n  return null;\n}\n","import { InputOutputValue, INumberHash, ITrainingDatum } from '../lookup';\n\nexport type LookupTableProp = 'input' | 'output';\n\nexport class LookupTable {\n  length: number;\n  prop: LookupTableProp | null = null;\n  table: INumberHash = {};\n  constructor(\n    data: ITrainingDatum[] | InputOutputValue[] | InputOutputValue[][],\n    prop?: LookupTableProp\n  ) {\n    this.length = 0;\n    const table = this.table;\n    if (prop) {\n      this.prop = prop;\n      for (let i = 0; i < data.length; i++) {\n        const datum = (data as ITrainingDatum[])[i];\n        const object = datum[prop] as INumberHash;\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    } else if (Array.isArray(data) && Array.isArray(data[0])) {\n      for (let i = 0; i < data.length; i++) {\n        const array = (data as InputOutputValue[][])[i];\n        for (let j = 0; j < array.length; j++) {\n          const object = array[j];\n          for (const p in object) {\n            if (!object.hasOwnProperty(p)) continue;\n            if (table.hasOwnProperty(p)) continue;\n            table[p] = this.length++;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < data.length; i++) {\n        const object = (data as INumberHash[])[i];\n        for (const p in object) {\n          if (!object.hasOwnProperty(p)) continue;\n          if (table.hasOwnProperty(p)) continue;\n          table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","import { IKernelFunctionThis, KernelOutput, Texture } from 'gpu.js';\nimport { MeanSquaredError } from './estimator/mean-squared-error';\nimport { ILayer, ILayerJSON } from './layer';\nimport { Model } from './layer/types';\nimport { InputOutputValue, INumberArray, INumberHash, lookup } from './lookup';\nimport * as praxis from './praxis';\nimport { IPraxis, IPraxisSettings } from './praxis/base-praxis';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport { makeKernel, release } from './utilities/kernel';\nimport { layerFromJSON } from './utilities/layer-from-json';\nimport { LookupTable } from './utilities/lookup-table';\n\nexport interface IFeedForwardTrainingData<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface IFeedForwardNormalizedTrainingData {\n  input: Float32Array;\n  output: Float32Array;\n}\n\nexport interface IFeedForwardGPUTrainingData {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface ITrainingStatus {\n  iterations: number;\n  error: number;\n}\n\nexport type Log = (status: string) => void;\nexport type FeedForwardCallback = (status: ITrainingStatus) => void;\n\nexport interface IFeedForwardTrainingOptions {\n  iterations?: number;\n  errorThresh?: number;\n  log?: boolean | Log;\n  logPeriod?: number;\n  learningRate?: number;\n  callback?: FeedForwardCallback;\n  callbackPeriod?: number;\n  errorCheckInterval?: number;\n  timeout?: number;\n}\n\nexport interface IFeedForwardOptions {\n  learningRate?: number;\n  binaryThresh?: number;\n  hiddenLayers?: Array<(inputLayer: ILayer, layerIndex: number) => ILayer>;\n  inputLayer?: () => ILayer;\n  outputLayer?: (inputLayer: ILayer, index: number) => ILayer;\n  praxisOpts?: Partial<IPraxisSettings>;\n  initPraxis?: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ) => IPraxis;\n  praxis?: IPraxis;\n\n  // JSON\n  layers?: ILayer[];\n  inputLayerIndex?: number;\n  outputLayerIndex?: number;\n  sizes?: number[];\n}\n\nexport interface IFeedForwardPreppedTrainingData {\n  status: ITrainingStatus;\n  preparedData: IFeedForwardGPUTrainingData[];\n  endTime: number;\n}\n\nexport const defaults: IFeedForwardOptions = {\n  learningRate: 0.3,\n  binaryThresh: 0.5,\n  initPraxis: (\n    layerTemplate: ILayer,\n    settings: Partial<IPraxisSettings>\n  ): IPraxis =>\n    praxis.momentumRootMeanSquaredPropagation(\n      layerTemplate,\n      layerTemplate.settings.praxisOpts ?? settings\n    ),\n};\n\nexport const trainDefaults: IFeedForwardTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callbackPeriod: 10,\n  errorCheckInterval: 100,\n  timeout: Infinity,\n};\n\nexport interface IFeedForwardJSON {\n  type: string;\n  sizes: number[];\n  layers: ILayerJSON[];\n  inputLayerIndex: number;\n  outputLayerIndex: number;\n}\n\nexport class FeedForward<\n  InputType extends InputOutputValue | KernelOutput = number[] | Float32Array,\n  OutputType extends InputOutputValue | KernelOutput = number[] | Float32Array\n> {\n  static _validateTrainingOptions(\n    options: Partial<IFeedForwardTrainingOptions>\n  ): void {\n    const {\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      learningRate,\n      callback,\n      callbackPeriod,\n      timeout,\n    } = options;\n    interface IValidation {\n      [optionName: string]: () => boolean;\n    }\n    const validations: IValidation = {\n      iterations: () => typeof iterations === 'number' && iterations > 0,\n      errorThresh: () =>\n        typeof errorThresh === 'number' && errorThresh > 0 && errorThresh < 1,\n      log: () => typeof log === 'function' || typeof log === 'boolean',\n      logPeriod: () => typeof logPeriod === 'number' && logPeriod > 0,\n      learningRate: () =>\n        typeof learningRate === 'number' &&\n        learningRate > 0 &&\n        learningRate < 1,\n      callback: () => typeof callback === 'function' || callback === null,\n      callbackPeriod: () =>\n        typeof callbackPeriod === 'number' && callbackPeriod > 0,\n      timeout: () => typeof timeout === 'number' && timeout > 0,\n    };\n    Object.keys(trainDefaults).forEach((key: string): void => {\n      if (validations.hasOwnProperty(key) && !validations[key]()) {\n        const val = options[key as keyof IFeedForwardTrainingOptions];\n        throw new Error(\n          `[${key}, ${(\n            val ?? 'undefined'\n          ).toString()}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  _updateTrainingOptions(opts: Partial<IFeedForwardTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...this.trainOpts, ...opts };\n    FeedForward._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log ?? this.trainOpts.log);\n    const { callback, callbackPeriod, errorCheckInterval } = this.trainOpts;\n    if (callback && callbackPeriod !== errorCheckInterval) {\n      console.warn(\n        `options.callbackPeriod with value of ${(\n          callbackPeriod ?? 'undefined'\n        ).toString()} does not match options.errorCheckInterval with value of ${(\n          errorCheckInterval ?? 'undefined'\n        ).toString()}, if logging error, it will repeat.  These values may need to match`\n      );\n    }\n  }\n\n  trainOpts: Partial<IFeedForwardTrainingOptions> = {};\n  options: IFeedForwardOptions;\n  layers: ILayer[] | null = null;\n  _inputLayer: ILayer | null = null;\n  _hiddenLayers: ILayer[] | null = null;\n  _outputLayer: ILayer | null = null;\n  _model: ILayer[] | null = null;\n  meanSquaredError: MeanSquaredError | null = null;\n  inputLookup: INumberHash | null = null;\n  inputLookupLength: number | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength: number | null = null;\n  constructor(options: IFeedForwardOptions = {}) {\n    this.options = { ...defaults, ...options };\n    this._updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n  }\n\n  _connectOptionsLayers(): ILayer[] {\n    const { inputLayerIndex, outputLayerIndex, layers } = this.options;\n    if (!layers) throw new Error('this.options.layers in unexpected state');\n    if (typeof inputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    if (typeof outputLayerIndex !== 'number')\n      throw new Error('inputLayerIndex not a number');\n    const inputLayer = layers[inputLayerIndex];\n    if (!inputLayer) {\n      throw new Error('inputLayer not found in this.options.layers');\n    }\n    const outputLayer = layers[outputLayerIndex];\n    if (!outputLayer) {\n      throw new Error('outputLayer not found in this.options.layers');\n    }\n    this._inputLayer = inputLayer;\n    this._hiddenLayers = layers.slice(\n      inputLayerIndex,\n      outputLayerIndex - inputLayerIndex\n    );\n    this._outputLayer = outputLayer;\n    return layers;\n  }\n\n  _connectNewLayers(): ILayer[] {\n    const { inputLayer, outputLayer } = this.options;\n    if (!inputLayer) throw new Error('inputLayer not defined');\n    const layers: ILayer[] = [];\n    this._inputLayer = inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n\n    if (!outputLayer) throw new Error('outputLayer not defined');\n    this._outputLayer = outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    return flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    this._hiddenLayers = [];\n    const result: ILayer[] = [];\n    const { hiddenLayers } = this.options;\n\n    if (!hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i](previousLayer, i);\n      result.push(hiddenLayer);\n      this._hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n\n    return result;\n  }\n\n  initialize(): void {\n    this.layers = this.options.layers\n      ? this._connectOptionsLayers()\n      : this._connectNewLayers();\n    this.initializeLayers(this.layers);\n    this._model = this.layers.filter((l) => l instanceof Model);\n  }\n\n  initializeLayers(layers: ILayer[]): void {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      // TODO: optimize for when training or just running\n      layer.setupKernels(true);\n      if (\n        layer instanceof Model &&\n        layer.praxis === null &&\n        typeof this.options.initPraxis === 'function'\n      ) {\n        layer.praxis = this.options.initPraxis(\n          layer,\n          layer.settings.praxisOpts ?? this.options.praxisOpts ?? {}\n        );\n        layer.praxis.setupKernels();\n      }\n    }\n\n    const lastLayer = layers[layers.length - 1];\n    this.meanSquaredError = new MeanSquaredError({\n      width: lastLayer.width,\n      height: lastLayer.height,\n    });\n  }\n\n  run(input: InputType): OutputType {\n    let typeSafeInput: INumberArray | KernelOutput;\n    if (\n      Array.isArray(input) ||\n      (input as Float32Array).buffer instanceof ArrayBuffer\n    ) {\n      typeSafeInput = input as INumberArray;\n    } else {\n      if (this.inputLookup) {\n        typeSafeInput = lookup.toArray(\n          this.inputLookup,\n          input as INumberHash,\n          this.inputLookupLength as number\n        );\n      } else {\n        throw new Error('input is incompatible with net');\n      }\n    }\n\n    let output = this.runInput(typeSafeInput as KernelOutput);\n    if (output instanceof Texture) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      return lookup.toObject(\n        this.outputLookup,\n        output as number[]\n      ) as OutputType;\n    }\n    return output as OutputType;\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    if (!this.layers) throw new Error('not initialized');\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights as KernelOutput;\n  }\n\n  train(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatters = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatters\n      );\n    }\n    return status;\n  }\n\n  _trainingTick(\n    status: ITrainingStatus,\n    endTime: number,\n    calculateError: () => number,\n    trainPatterns: () => void\n  ): boolean {\n    const { trainOpts } = this;\n    if (\n      status.iterations >= (trainOpts.iterations as number) ||\n      status.error <= (trainOpts.errorThresh as number) ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    if (\n      typeof trainOpts.log === 'function' &&\n      status.iterations % (trainOpts.logPeriod as number) === 0\n    ) {\n      status.error = calculateError();\n      trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (\n      status.iterations % (trainOpts.errorCheckInterval as number) ===\n      0\n    ) {\n      status.error = calculateError();\n    } else {\n      trainPatterns();\n    }\n\n    if (\n      trainOpts.callback &&\n      status.iterations % (trainOpts.callbackPeriod as number) === 0\n    ) {\n      trainOpts.callback(Object.assign(status));\n    }\n\n    status.iterations++;\n    return true;\n  }\n\n  _prepTraining(\n    data: Array<IFeedForwardTrainingData<InputType, OutputType>>,\n    options: Partial<IFeedForwardTrainingOptions>\n  ): IFeedForwardPreppedTrainingData {\n    this._updateTrainingOptions(options);\n\n    const formattedData = this.formatData(data);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(formattedData),\n      status,\n      endTime,\n    };\n  }\n\n  verifyIsInitialized(): void {\n    if (!this._model) {\n      this.initialize();\n    }\n  }\n\n  _calculateTrainingError(preparedData: IFeedForwardGPUTrainingData[]): number {\n    let sum: Float32Array | KernelOutput = new Float32Array([0]);\n    const meanSquaredError = this.meanSquaredError as MeanSquaredError;\n    for (let i = 0; i < preparedData.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(\n        preparedData[i].input,\n        preparedData[i].output,\n        true\n      ) as number;\n      sum = meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = meanSquaredError.divide(preparedData.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray: number[] = result.toArray() as number[];\n      release(result);\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data: IFeedForwardGPUTrainingData[]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  _trainPattern(\n    input: KernelOutput,\n    target: KernelOutput,\n    logErrorRate: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this._outputLayer?.errors) {\n        throw new Error('outputLayer.errors not defined');\n      }\n      return (this.meanSquaredError as MeanSquaredError).calculate(\n        this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target: KernelOutput): void {\n    const layers = this.layers as ILayer[];\n    for (let i = layers.length - 1; i > -1; i--) {\n      layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.trainOpts.learningRate as number);\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(\n    data:\n      | Array<IFeedForwardTrainingData<InputType, OutputType>>\n      | IFeedForwardTrainingData<InputType, OutputType>\n  ): IFeedForwardNormalizedTrainingData[] {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    let formattedData: Array<Partial<IFeedForwardNormalizedTrainingData>>;\n    if (\n      Array.isArray(data) &&\n      !Array.isArray(inputDatumCheck) &&\n      !(inputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.inputLookup) {\n        const lookupTable = new LookupTable(data, 'input');\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map((datumParam): Partial<\n        IFeedForwardNormalizedTrainingData\n      > => {\n        const array = lookup.toArray(\n          this.inputLookup as INumberHash,\n          datumParam.input as INumberHash,\n          this.inputLookupLength as number\n        );\n        return { input: array };\n      }, this);\n    } else {\n      formattedData = data as typeof formattedData;\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (\n      !Array.isArray(outputDatumCheck) &&\n      !(outputDatumCheck instanceof Float32Array)\n    ) {\n      if (!this.outputLookup) {\n        const lookupTable = new LookupTable(data, 'output');\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n      }\n      formattedData = data.map(\n        (datumParam, index): IFeedForwardNormalizedTrainingData => {\n          const array = lookup.toArray(\n            this.outputLookup as INumberHash,\n            datumParam.output as INumberHash,\n            this.inputLookupLength as number\n          );\n          return {\n            input: formattedData[index].input as Float32Array,\n            output: array,\n          };\n        },\n        this\n      );\n    }\n    return formattedData as IFeedForwardNormalizedTrainingData[];\n  }\n\n  transferData(\n    formattedData: IFeedForwardNormalizedTrainingData[]\n  ): IFeedForwardGPUTrainingData[] {\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].input.length],\n        immutable: true,\n      }\n    );\n    const transferOutput = makeKernel(\n      function (this: IKernelFunctionThis, value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [formattedData[0].output.length],\n        immutable: true,\n      }\n    );\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n    return transferredData;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(): void {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON(): IFeedForwardJSON {\n    if (!this.layers) {\n      this.initialize();\n    }\n    if (\n      !this._model ||\n      !this.layers ||\n      !this._inputLayer ||\n      !this._hiddenLayers ||\n      !this._outputLayer\n    ) {\n      throw new Error('network is not initialized');\n    }\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(\n          layer.inputLayer as ILayer\n        );\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(\n          layer.inputLayer1 as ILayer\n        );\n        jsonLayer.inputLayer2Index = this.layers.indexOf(\n          layer.inputLayer2 as ILayer\n        );\n      }\n      jsonLayers.push(jsonLayer);\n    }\n\n    return {\n      type: this.constructor.name,\n      sizes:\n        this.options.sizes ??\n        [this._inputLayer.height]\n          .concat(this._hiddenLayers.map((l) => l.height))\n          .concat([this._outputLayer.height]),\n      outputLayerIndex: this.layers.indexOf(this._outputLayer),\n      layers: jsonLayers as ILayerJSON[],\n      inputLayerIndex: this.layers.indexOf(this._inputLayer),\n    };\n  }\n\n  static fromJSON(\n    json: IFeedForwardJSON,\n    getLayer?: (\n      layerJson: ILayerJSON,\n      inputLayer1?: ILayer,\n      inputLayer2?: ILayer\n    ) => ILayer\n  ): FeedForward {\n    const jsonLayers = json.layers;\n    const layers: ILayer[] = [];\n    const inputLayer = getLayer\n      ? layerFromJSON(jsonLayers[0]) ?? getLayer(jsonLayers[0])\n      : layerFromJSON(jsonLayers[0]);\n\n    if (!inputLayer) throw new Error('unable to find layer');\n\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (\n        typeof jsonLayer.inputLayerIndex === 'undefined' &&\n        typeof jsonLayer.inputLayer1Index === 'undefined' &&\n        typeof jsonLayer.inputLayer2Index === 'undefined'\n      ) {\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer) ?? getLayer(jsonLayer)\n          : layerFromJSON(jsonLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else if (typeof jsonLayer.inputLayerIndex === 'number') {\n        const inputLayer = layers[jsonLayer.inputLayerIndex];\n        if (!inputLayer) {\n          throw new Error('inputLayer1 not found');\n        }\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer) ??\n            getLayer(jsonLayer, inputLayer)\n          : layerFromJSON(jsonLayer, inputLayer);\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      } else {\n        if (typeof jsonLayer.inputLayer1Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer1Index not defined.'\n          );\n        }\n        if (typeof jsonLayer.inputLayer2Index !== 'number') {\n          throw new Error(\n            'Cannot create network from provided JSON. inputLayer2Index not defined.'\n          );\n        }\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer1Index} not found.`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `Cannot create network from provided JSON. layer of index ${jsonLayer.inputLayer2Index} not found.`\n          );\n\n        const layer = getLayer\n          ? layerFromJSON(jsonLayer, inputLayer1, inputLayer2) ??\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n          : layerFromJSON(jsonLayer, inputLayer1, inputLayer2);\n\n        if (!layer) throw new Error('unable to find layer');\n        layers.push(layer);\n      }\n    }\n\n    return new this({ ...json, layers });\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction(): void {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream(): void {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thaw = exports.Block = exports.Thaw = void 0;\n/**\n * thaw an array of items\n */\nvar Thaw = /** @class */ (function () {\n    function Thaw(items, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var _a = __assign(__assign({}, Thaw.defaultSettings), options), each = _a.each, done = _a.done;\n        this.i = 0;\n        this.isStopped = false;\n        this.items = items;\n        this.options = options;\n        this.tick = function () {\n            if (_this.isStopped)\n                return;\n            _this.timeout = setTimeout(_this.tick, 0);\n            if (Thaw.thawing)\n                return;\n            var item = _this.items[_this.i];\n            if (_this.i >= _this.items.length) {\n                if (done !== null) {\n                    Thaw.thawing = true;\n                    done();\n                    Thaw.thawing = false;\n                }\n                _this.isStopped = true;\n                clearTimeout(_this.timeout);\n                return;\n            }\n            if (each !== null) {\n                Thaw.thawing = true;\n                each(item, _this.i);\n                Thaw.thawing = false;\n            }\n            else if (item !== undefined) {\n                item();\n            }\n            _this.i++;\n        };\n        Thaw.thaws.push(this);\n        if (!options.delay) {\n            this.tick();\n        }\n    }\n    Object.defineProperty(Thaw, \"isThawing\", {\n        /**\n         * returns if Thaw.js is thawing\n         */\n        get: function () {\n            return Thaw.thawing;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Stops all Thaw instances\n     */\n    Thaw.stopAll = function () {\n        for (var i = 0; i < Thaw.thaws.length; i++) {\n            Thaw.thaws[i].stop();\n        }\n    };\n    /**\n     * readies thaw to continue\n     */\n    Thaw.prototype.makeReady = function () {\n        if (this.isStopped) {\n            this.isStopped = false;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.add = function (item) {\n        this.items.push(item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.insert = function (item) {\n        this.items.splice(this.i, 0, item);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     */\n    Thaw.prototype.addArray = function (items) {\n        this.items = this.items.concat(items);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     */\n    Thaw.prototype.insertArray = function (items) {\n        var before = this.items.splice(0, this.i);\n        var after = this.items;\n        this.items = before.concat(items, after);\n        if (this.makeReady()) {\n            this.tick();\n        }\n        return this;\n    };\n    /**\n     * Stops this instance of Thaw\n     */\n    Thaw.prototype.stop = function () {\n        this.isStopped = true;\n        clearTimeout(this.timeout);\n        if (this.options.done) {\n            this.options.done();\n        }\n        return this;\n    };\n    Thaw.thawing = false;\n    Thaw.thaws = [];\n    Thaw.defaultSettings = {\n        each: null,\n        done: null\n    };\n    return Thaw;\n}());\nexports.Thaw = Thaw;\n/**\n * simple thaw\n */\nfunction thaw(items, options) {\n    return new Thaw(items, options);\n}\nexports.thaw = thaw;\nvar Block = /** @class */ (function () {\n    function Block(options, count) {\n        if (count === void 0) { count = 200; }\n        this.index = 0;\n        this.thaws = [];\n        this.count = count;\n        this.options = options;\n    }\n    /**\n     * add an item to the end of items\n     */\n    Block.prototype.add = function (item) {\n        var next = this.next();\n        next.add(item);\n        return this;\n    };\n    /**\n     * add an Array to the end of items\n     */\n    Block.prototype.addArray = function (items) {\n        var next = this.next();\n        next.addArray(items);\n        return this;\n    };\n    /**\n     * insert an item into items @ current position\n     */\n    Block.prototype.insert = function (item) {\n        var next = this.next();\n        next.insert(item);\n        return this;\n    };\n    /**\n     * insert and array into items @ current position\n     */\n    Block.prototype.insertArray = function (items) {\n        var next = this.next();\n        next.insertArray(items);\n        return this;\n    };\n    /**\n     * Stops all thaws in this block\n     */\n    Block.prototype.stop = function () {\n        for (var i = 0; i < this.thaws.length; i++) {\n            this.thaws[i].stop();\n        }\n        return this;\n    };\n    /**\n     * Get next available in block\n     */\n    Block.prototype.next = function () {\n        var thaw;\n        var thaws = this.thaws;\n        if (thaws.length < this.count) {\n            thaw = new Thaw([], this.options);\n            thaws.push(thaw);\n        }\n        else {\n            thaw = thaws[this.index] || null;\n        }\n        this.index++;\n        if (this.index >= this.count) {\n            this.index = 0;\n        }\n        return thaw;\n    };\n    return Block;\n}());\nexports.Block = Block;\nif (typeof window !== 'undefined') {\n    // @ts-ignore\n    window.Thaw = Thaw;\n    // @ts-ignore\n    window.thaw = thaw;\n    // @ts-ignore\n    window.Thaw.Block = Block;\n}\n","export function arraysToFloat32Arrays(arrays: number[][]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\n\nexport function inputOutputArraysToFloat32Arrays(\n  input: number[][],\n  output: number[][]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from(input[i]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from(output[i]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Arrays(array: number[]): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\n\nexport function inputOutputArrayToFloat32Arrays(\n  input: number[],\n  output: number[]\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    result.push(Float32Array.from([input[i]]));\n  }\n  for (let i = 0; i < output.length; i++) {\n    result.push(Float32Array.from([output[i]]));\n  }\n  return result;\n}\n\nexport function arrayToFloat32Array(array: number[]): Float32Array {\n  return Float32Array.from(array);\n}\n\nexport function objectsToFloat32Arrays(\n  objects: Array<Record<string, number>>,\n  table: Record<string, number>,\n  length: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < objects.length; i++) {\n    const object = objects[i];\n    const result = new Float32Array(length);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function inputOutputObjectsToFloat32Arrays(\n  input: Array<Record<string, number>>,\n  output: Array<Record<string, number>>,\n  inputTable: Record<string, number>,\n  outputTable: Record<string, number>,\n  inputLength: number,\n  outputLength: number\n): Float32Array[] {\n  const results: Float32Array[] = [];\n  for (let i = 0; i < input.length; i++) {\n    const object = input[i];\n    const result = new Float32Array(inputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[inputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  for (let i = 0; i < output.length; i++) {\n    const object = output[i];\n    const result = new Float32Array(outputLength);\n    for (const p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[outputTable[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\n\nexport function objectToFloat32Arrays(\n  object: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in object) {\n    if (!object.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\n\nexport function inputOutputObjectToFloat32Arrays(\n  input: Record<string, number>,\n  output: Record<string, number>\n): Float32Array[] {\n  const result: Float32Array[] = [];\n  for (const p in input) {\n    if (!input.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([input[p]]));\n  }\n  for (const p in output) {\n    if (!output.hasOwnProperty(p)) continue;\n    result.push(Float32Array.from([output[p]]));\n  }\n  return result;\n}\n\nexport function objectToFloat32Array(\n  object: Record<string, number>,\n  table: Record<string, number>,\n  length: number\n): Float32Array {\n  const result = new Float32Array(length);\n  for (const p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n","export function max(\n  values:\n    | Float32Array\n    | {\n        [key: string]: number;\n      }\n): number {\n  if (Array.isArray(values) || values instanceof Float32Array) {\n    return Math.max(...values);\n  } else {\n    return Math.max(...Object.values(values));\n  }\n}\n","export function mse(errors: Float32Array): number {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","import { Thaw } from 'thaw.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  INeuralNetworkBinaryTestResult,\n  INeuralNetworkState,\n  INeuralNetworkTestResult,\n} from './neural-network-types';\nimport { arrayToFloat32Array } from './utilities/cast';\nimport { LookupTable } from './utilities/lookup-table';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { randos } from './utilities/randos';\nimport { zeros } from './utilities/zeros';\n\ntype NeuralNetworkFormatter =\n  | ((v: INumberHash) => Float32Array)\n  | ((v: number[]) => Float32Array);\n\nfunction getTypedArrayFn(\n  value: INeuralNetworkData,\n  table: INumberHash | null\n): null | NeuralNetworkFormatter {\n  if ((value as Float32Array).buffer instanceof ArrayBuffer) {\n    return null;\n  }\n  if (Array.isArray(value)) {\n    return arrayToFloat32Array;\n  }\n  if (!table) throw new Error('table is not Object');\n  const { length } = Object.keys(table);\n  return (v: INumberHash): Float32Array => {\n    const array = new Float32Array(length);\n    for (const p in table) {\n      if (!table.hasOwnProperty(p)) continue;\n      array[table[p]] = v[p] || 0;\n    }\n    return array;\n  };\n}\n\nexport type NeuralNetworkActivation =\n  | 'sigmoid'\n  | 'relu'\n  | 'leaky-relu'\n  | 'tanh';\n\nexport interface IJSONLayer {\n  biases: number[];\n  weights: number[][];\n}\n\nexport interface INeuralNetworkJSON {\n  type: string;\n  sizes: number[];\n  layers: IJSONLayer[];\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n  options: INeuralNetworkOptions;\n  trainOpts: INeuralNetworkTrainOptionsJSON;\n}\n\nexport interface INeuralNetworkOptions {\n  inputSize: number;\n  outputSize: number;\n  binaryThresh: number;\n  hiddenLayers?: number[];\n}\n\nexport function defaults(): INeuralNetworkOptions {\n  return {\n    inputSize: 0,\n    outputSize: 0,\n    binaryThresh: 0.5,\n  };\n}\n\nexport interface INeuralNetworkTrainOptionsJSON {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean;\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport interface INeuralNetworkPreppedTrainingData<T> {\n  status: ITrainingStatus;\n  preparedData: Array<INeuralNetworkDatumFormatted<T>>;\n  endTime: number;\n}\n\nexport interface INeuralNetworkTrainOptions {\n  activation: NeuralNetworkActivation | string;\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: INeuralNetworkState) => void);\n  logPeriod: number;\n  leakyReluAlpha: number;\n  learningRate: number;\n  momentum: number;\n  callback?: (status: { iterations: number; error: number }) => void;\n  callbackPeriod: number;\n  timeout: number;\n  praxis?: 'adam';\n  beta1: number;\n  beta2: number;\n  epsilon: number;\n}\n\nexport function trainDefaults(): INeuralNetworkTrainOptions {\n  return {\n    activation: 'sigmoid',\n    iterations: 20000, // the maximum times to iterate the training data\n    errorThresh: 0.005, // the acceptable error percentage from training data\n    log: false, // true to use console.log, when a function is supplied it is used\n    logPeriod: 10, // iterations between logging out\n    leakyReluAlpha: 0.01,\n    learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n    momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n    callbackPeriod: 10, // the number of iterations through the training data between callback calls\n    timeout: Infinity, // the max number of milliseconds to train for\n    beta1: 0.9,\n    beta2: 0.999,\n    epsilon: 1e-8,\n  };\n}\n\nexport type INeuralNetworkData = number[] | Float32Array | Partial<INumberHash>;\n\n// TODO: should be replaced by ITrainingDatum\nexport interface INeuralNetworkDatum<InputType, OutputType> {\n  input: InputType;\n  output: OutputType;\n}\n\nexport interface INeuralNetworkDatumFormatted<T> {\n  input: T;\n  output: T;\n}\n\nexport class NeuralNetwork<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n> {\n  options: INeuralNetworkOptions = defaults();\n  trainOpts: INeuralNetworkTrainOptions = trainDefaults();\n  sizes: number[] = [];\n  outputLayer = -1;\n  biases: Float32Array[] = [];\n  weights: Float32Array[][] = []; // weights for bias nodes\n  outputs: Float32Array[] = [];\n  // state for training\n  deltas: Float32Array[] = [];\n  changes: Float32Array[][] = []; // for momentum\n  errors: Float32Array[] = [];\n\n  errorCheckInterval = 1;\n\n  inputLookup: INumberHash | null = null;\n  inputLookupLength = 0;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  _formatInput: NeuralNetworkFormatter | null = null;\n  _formatOutput: NeuralNetworkFormatter | null = null;\n\n  runInput: (input: Float32Array) => Float32Array = (input: Float32Array) => {\n    this.setActivation();\n    return this.runInput(input);\n  };\n\n  calculateDeltas: (output: Float32Array) => void = (\n    output: Float32Array\n  ): void => {\n    this.setActivation();\n    return this.calculateDeltas(output);\n  };\n\n  // adam\n  biasChangesLow: Float32Array[] = [];\n  biasChangesHigh: Float32Array[] = [];\n  changesLow: Float32Array[][] = [];\n  changesHigh: Float32Array[][] = [];\n  iterations = 0;\n\n  constructor(\n    options: Partial<INeuralNetworkOptions & INeuralNetworkTrainOptions> = {}\n  ) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions(options);\n\n    const { inputSize, hiddenLayers, outputSize } = this.options;\n    if (inputSize && outputSize) {\n      this.sizes = [inputSize].concat(hiddenLayers ?? []).concat([outputSize]);\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  initialize(): void {\n    if (!this.sizes.length) {\n      throw new Error('Sizes must be set before initializing');\n    }\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = new Array(this.outputLayer); // weights for bias nodes\n    this.weights = new Array(this.outputLayer);\n    this.outputs = new Array(this.outputLayer);\n\n    // state for training\n    this.deltas = new Array(this.outputLayer);\n    this.changes = new Array(this.outputLayer); // for momentum\n    this.errors = new Array(this.outputLayer);\n\n    for (let layerIndex = 0; layerIndex <= this.outputLayer; layerIndex++) {\n      const size = this.sizes[layerIndex];\n      this.deltas[layerIndex] = zeros(size);\n      this.errors[layerIndex] = zeros(size);\n      this.outputs[layerIndex] = zeros(size);\n\n      if (layerIndex > 0) {\n        this.biases[layerIndex] = randos(size);\n        this.weights[layerIndex] = new Array(size);\n        this.changes[layerIndex] = new Array(size);\n\n        for (let nodeIndex = 0; nodeIndex < size; nodeIndex++) {\n          const prevSize = this.sizes[layerIndex - 1];\n          this.weights[layerIndex][nodeIndex] = randos(prevSize);\n          this.changes[layerIndex][nodeIndex] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n    if (this.trainOpts.praxis === 'adam') {\n      this._setupAdam();\n    }\n  }\n\n  setActivation(activation?: NeuralNetworkActivation): void {\n    const value = activation ?? this.trainOpts.activation;\n    switch (value) {\n      case 'sigmoid':\n        this.runInput = this._runInputSigmoid;\n        this.calculateDeltas = this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this._runInputRelu;\n        this.calculateDeltas = this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this._runInputLeakyRelu;\n        this.calculateDeltas = this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this._runInputTanh;\n        this.calculateDeltas = this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${value}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n  }\n\n  get isRunnable(): boolean {\n    return this.sizes.length > 0;\n  }\n\n  run(input: Partial<InputType>): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    if (formattedInput.length !== this.sizes[0]) {\n      throw new Error(`input is not in correct length of ${this.sizes[0]}`);\n    }\n    const output = this.runInput(formattedInput).slice(0);\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output\n      ) as unknown) as OutputType;\n    }\n    return (output as unknown) as OutputType;\n  }\n\n  _runInputSigmoid(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeLayer = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeLayer; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        activeOutputs[node] = 1 / (1 + Math.exp(-sum));\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        activeOutputs[node] = sum < 0 ? 0 : sum;\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n    const { leakyReluAlpha } = this.trainOpts;\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        activeOutputs[node] = Math.max(sum, leakyReluAlpha * sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  _runInputTanh(input: Float32Array): Float32Array {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const activeSize = this.sizes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n      const activeOutputs = this.outputs[layer];\n      for (let node = 0; node < activeSize; node++) {\n        const weights = activeWeights[node];\n\n        let sum = activeBiases[node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        activeOutputs[node] = Math.tanh(sum);\n      }\n      output = input = activeOutputs;\n    }\n    if (!output) {\n      throw new Error('output was empty');\n    }\n    return output;\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them based off the data set.\n   */\n  verifyIsInitialized(\n    preparedData: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): void {\n    if (this.sizes.length) return;\n\n    this.sizes = [];\n    this.sizes.push(preparedData[0].input.length);\n    if (!this.options.hiddenLayers) {\n      this.sizes.push(\n        Math.max(3, Math.floor(preparedData[0].input.length / 2))\n      );\n    } else {\n      this.options.hiddenLayers.forEach((size) => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(preparedData[0].output.length);\n\n    this.initialize();\n  }\n\n  updateTrainingOptions(trainOpts: Partial<INeuralNetworkTrainOptions>): void {\n    const merged = { ...this.trainOpts, ...trainOpts };\n    this.validateTrainingOptions(merged);\n    this.trainOpts = merged;\n    this.setLogMethod(this.trainOpts.log);\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      activation: () => {\n        return ['sigmoid', 'relu', 'leaky-relu', 'tanh'].includes(\n          options.activation\n        );\n      },\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      leakyReluAlpha: () => {\n        const val = options.leakyReluAlpha;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      momentum: () => {\n        const val = options.momentum;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n      praxis: () => {\n        const val = options.praxis;\n        return !val || val === 'adam';\n      },\n      beta1: () => {\n        const val = options.beta1;\n        return val > 0 && val < 1;\n      },\n      beta2: () => {\n        const val = options.beta2;\n        return val > 0 && val < 1;\n      },\n      epsilon: () => {\n        const val = options.epsilon;\n        return val > 0 && val < 1;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  getTrainOptsJSON(): INeuralNetworkTrainOptionsJSON {\n    const {\n      activation,\n      iterations,\n      errorThresh,\n      log,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    } = this.trainOpts;\n    return {\n      activation,\n      iterations,\n      errorThresh,\n      log:\n        typeof log === 'function'\n          ? true\n          : typeof log === 'boolean'\n          ? log\n          : false,\n      logPeriod,\n      leakyReluAlpha,\n      learningRate,\n      momentum,\n      callbackPeriod,\n      timeout: timeout === Infinity ? 'Infinity' : timeout,\n      praxis,\n      beta1,\n      beta2,\n      epsilon,\n    };\n  }\n\n  setLogMethod(log: boolean | ((state: INeuralNetworkState) => void)): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = this.logTrainingStatus;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  logTrainingStatus(status: INeuralNetworkState): void {\n    console.log(\n      `iterations: ${status.iterations}, training error: ${status.error}`\n    );\n  }\n\n  calculateTrainingError(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>\n  ): number {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this.trainPattern(data[i], true) as number;\n    }\n    return sum / data.length;\n  }\n\n  trainPatterns(data: Array<INeuralNetworkDatumFormatted<Float32Array>>): void {\n    for (let i = 0; i < data.length; ++i) {\n      this.trainPattern(data[i]);\n    }\n  }\n\n  trainingTick(\n    data: Array<INeuralNetworkDatumFormatted<Float32Array>>,\n    status: INeuralNetworkState,\n    endTime: number\n  ): boolean {\n    const {\n      callback,\n      callbackPeriod,\n      errorThresh,\n      iterations,\n      log,\n      logPeriod,\n    } = this.trainOpts;\n\n    if (\n      status.iterations >= iterations ||\n      status.error <= errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (log && status.iterations % logPeriod === 0) {\n      status.error = this.calculateTrainingError(data);\n      (log as (state: INeuralNetworkState) => void)(status);\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this.calculateTrainingError(data);\n    } else {\n      this.trainPatterns(data);\n    }\n\n    if (callback && status.iterations % callbackPeriod === 0) {\n      callback({\n        iterations: status.iterations,\n        error: status.error,\n      });\n    }\n    return true;\n  }\n\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkPreppedTrainingData<Float32Array> {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>> | any,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkState {\n    const { preparedData, status, endTime } = this.prepTraining(data, options);\n\n    while (true) {\n      if (!this.trainingTick(preparedData, status, endTime)) {\n        break;\n      }\n    }\n    return status;\n  }\n\n  async trainAsync(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): Promise<ITrainingStatus> {\n    const { preparedData, status, endTime } = this.prepTraining(data, options);\n\n    return await new Promise((resolve, reject) => {\n      try {\n        const thawedTrain: Thaw = new Thaw(\n          new Array(this.trainOpts.iterations),\n          {\n            delay: true,\n            each: () =>\n              this.trainingTick(preparedData, status, endTime) ||\n              thawedTrain.stop(),\n            done: () => resolve(status),\n          }\n        );\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(trainError);\n      }\n    });\n  }\n\n  trainPattern(\n    value: INeuralNetworkDatumFormatted<Float32Array>,\n    logErrorRate?: boolean\n  ): number | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  _calculateDeltasSigmoid(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const activeSize = this.sizes[layer];\n      const activeOutput = this.outputs[layer];\n      const activeError = this.errors[layer];\n      const activeDeltas = this.deltas[layer];\n      const nextLayer = this.weights[layer + 1];\n\n      for (let node = 0; node < activeSize; node++) {\n        const output = activeOutput[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * nextLayer[k][node];\n          }\n        }\n        activeError[node] = error;\n        activeDeltas[node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  _calculateDeltasRelu(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextWeights = this.weights[layer + 1];\n      const nextDeltas = this.deltas[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  _calculateDeltasLeakyRelu(target: Float32Array): void {\n    const alpha = this.trainOpts.leakyReluAlpha;\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = output > 0 ? error : alpha * error;\n      }\n    }\n  }\n\n  _calculateDeltasTanh(target: Float32Array): void {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      const currentSize = this.sizes[layer];\n      const currentOutputs = this.outputs[layer];\n      const nextDeltas = this.deltas[layer + 1];\n      const nextWeights = this.weights[layer + 1];\n      const currentErrors = this.errors[layer];\n      const currentDeltas = this.deltas[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const output = currentOutputs[node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          for (let k = 0; k < nextDeltas.length; k++) {\n            error += nextDeltas[k] * nextWeights[k][node];\n          }\n        }\n        currentErrors[node] = error;\n        currentDeltas[node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  adjustWeights(): void {\n    const { learningRate, momentum } = this.trainOpts;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const activeSize = this.sizes[layer];\n      const activeDelta = this.deltas[layer];\n      const activeChanges = this.changes[layer];\n      const activeWeights = this.weights[layer];\n      const activeBiases = this.biases[layer];\n\n      for (let node = 0; node < activeSize; node++) {\n        const delta = activeDelta[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = activeChanges[node][k];\n\n          change = learningRate * delta * incoming[k] + momentum * change;\n\n          activeChanges[node][k] = change;\n          activeWeights[node][k] += change;\n        }\n        activeBiases[node] += learningRate * delta;\n      }\n    }\n  }\n\n  _setupAdam(): void {\n    this.biasChangesLow = [];\n    this.biasChangesHigh = [];\n    this.changesLow = [];\n    this.changesHigh = [];\n    this.iterations = 0;\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      if (layer > 0) {\n        this.biasChangesLow[layer] = zeros(size);\n        this.biasChangesHigh[layer] = zeros(size);\n        this.changesLow[layer] = new Array(size);\n        this.changesHigh[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.changesLow[layer][node] = zeros(prevSize);\n          this.changesHigh[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.adjustWeights = this._adjustWeightsAdam;\n  }\n\n  _adjustWeightsAdam(): void {\n    this.iterations++;\n\n    const { iterations } = this;\n    const { beta1, beta2, epsilon, learningRate } = this.trainOpts;\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n      const currentSize = this.sizes[layer];\n      const currentDeltas = this.deltas[layer];\n      const currentChangesLow = this.changesLow[layer];\n      const currentChangesHigh = this.changesHigh[layer];\n      const currentWeights = this.weights[layer];\n      const currentBiases = this.biases[layer];\n      const currentBiasChangesLow = this.biasChangesLow[layer];\n      const currentBiasChangesHigh = this.biasChangesHigh[layer];\n\n      for (let node = 0; node < currentSize; node++) {\n        const delta = currentDeltas[node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          const gradient = delta * incoming[k];\n          const changeLow =\n            currentChangesLow[node][k] * beta1 + (1 - beta1) * gradient;\n          const changeHigh =\n            currentChangesHigh[node][k] * beta2 +\n            (1 - beta2) * gradient * gradient;\n\n          const momentumCorrection =\n            changeLow / (1 - Math.pow(beta1, iterations));\n          const gradientCorrection =\n            changeHigh / (1 - Math.pow(beta2, iterations));\n\n          currentChangesLow[node][k] = changeLow;\n          currentChangesHigh[node][k] = changeHigh;\n          currentWeights[node][k] +=\n            (learningRate * momentumCorrection) /\n            (Math.sqrt(gradientCorrection) + epsilon);\n        }\n\n        const biasGradient = currentDeltas[node];\n        const biasChangeLow =\n          currentBiasChangesLow[node] * beta1 + (1 - beta1) * biasGradient;\n        const biasChangeHigh =\n          currentBiasChangesHigh[node] * beta2 +\n          (1 - beta2) * biasGradient * biasGradient;\n\n        const biasMomentumCorrection =\n          currentBiasChangesLow[node] / (1 - Math.pow(beta1, iterations));\n        const biasGradientCorrection =\n          currentBiasChangesHigh[node] / (1 - Math.pow(beta2, iterations));\n\n        currentBiasChangesLow[node] = biasChangeLow;\n        currentBiasChangesHigh[node] = biasChangeHigh;\n        currentBiases[node] +=\n          (learningRate * biasMomentumCorrection) /\n          (Math.sqrt(biasGradientCorrection) + epsilon);\n      }\n    }\n  }\n\n  formatData(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>\n  ): Array<INeuralNetworkDatumFormatted<Float32Array>> {\n    if (!Array.isArray(data[0].input)) {\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      } else {\n        const inputLookup = new LookupTable(data, 'input');\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n      }\n    }\n\n    if (!Array.isArray(data[0].output)) {\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      } else {\n        const lookup = new LookupTable(data, 'output');\n        this.outputLookup = lookup.table;\n        this.outputLookupLength = lookup.length;\n      }\n    }\n\n    if (!this._formatInput) {\n      this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n    }\n\n    if (!this._formatOutput) {\n      this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    if (this._formatInput && this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    if (this._formatInput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (this._formatInput as (v: INumberHash) => Float32Array)(\n            (data[i].input as unknown) as INumberHash\n          ),\n          output: (data[i].output as unknown) as Float32Array,\n        });\n      }\n      return result;\n    }\n    if (this._formatOutput) {\n      const result: Array<INeuralNetworkDatumFormatted<Float32Array>> = [];\n      for (let i = 0; i < data.length; i++) {\n        result.push({\n          input: (data[i].input as unknown) as Float32Array,\n          output: (this._formatOutput as (v: INumberHash) => Float32Array)(\n            (data[i].output as unknown) as INumberHash\n          ),\n        });\n      }\n      return result;\n    }\n    return (data as unknown) as Array<\n      INeuralNetworkDatumFormatted<Float32Array>\n    >;\n  }\n\n  addFormat(data: INeuralNetworkDatum<InputType, OutputType>): void {\n    if (!Array.isArray(data.input) || typeof data.input[0] !== 'number') {\n      this.inputLookup = lookup.addKeys(\n        (data.input as unknown) as INumberHash,\n        this.inputLookup ?? {}\n      );\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n    }\n    if (!Array.isArray(data.output) || typeof data.output[0] !== 'number') {\n      this.outputLookup = lookup.addKeys(\n        (data.output as unknown) as INumberHash,\n        this.outputLookup ?? {}\n      );\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      }\n    }\n  }\n\n  test(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>\n  ): INeuralNetworkTestResult | INeuralNetworkBinaryTestResult {\n    const { preparedData } = this.prepTraining(data);\n    // for binary classification problems with one output node\n    const isBinary = preparedData[0].output.length === 1;\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    if (isBinary) {\n      let falsePos = 0;\n      let falseNeg = 0;\n      let truePos = 0;\n      let trueNeg = 0;\n\n      for (let i = 0; i < preparedData.length; i++) {\n        const output = this.runInput(preparedData[i].input);\n        const target = preparedData[i].output;\n        const actual = output[0] > this.options.binaryThresh ? 1 : 0;\n        const expected = target[0];\n\n        if (actual !== expected) {\n          const misclass = preparedData[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual,\n            expected,\n          });\n        }\n\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n\n        errorSum += mse(\n          output.map((value, i) => {\n            return target[i] - value;\n          })\n        );\n      }\n\n      return {\n        error: errorSum / preparedData.length,\n        misclasses,\n        total: preparedData.length,\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n        recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n        accuracy: (trueNeg + truePos) / preparedData.length,\n      };\n    }\n\n    for (let i = 0; i < preparedData.length; i++) {\n      const output = this.runInput(preparedData[i].input);\n      const target = preparedData[i].output;\n      const actual = output.indexOf(max(output));\n      const expected = target.indexOf(max(target));\n\n      if (actual !== expected) {\n        const misclass = preparedData[i];\n        misclasses.push({\n          input: misclass.input,\n          output: misclass.output,\n          actual,\n          expected,\n        });\n      }\n\n      errorSum += mse(\n        output.map((value, i) => {\n          return target[i] - value;\n        })\n      );\n    }\n    return {\n      error: errorSum / preparedData.length,\n      misclasses,\n      total: preparedData.length,\n    };\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (!this.isRunnable) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return layerWeights.map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(layerBiases)\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    const outputLength = this.sizes.length - 1;\n    for (let i = 0; i <= outputLength; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetwork',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n\n  fromJSON(json: INeuralNetworkJSON): this {\n    this.options = { ...defaults(), ...json.options };\n    if (json.hasOwnProperty('trainOpts')) {\n      const trainOpts = {\n        ...json.trainOpts,\n        timeout:\n          json.trainOpts.timeout === 'Infinity'\n            ? Infinity\n            : json.trainOpts.timeout,\n      };\n      this.updateTrainingOptions(trainOpts);\n    }\n    this.sizes = json.sizes;\n    this.initialize();\n\n    this.inputLookup = json.inputLookup ? { ...json.inputLookup } : null;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup ? { ...json.outputLookup } : null;\n    this.outputLookupLength = json.outputLookupLength;\n\n    const jsonLayers = json.layers;\n    const layerWeights = this.weights.map((layerWeights, layerIndex) => {\n      return jsonLayers[layerIndex].weights.map((layerWeights) =>\n        Float32Array.from(layerWeights)\n      );\n    });\n    const layerBiases = this.biases.map((layerBiases, layerIndex) =>\n      Float32Array.from(jsonLayers[layerIndex].biases)\n    );\n    for (let i = 0; i <= this.outputLayer; i++) {\n      this.weights[i] = layerWeights[i] || [];\n      this.biases[i] = layerBiases[i] || [];\n    }\n    return this;\n  }\n\n  toFunction(\n    cb?: (source: string) => string\n  ): (input: Partial<InputType>) => OutputType {\n    const { activation, leakyReluAlpha } = this.trainOpts;\n    let needsVar = false;\n    const nodeHandle = (layerIndex: number, nodeIndex: number): string => {\n      if (layerIndex === 0) {\n        return `(input[${nodeIndex}]||0)`;\n      }\n\n      const weights: Float32Array = this.weights[layerIndex][nodeIndex];\n      const bias: number = this.biases[layerIndex][nodeIndex];\n      if (!weights) {\n        throw new Error(\n          `weights at layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      if (!bias) {\n        throw new Error(\n          `bias as layerIndex ${layerIndex} & nodeIndex ${nodeIndex} not found`\n        );\n      }\n      const weightsArray: string[] = [];\n      weights.forEach((weight: number, subNodeIndex: number): void => {\n        if (weight < 0) {\n          weightsArray.push(\n            `${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        } else {\n          weightsArray.push(\n            `+${weight}*${nodeHandle(layerIndex - 1, subNodeIndex)}`\n          );\n        }\n      });\n      const result = `(${bias.toString()}${weightsArray.join('')})`;\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result}))`;\n        case 'relu': {\n          needsVar = true;\n          return `((v=${result})<0?0:v)`;\n        }\n        case 'leaky-relu': {\n          needsVar = true;\n          return `Math.max((v=${result}),${leakyReluAlpha}*v)`;\n        }\n        case 'tanh':\n          return `Math.tanh(${result})`;\n        default:\n          throw new Error(\n            `Unknown activation ${activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n          );\n      }\n    };\n\n    function checkKeys(keys: string[]): void {\n      if (keys.find((v) => v.includes('\"'))) {\n        throw new Error(`key contains '\"', which is not compatible`);\n      }\n    }\n\n    const layersAsMath: string[] = [];\n    let result: string;\n\n    let inputLookup = '';\n    if (this.inputLookup) {\n      const keys = Object.keys(this.inputLookup);\n      checkKeys(keys);\n      inputLookup = `input = new Float32Array([${Object.keys(this.inputLookup)\n        .map((key) => `input[\"${key}\"]`)\n        .join(',')}]);`;\n    }\n    if (this.sizes.length < 1) throw new Error('No layers');\n    for (\n      let nodeIndex = 0;\n      nodeIndex < this.sizes[this.outputLayer];\n      nodeIndex++\n    ) {\n      layersAsMath.push(nodeHandle(this.outputLayer, nodeIndex));\n    }\n    if (this.outputLookup) {\n      const keys = Object.keys(this.outputLookup);\n      checkKeys(keys);\n      const values = keys\n        .map((key, i) => `\"${key}\":${layersAsMath[i]}`)\n        .join(',');\n      result = `{${values}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n\n    const source = `${inputLookup}${needsVar ? 'var v;' : ''}return ${result};`;\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n    return new Function('input', cb ? cb(source) : source) as (\n      input: Partial<InputType>\n    ) => OutputType;\n  }\n}\n","import {\n  alias,\n  GPU,\n  GPUFunction,\n  IKernelFunctionThis,\n  IKernelMapRunShortcut,\n  IMappedKernelResult,\n  KernelOutput,\n  Texture,\n  utils,\n} from 'gpu.js';\nimport { ITrainingStatus } from './feed-forward';\nimport { INumberHash, lookup } from './lookup';\nimport {\n  IJSONLayer,\n  INeuralNetworkDatum,\n  INeuralNetworkJSON,\n  INeuralNetworkOptions,\n  INeuralNetworkPreppedTrainingData,\n  INeuralNetworkTrainOptions,\n  NeuralNetwork,\n} from './neural-network';\nimport { release } from './utilities/kernel';\n\nexport interface INeuralNetworkGPUDatumFormatted {\n  input: KernelOutput;\n  output: KernelOutput;\n}\n\nexport interface INeuralNetworkGPUPreppedTrainingData\n  extends INeuralNetworkPreppedTrainingData<KernelOutput> {\n  status: ITrainingStatus;\n  endTime: number;\n}\n\ninterface ISizedKernelThis extends IKernelFunctionThis {\n  constants: {\n    size: number;\n  };\n}\n\nfunction weightedSumSigmoid(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(\n  this: ISizedKernelThis,\n  weights: number[][],\n  biases: number[],\n  inputs: number[]\n): number {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output: number, target: number): number {\n  return target - output;\n}\n\nfunction calcDeltasSigmoid(error: number, output: number): number {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error: number, output: number): number {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error: number, output: number): number {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error: number, output: number): number {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(\n  x: number,\n  size: number,\n  nextWeights: number[][],\n  nextDeltas: number[]\n): number {\n  let error = 0;\n  for (let k = 0; k < size; k++) {\n    error += nextDeltas[k] * nextWeights[k][x];\n  }\n  return error;\n}\n\ninterface ILearningKernelThis extends IKernelFunctionThis {\n  constants: {\n    momentum: number;\n    learningRate: number;\n  };\n}\n\nfunction calcChanges(\n  learningRate: number,\n  momentum: number,\n  previousChange: number,\n  delta: number,\n  previousOutput: number\n): number {\n  return learningRate * delta * previousOutput + momentum * previousChange;\n}\n\nfunction addWeights(\n  change: number,\n  weight: number\n): number {\n  return change + weight;\n}\n\nfunction addBiases(\n  this: ILearningKernelThis,\n  biases: number[],\n  deltas: number[]\n): number {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(this: ISizedKernelThis, errors: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\nexport interface INeuralNetworkGPUOptions extends INeuralNetworkOptions {\n  mode?: 'cpu' | 'gpu';\n}\n\nexport type BackPropagateOutput = (\n  this: IKernelFunctionThis,\n  outputs: KernelOutput,\n  targets: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport type BackPropagateLayer = (\n  this: IKernelFunctionThis,\n  weights: KernelOutput,\n  outputs: KernelOutput,\n  deltas: KernelOutput\n) => { result: KernelOutput; error: KernelOutput };\n\nexport class NeuralNetworkGPU<InputType, OutputType> extends NeuralNetwork<\n  InputType,\n  OutputType\n> {\n  gpu: GPU;\n\n  texturizeInputData: (value: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  forwardPropagate: Array<\n    (\n      weights: KernelOutput,\n      biases: KernelOutput,\n      inputs: KernelOutput\n    ) => KernelOutput\n  > = [];\n\n  backwardPropagate: Array<BackPropagateOutput | BackPropagateLayer> = [];\n\n  changesPropagate: Array<\n    ((\n      this: IKernelFunctionThis<{\n        size: number;\n        learningRate: number;\n        momentum: number;\n      }>,\n      previousOutputs: number[],\n      deltas: number[],\n      weights: number[][],\n      previousChanges: number[][]\n    ) => IMappedKernelResult) &\n      IKernelMapRunShortcut<{ weights: number[][]; changes: number[][] }>\n  > = [];\n\n  biasesPropagate: Array<\n    (biases: KernelOutput, deltas: KernelOutput) => KernelOutput\n  > = [];\n\n  getMSE: (error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _addMSE: (sum: KernelOutput, error: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  _divideMSESum: (length: number, sum: KernelOutput) => KernelOutput = () => {\n    throw new Error('not yet setup');\n  };\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  outputs: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  deltas: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  errors: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  weights: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  changes: KernelOutput[] = [];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  biases: KernelOutput[] = [];\n\n  constructor(options: Partial<INeuralNetworkGPUOptions> = {}) {\n    super(options);\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  initialize(): void {\n    super.initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation(): void {}\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(\n    value: INeuralNetworkGPUDatumFormatted,\n    logErrorRate?: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInput(value.input);\n\n    // back propagate\n    this.calculateDeltas(value.output);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  calculateTrainingError(data: INeuralNetworkGPUDatumFormatted[]): number {\n    let sum = new Float32Array([0]) as KernelOutput;\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this.trainPattern(data[i], true) as KernelOutput;\n      sum = this._addMSE(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this._divideMSESum(data.length, sum);\n    release(sum);\n    return (result instanceof Texture\n      ? (result.toArray() as number[])\n      : (result as number[]))[0];\n  }\n\n  adjustWeights(): void {\n    this.getChanges();\n    this.changeBiases();\n  }\n\n  buildRunInput(): void {\n    let weightedSum = null;\n\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n        immutable: true,\n      });\n    }\n\n    this.texturizeInputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [this.sizes[1]],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  runInput = (input: KernelOutput): KernelOutput => {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      release(this.outputs[layer]);\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      output = input = this.outputs[layer];\n    }\n    return output;\n  };\n\n  buildCalculateDeltas(): void {\n    let calcDeltas: GPUFunction<[number, number]>;\n    switch (this.trainOpts.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `Unknown activation ${this.trainOpts.activation}. Available activations are: 'sigmoid', 'relu', 'leaky-relu', 'tanh'`\n        );\n    }\n\n    calcDeltas = alias(\n      utils.getMinifySafeName(() => calcDeltas),\n      calcDeltas\n    );\n    this.gpu.addFunction(calcDeltas);\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[this.outputLayer] = this.gpu.createKernelMap(\n          {\n            error: calcErrorOutput,\n          },\n          function (\n            this: IKernelFunctionThis,\n            outputs: number[],\n            targets: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            const target = targets[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(calcErrorOutput(output, target), output);\n          },\n          {\n            output: [this.sizes[this.outputLayer]],\n            pipeline: true,\n            immutable: true,\n          }\n        );\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: calcError,\n          },\n          function (\n            this: ISizedKernelThis,\n            nextWeights: number[][],\n            outputs: number[],\n            nextDeltas: number[]\n          ): number {\n            const output = outputs[this.thread.x];\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error\n            return calcDeltas(\n              calcError(\n                this.thread.x,\n                this.constants.size,\n                nextWeights,\n                nextDeltas\n              ),\n              output\n            );\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.sizes[layer + 1],\n            },\n            immutable: true,\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas = (target: KernelOutput): void => {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      release(this.deltas[layer]);\n      release(this.errors[layer]);\n\n      let output;\n      if (layer === this.outputLayer) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n      this.deltas[layer] = output.result;\n      this.errors[layer] = output.error;\n    }\n  };\n\n  buildGetChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: addWeights,\n          changes: calcChanges,\n        },\n        function (\n          this: IKernelFunctionThis<{\n            size: number;\n            learningRate: number;\n            momentum: number;\n          }>,\n          previousOutputs: number[],\n          deltas: number[],\n          weights: number[][],\n          previousChanges: number[][]\n        ) {\n          const change = calcChanges(\n            this.constants.learningRate,\n            this.constants.momentum,\n            previousChanges[this.thread.y][this.thread.x],\n            deltas[this.thread.y],\n            previousOutputs[this.thread.x]\n          );\n          return addWeights(change, weights[this.thread.y][this.thread.x]);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.sizes[layer - 1],\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n          immutable: true,\n        }\n      );\n    }\n  }\n\n  getChanges(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const weights = this.weights[layer];\n      const changes = this.changes[layer];\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        weights,\n        changes\n      );\n      release(weights);\n      release(changes);\n      this.weights[layer] = output.weights;\n      this.changes[layer] = output.changes;\n      release(output.result);\n    }\n  }\n\n  buildChangeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n        immutable: true,\n      });\n    }\n  }\n\n  changeBiases(): void {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const biases = this.biases[layer];\n      this.biases[layer] = this.biasesPropagate[layer](\n        biases,\n        this.deltas[layer]\n      );\n      release(biases);\n    }\n  }\n\n  buildGetMSE(): void {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n      pipeline: true,\n      immutable: true,\n    });\n    this._addMSE = this.gpu.createKernel(\n      function (value1: number[], value2: number[]): number {\n        return value1[0] + value2[0];\n      },\n      {\n        output: [1],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    this._divideMSESum = this.gpu.createKernel(\n      function (length: number, mseSum: number[]): number {\n        const value = mseSum[0];\n        if (value > 0) {\n          return value / length;\n        }\n        return 0;\n      },\n      {\n        output: [1],\n      }\n    );\n  }\n\n  run(input: InputType): OutputType {\n    if (!this.isRunnable) {\n      throw new Error('network not runnable');\n    }\n    let formattedInput: Float32Array;\n    if (this.inputLookup) {\n      formattedInput = lookup.toArray(\n        this.inputLookup,\n        (input as unknown) as INumberHash,\n        this.inputLookupLength\n      );\n    } else {\n      formattedInput = (input as unknown) as Float32Array;\n    }\n    const outputTextures = this.runInput(formattedInput);\n    const output =\n      outputTextures instanceof Texture\n        ? outputTextures.toArray()\n        : outputTextures;\n\n    if (this.outputLookup) {\n      return (lookup.toObject(\n        this.outputLookup,\n        output as Float32Array\n      ) as unknown) as OutputType;\n    }\n\n    return (output as unknown) as OutputType;\n  }\n\n  // @ts-ignore\n  prepTraining(\n    data: Array<INeuralNetworkDatum<InputType, OutputType>>,\n    options: Partial<INeuralNetworkTrainOptions> = {}\n  ): INeuralNetworkGPUPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized(preparedData);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function (value: number[]): number {\n        return value[this.thread.x];\n      },\n      {\n        output: [preparedData[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n    return {\n      preparedData: preparedData.map((set) => ({\n        input: this.texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(): (input: InputType) => OutputType {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  toJSON(): INeuralNetworkJSON {\n    if (this.sizes === null) {\n      this.initialize();\n    }\n    // use Array.from, keeping json small\n    const jsonLayerWeights = this.weights.map((layerWeights) => {\n      return (layerWeights instanceof Texture\n        ? (layerWeights.toArray() as Float32Array[])\n        : (layerWeights as Float32Array[])\n      ).map((layerWeights) => Array.from(layerWeights));\n    });\n    const jsonLayerBiases = this.biases.map((layerBiases) =>\n      Array.from(\n        layerBiases instanceof Texture\n          ? (layerBiases.toArray() as Float32Array)\n          : (layerBiases as Float32Array)\n      )\n    );\n    const jsonLayers: IJSONLayer[] = [];\n    for (let i = 0; i <= this.outputLayer; i++) {\n      jsonLayers.push({\n        weights: jsonLayerWeights[i] ?? [],\n        biases: jsonLayerBiases[i] ?? [],\n      });\n    }\n    return {\n      type: 'NeuralNetworkGPU',\n      sizes: [...this.sizes],\n      layers: jsonLayers,\n      inputLookup: this.inputLookup ? { ...this.inputLookup } : null,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup ? { ...this.outputLookup } : null,\n      outputLookupLength: this.outputLookupLength,\n      options: { ...this.options },\n      trainOpts: this.getTrainOptsJSON(),\n    };\n  }\n}\n","import { KernelOutput } from 'gpu.js';\n\nimport { Internal } from './internal';\nimport { release } from '../utilities/kernel';\nimport { ILayer, ILayerSettings } from './base-layer';\n\nexport class RecurrentConnection extends Internal {\n  settings: ILayerSettings = {};\n  layer: ILayer | null = null;\n  setLayer(layer: ILayer): void {\n    this.layer = layer;\n  }\n\n  get width(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.width;\n  }\n\n  set width(value: number) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height(): number {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.height;\n  }\n\n  set height(value: number) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.deltas);\n    this.layer.deltas = deltas;\n  }\n\n  get weights(): KernelOutput {\n    if (!this.layer) throw new Error('layer not set');\n    return this.layer.weights as KernelOutput;\n  }\n\n  set weights(weights: KernelOutput) {\n    if (!this.layer) throw new Error('layer not set');\n    release(this.layer.weights);\n    this.layer.weights = weights;\n  }\n\n  predict(): void {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare(): void {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(): void {\n    throw new Error('no longer using');\n  }\n\n  setupKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels(): void {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n","import { RecurrentConnection } from './layer/recurrent-connection';\nimport {\n  IRecurrentInput,\n  RecurrentInput,\n  RecurrentZeros,\n  ILayer,\n  ILayerSettings,\n} from './layer';\nimport {\n  Activation,\n  EntryPoint,\n  EntryPointType,\n  Filter,\n  Internal,\n  InternalModel,\n  Model,\n  Modifier,\n  Operator,\n  Target,\n} from './layer/types';\nimport { flattenLayers } from './utilities/flatten-layers';\nimport {\n  FeedForward,\n  IFeedForwardOptions,\n  IFeedForwardTrainingOptions,\n  ITrainingStatus,\n} from './feed-forward';\nimport { release, clone } from './utilities/kernel';\nimport { KernelOutput, Texture, TextureArrayOutput } from 'gpu.js';\nimport { OperatorType } from './layer/operator';\nimport { ModifierType } from './layer/modifier';\nimport { FilterType } from './layer/filter';\nimport { ActivationType } from './layer/activation';\nimport { TargetType } from './layer/target';\n\nexport interface IRecurrentTrainingOptions\n  extends IFeedForwardTrainingOptions {}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-expect-error\nexport interface IRecurrentOptions extends IFeedForwardOptions {\n  hiddenLayers: Array<\n    (\n      inputLayer: ILayer,\n      recurrentInput: IRecurrentInput,\n      index: number\n    ) => ILayer\n  >;\n}\n\nexport interface IRecurrentPreppedTrainingData {\n  status: ITrainingStatus;\n  preparedData: KernelOutput[][];\n  endTime: number;\n}\n\nexport class Recurrent extends FeedForward {\n  trainOpts: IRecurrentTrainingOptions = {};\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRecurrentOptions;\n  _outputConnection: RecurrentConnection | null = null;\n  _layerSets: ILayer[][] = [];\n  _hiddenLayerOutputIndices: number[] = [];\n  _model: ILayer[] | null = null;\n\n  // TODO: use generics in extend\n  constructor(\n    options: Partial<IRecurrentOptions & IRecurrentTrainingOptions> = {}\n  ) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    super(options);\n  }\n\n  _connectLayers(): {\n    inputLayer: ILayer;\n    hiddenLayers: ILayer[];\n    outputLayer: ILayer;\n  } {\n    if (!this.options.inputLayer) {\n      throw new Error('inputLayer not found');\n    }\n    if (!this.options.outputLayer) {\n      throw new Error('outputLayer not found');\n    }\n    const inputLayer = this.options.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    const outputLayer = this.options.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      -1\n    );\n    return {\n      inputLayer,\n      hiddenLayers,\n      outputLayer,\n    };\n  }\n\n  _connectLayersDeep(): ILayer[] {\n    const layers: ILayer[] = [];\n    const previousLayers = this._layerSets[this._layerSets.length - 1];\n    let usedHiddenLayerOutputIndex = 0;\n\n    function findInputLayer(inputLayer: ILayer) {\n      const index = previousLayers.indexOf(inputLayer);\n      if (index < 0) throw new Error('unable to find layer');\n      return layers[index];\n    }\n\n    function layerSettings(layer: ILayer): ILayerSettings {\n      return {\n        ...layer.settings,\n        weights: null,\n        deltas: null,\n        praxis: null,\n      };\n    }\n\n    for (let i = 0; i < previousLayers.length; i++) {\n      const previousLayer = previousLayers[i];\n      let layer: ILayer;\n\n      if (previousLayer instanceof Activation) {\n        layer = new (previousLayer.constructor as ActivationType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof EntryPoint) {\n        layer = new (previousLayer.constructor as EntryPointType)(\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Filter) {\n        layer = new (previousLayer.constructor as FilterType)(\n          layerSettings(previousLayer.inputLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Internal) {\n        const previousHiddenLayerOutput =\n          previousLayers[\n            this._hiddenLayerOutputIndices[usedHiddenLayerOutputIndex++]\n          ];\n        if (previousLayer instanceof RecurrentConnection) {\n          throw new Error('unfinished');\n        } else if (previousLayer instanceof RecurrentInput) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else if (previousLayer instanceof RecurrentZeros) {\n          layer = new RecurrentInput(previousHiddenLayerOutput);\n        } else {\n          throw new Error(\n            `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n          );\n        }\n      } else if (\n        previousLayer instanceof InternalModel ||\n        previousLayer instanceof Model\n      ) {\n        layer = previousLayer;\n      } else if (previousLayer instanceof Modifier) {\n        layer = new (previousLayer.constructor as ModifierType)(\n          findInputLayer(previousLayer.inputLayer),\n          layerSettings(previousLayer.inputLayer)\n        );\n      } else if (previousLayer instanceof Operator) {\n        layer = new (previousLayer.constructor as OperatorType)(\n          findInputLayer(previousLayer.inputLayer1),\n          findInputLayer(previousLayer.inputLayer2),\n          layerSettings(previousLayer)\n        );\n      } else if (previousLayer instanceof Target) {\n        layer = new (previousLayer.constructor as TargetType)(\n          layerSettings(previousLayer),\n          findInputLayer(previousLayer.inputLayer)\n        );\n      } else {\n        throw new Error(\n          `hidden layer ${previousLayer.constructor.name} extends unknown hidden layer`\n        );\n      }\n      layers.push(layer);\n    }\n\n    return layers;\n  }\n\n  _connectHiddenLayers(previousLayer: ILayer): ILayer[] {\n    const hiddenLayers = [];\n\n    if (!this.options.hiddenLayers) throw new Error('hiddenLayers not defined');\n\n    for (let i = 0; i < this.options.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.options.hiddenLayers[i](\n        previousLayer,\n        recurrentInput,\n        i\n      );\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n\n    return hiddenLayers;\n  }\n\n  initialize(): void {\n    this._outputConnection = new RecurrentConnection();\n    let layerSet: ILayer[];\n    if (this.options.layers) {\n      layerSet = this._connectOptionsLayers();\n    } else {\n      const { inputLayer, hiddenLayers, outputLayer } = this._connectLayers();\n      layerSet = flattenLayers([inputLayer, ...hiddenLayers, outputLayer]);\n      this._hiddenLayerOutputIndices = hiddenLayers.map((l) =>\n        layerSet.indexOf(l)\n      );\n      this._inputLayer = inputLayer;\n      this._hiddenLayers = hiddenLayers;\n      this._outputLayer = outputLayer;\n    }\n    this.layers = layerSet;\n    this._layerSets = [layerSet];\n    this._model = layerSet.filter(\n      (l) => l instanceof Model || l instanceof InternalModel\n    );\n    this.initializeLayers(layerSet);\n  }\n\n  initializeDeep(): void {\n    const layers = this._connectLayersDeep();\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels(true);\n      // TODO: enable this?\n      // layer.reuseKernels(this._layerSets[0][i]);\n    }\n    this._layerSets.push(layers);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run(inputs: KernelOutput[]): TextureArrayOutput {\n    while (this._layerSets.length <= inputs.length) {\n      this.initializeDeep();\n    }\n    const result = this.runInputs(inputs);\n    if (result instanceof Texture) return result.toArray();\n    return result as TextureArrayOutput;\n  }\n\n  runInput(input: KernelOutput): KernelOutput {\n    throw new Error('use .runInputs()');\n  }\n\n  runInputs(inputs: KernelOutput[]): KernelOutput {\n    while (this._layerSets.length < inputs.length) {\n      this.initializeDeep();\n    }\n    const max = inputs.length - 1; // last output will be compared with last index\n    for (let x = 0; x <= max; x++) {\n      const layerSet = this._layerSets[x];\n      layerSet[0].predict(inputs[x]);\n      for (let i = 1; i < layerSet.length; i++) {\n        layerSet[i].predict();\n      }\n    }\n    const lastLayerUsed = this._layerSets[max];\n    const result = lastLayerUsed[lastLayerUsed.length - 1].weights;\n    this.end();\n    return result as KernelOutput;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: KernelOutput[][],\n    options: Partial<IRecurrentTrainingOptions> = {}\n  ): ITrainingStatus {\n    const { preparedData, status, endTime } = this._prepTraining(data, options);\n    let continueTicking = true;\n    const calculateError = (): number =>\n      this._calculateTrainingError(preparedData);\n    const trainPatters = (): void => this._trainPatterns(preparedData);\n    while (continueTicking) {\n      continueTicking = this._trainingTick(\n        status,\n        endTime,\n        calculateError,\n        trainPatters\n      );\n    }\n    return status;\n  }\n\n  end(): void {\n    const x = this._layerSets.length - 1;\n    const lastLayerSet = this._layerSets[x];\n    lastLayerSet[0].predict([new Float32Array([0])]);\n    for (let i = 1; i < lastLayerSet.length; i++) {\n      lastLayerSet[i].predict();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  transferData(formattedData: KernelOutput[][]): KernelOutput[][] {\n    return formattedData;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _prepTraining(\n    data: KernelOutput[][],\n    options: Partial<IRecurrentTrainingOptions>\n  ): IRecurrentPreppedTrainingData {\n    this._updateTrainingOptions(options);\n    const endTime = this.trainOpts.timeout\n      ? Date.now() + this.trainOpts.timeout\n      : 0;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData: this.transferData(data),\n      status,\n      endTime,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateTrainingError(data: KernelOutput[][]): number {\n    if (!this.meanSquaredError) {\n      throw new Error('this.meanSquaredError not setup');\n    }\n    let sum: KernelOutput = new Float32Array(1);\n    for (let i = 0; i < data.length; ++i) {\n      const prevSum = sum;\n      const error = this._trainPattern(data[i], true) as KernelOutput;\n      sum = this.meanSquaredError.add(sum, error);\n      release(error);\n      release(prevSum);\n    }\n    const result = this.meanSquaredError.divide(data.length, sum);\n    release(sum);\n    if (result instanceof Texture) {\n      const resultArray = result.toArray() as number[];\n      return resultArray[0];\n    }\n    return (result as number[])[0];\n  }\n\n  // TODO: more types\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  formatData(data: Float32Array): Float32Array {\n    return data;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _calculateDeltas(target: KernelOutput[]): void {\n    const lastLayerSet = this._layerSets[this._layerSets.length - 1];\n    // Iterate from the second to last layer backwards, propagating 0's\n    for (let i = lastLayerSet.length - 2; i >= 0; i--) {\n      lastLayerSet[i].compare();\n    }\n\n    for (let x = target.length - 2; x >= 0; x--) {\n      const layerSet = this._layerSets[x];\n      layerSet[layerSet.length - 1].compare(target[x + 1]);\n      for (let i = layerSet.length - 2; i >= 0; i--) {\n        layerSet[i].compare();\n      }\n    }\n  }\n\n  adjustWeights(): void {\n    const _model = this._model as ILayer[];\n    for (let i = 0; i < _model.length; i++) {\n      _model[i].learn(this.options.learningRate ?? 0);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPatterns(data: KernelOutput[][]): void {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i], false);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  _trainPattern(\n    inputs: KernelOutput[],\n    logErrorRate: boolean\n  ): KernelOutput | null {\n    // forward propagate\n    this.runInputs(inputs);\n\n    // back propagate\n    this._calculateDeltas(inputs);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      if (!this.meanSquaredError) {\n        throw new Error('this.meanSquaredError not setup');\n      }\n      let error: KernelOutput = new Float32Array(1);\n      for (let i = 0, max = inputs.length - 1; i <= max; i++) {\n        const layerSet = this._layerSets[i];\n        const lastLayer = layerSet[layerSet.length - 1];\n        const prevError: KernelOutput = error;\n        error = this.meanSquaredError.addAbsolute(\n          prevError,\n          lastLayer.errors as KernelOutput\n        );\n        release(prevError);\n      }\n      return clone(this.meanSquaredError.divide(inputs.length, error));\n    }\n    return null;\n  }\n}\n","import { zeros } from '../../utilities/zeros';\n\nexport interface IMatrixJSON {\n  rows: number;\n  columns: number;\n  weights: number[];\n}\n/**\n * A matrix\n */\nexport class Matrix {\n  rows = 0;\n  columns = 0;\n  weights: Float32Array;\n  deltas: Float32Array;\n\n  constructor(rows?: number, columns?: number) {\n    if (rows) this.rows = rows;\n    if (columns) this.columns = columns;\n\n    this.weights = zeros(this.rows * this.columns);\n    this.deltas = zeros(this.rows * this.columns);\n  }\n\n  getWeight(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.weights[ix];\n  }\n\n  setWeight(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.weights[ix] = v;\n\n    return this;\n  }\n\n  getDelta(row: number, col: number): number {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.deltas.length) {\n      throw new Error('get accessor is skewed');\n    }\n\n    return this.deltas[ix];\n  }\n\n  setDelta(row: number, col: number, v: number): Matrix {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n\n    if (ix < 0 || ix >= this.weights.length) {\n      throw new Error('set accessor is skewed');\n    }\n\n    this.deltas[ix] = v;\n\n    return this;\n  }\n\n  toJSON(): IMatrixJSON {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: Array.from(this.weights.slice(0)),\n    };\n  }\n\n  static fromJSON(json: IMatrixJSON): Matrix {\n    const matrix = new Matrix(json.rows, json.columns);\n\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n\n    return matrix;\n  }\n\n  static fromArray(weights: Float32Array[] | number[][]): Matrix {\n    const matrix = new Matrix(weights.length, weights[0].length);\n    matrix.fromArray(weights);\n    return matrix;\n  }\n\n  deltasToArray(): number[][] {\n    return this.toArray('deltas');\n  }\n\n  weightsToArray(): number[][] {\n    return this.toArray('weights');\n  }\n\n  toArray(prop: 'weights' | 'deltas' = 'weights'): number[][] {\n    const result: number[][] = new Array(this.rows);\n    this.iterate({\n      row: (rowIndex): void => {\n        result[rowIndex] = new Array(this.columns);\n      },\n      column: (rowIndex, columnIndex): void => {\n        if (prop === 'weights') {\n          result[rowIndex][columnIndex] = this.getWeight(rowIndex, columnIndex);\n        } else if (prop === 'deltas') {\n          result[rowIndex][columnIndex] = this.getDelta(rowIndex, columnIndex);\n        }\n      },\n    });\n    return result;\n  }\n\n  fromArray(\n    array: number[][] | Float32Array[],\n    prop: 'weights' | 'deltas' = 'weights'\n  ): this {\n    if (array.length !== this.rows) {\n      throw new Error('rows do not match');\n    }\n    if (array[0].length !== this.columns) {\n      throw new Error('columns do not match');\n    }\n    this.iterate({\n      column: (rowIndex, columnIndex): void => {\n        const value = array[rowIndex][columnIndex];\n        if (typeof value !== 'number') {\n          throw new Error('value not number');\n        }\n        if (prop === 'weights') {\n          this.setWeight(rowIndex, columnIndex, value);\n        } else if (prop === 'deltas') {\n          this.setDelta(rowIndex, columnIndex, value);\n        }\n      },\n    });\n    return this;\n  }\n\n  iterate(callbacks: {\n    column?: (rowIndex: number, columnIndex: number) => void;\n    row?: (rowIndex: number) => void;\n  }): this {\n    const rows = this.rows;\n    const columns = this.columns;\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      if (callbacks.row) {\n        callbacks.row(rowIndex);\n      }\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        if (callbacks.column) {\n          callbacks.column(rowIndex, columnIndex);\n        }\n      }\n    }\n    return this;\n  }\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\n/** return Matrix but filled with random numbers from gaussian\n */\nexport class RandomMatrix extends Matrix {\n  std: number;\n\n  constructor(rows: number, columns: number, std: number) {\n    super(rows, columns);\n\n    this.std = std;\n\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n","import { Value, IRNNDatum } from '../recurrent/rnn-data-types';\n\nexport interface IDataFormatter {\n  indexTable: { [value: string]: number };\n  toIndexesInputOutput: (input: Value, output?: Value) => number[];\n  toIndexes: (input: string) => number[];\n  toCharacters: (output: number[]) => string[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n  toFunctionString: () => string;\n  formatDataIn: (input?: Value, output?: Value) => number[];\n  formatDataOut: (input: number[], output: number[]) => string;\n  format: (data: Array<IRNNDatum | Value>) => number[][];\n  isSetup: boolean;\n  toJSON: () => IDataFormatterJSON;\n}\n\nexport class DataFormatter implements IDataFormatter {\n  indexTable: { [key: string]: number; [key: number]: number } = {};\n  characterTable: { [key: number]: string | number | null } = {};\n  characters: Array<string | number> = [];\n  specialIndexes: number[] = [];\n  isSetup = false;\n\n  constructor(private values?: Array<IRNNDatum | Value>, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.setup(values, maxThreshold);\n  }\n\n  setup(values: Array<IRNNDatum | Value>, maxThreshold = 0): void {\n    if (this.isSetup) throw new Error('DataFormatter is already setup');\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n    if ((values[0] as IRNNDatum).input) {\n      this.addInputOutput();\n    }\n    this.addUnrecognized();\n    this.isSetup = true;\n  }\n\n  buildCharactersFromIterable(values: Array<IRNNDatum | Value>): void {\n    const tempCharactersTable: { [character: string]: boolean } = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      // if (typeof characters === 'string') {\n      //   const character = characters;\n      //   if (tempCharactersTable.hasOwnProperty(character)) continue;\n      //   tempCharactersTable[character] = true;\n      //   this.characters.push(character);\n      if (characters.hasOwnProperty('length')) {\n        const iteratable = characters as string[] | string;\n        for (\n          let characterIndex = 0, charactersLength = iteratable.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = iteratable[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (typeof characters === 'number') {\n        if (tempCharactersTable.hasOwnProperty(characters)) continue;\n        tempCharactersTable[characters] = true;\n        this.characters.push(characters);\n      } else if (typeof characters === 'boolean') {\n        const character = characters.toString();\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[character] = true;\n        this.characters.push(character);\n      } else if (\n        Array.isArray(characters) &&\n        typeof characters[0] === 'string'\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i] as string;\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        Array.isArray(characters) &&\n        (typeof characters[0] === 'number' ||\n          typeof characters[0] === 'boolean')\n      ) {\n        for (let i = 0; i < characters.length; i++) {\n          const character = characters[i].toString();\n          if (tempCharactersTable.hasOwnProperty(dataFormatterIndex)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else if (\n        characters.hasOwnProperty('input') &&\n        characters.hasOwnProperty('output')\n      ) {\n        const { input, output } = (characters as unknown) as IRNNDatum;\n        if (Array.isArray(input)) {\n          this.addCharacters(input, tempCharactersTable);\n        } else {\n          this.addCharacters(input.toString(), tempCharactersTable);\n        }\n\n        if (Array.isArray(output)) {\n          this.addCharacters(output, tempCharactersTable);\n        } else {\n          this.addCharacters(output.toString(), tempCharactersTable);\n        }\n      } else {\n        throw new Error('Unhandled value');\n      }\n    }\n  }\n\n  addCharacters(\n    characters: string | string[] | boolean[] | number[],\n    charactersTable: { [character: string]: boolean }\n  ): void {\n    for (let i = 0; i < characters.length; i++) {\n      const character = characters[i].toString();\n      if (charactersTable.hasOwnProperty(character)) continue;\n      charactersTable[character] = true;\n      this.characters.push(character);\n    }\n  }\n\n  buildTables(maxThreshold: number): void {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value: Value, maxThreshold = 0): number[] {\n    const result = [];\n    const { indexTable } = this;\n\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        value = value.toString();\n    }\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i].toString();\n      let index = indexTable[character];\n      if (index === undefined) {\n        if (indexTable.unrecognized) {\n          index = indexTable.unrecognized;\n        } else {\n          throw new Error(`unrecognized character \"${character}\"`);\n        }\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n    return result;\n  }\n\n  toIndexesInputOutput(\n    input: Value,\n    output?: Value,\n    maxThreshold = 0\n  ): number[] {\n    const result: number[] = this.toIndexesValue(input, maxThreshold, true);\n\n    if (typeof output === 'undefined') return result;\n    return result.concat(this.toIndexesValue(output, maxThreshold, false));\n  }\n\n  toIndexesValue(\n    value: Value,\n    maxThreshold: number,\n    isInput: boolean\n  ): number[] {\n    if (typeof value === 'string') {\n      value = value.split('');\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      value = value.toString().split('');\n    } else if (\n      Array.isArray(value) &&\n      (typeof (value as number[])[0] === 'number' ||\n        typeof (value as boolean[])[0] === 'boolean' ||\n        typeof (value as string[])[0] === 'string')\n    ) {\n      value = (value as string[]).map((v) => v.toString());\n    } else {\n      throw new Error('unrecognized value');\n    }\n    if (isInput) {\n      value = value.concat(['stop-input', 'start-output']);\n    }\n    return this.toIndexes(value, maxThreshold);\n  }\n\n  toCharacters(indices: number[], maxThreshold = 0): string[] {\n    const result: string[] = [];\n    const { indexTable, characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i];\n      if (index < maxThreshold) continue;\n      let character = characterTable[index];\n      if (character === undefined) {\n        if (indexTable.unrecognized) {\n          character = characterTable[indexTable.unrecognized];\n        } else {\n          throw new Error(`unrecognized index \"${index}\"`);\n        }\n      } else if (character !== null) {\n        result.push(character.toString());\n      }\n    }\n\n    return result;\n  }\n\n  toString(indices: number[], maxThreshold: number): string {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput(): void {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  addUnrecognized(): void {\n    this.addSpecial('unrecognized');\n  }\n\n  static fromAllPrintable(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(\n    maxThreshold: number,\n    values = ['\\n']\n  ): DataFormatter {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(\n    string: string,\n    maxThreshold: number\n  ): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    const dataFormatter = new DataFormatter(values.split(''), maxThreshold);\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(\n    data: IRNNDatum[],\n    maxThreshold?: number\n  ): DataFormatter {\n    const values: Array<string | string[]> = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      values.push(validateAndCast(datum.input), validateAndCast(datum.output));\n    }\n    const flatArray: string[] = Array.isArray(values)\n      ? (values as string[][]).flat()\n      : values;\n    const dataFormatter = new DataFormatter(\n      Array.from(new Set(flatArray)),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    dataFormatter.addUnrecognized();\n    dataFormatter.isSetup = true;\n    return dataFormatter;\n  }\n\n  static fromString(string: string, maxThreshold = 0): DataFormatter {\n    const values = Array.from(new Set(string)).join('');\n    return new DataFormatter(values.split(''), maxThreshold);\n  }\n\n  toJSON(): IDataFormatterJSON {\n    return {\n      indexTable: this.indexTable,\n      characterTable: this.characterTable,\n      values: this.values as Value[],\n      characters: this.characters,\n      specialIndexes: this.specialIndexes,\n    };\n  }\n\n  /** TODO: Type better, The type of json is not \"string that is a valid JSON\", it is a POJO in the shape of DataFormatter.\n   * this method re-hydrates the the data as an instance of DataFormatter.\n   */\n  static fromJSON(json: IDataFormatterJSON): DataFormatter {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    dataFormatter.specialIndexes = json.specialIndexes;\n    return dataFormatter;\n  }\n\n  addSpecial(special: string | number, character = null): void {\n    const specialIndex = (this.indexTable[special] = this.characters.length);\n    this.characterTable[specialIndex] = character;\n    this.specialIndexes.push(this.characters.length);\n    this.characters.push(special);\n  }\n\n  toFunctionString(): string {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\nvar dataFormatter = {\n  toIndexes: function ${this.toIndexes.toString()},\n  toIndexesInputOutput: function ${this.toIndexesInputOutput.toString()},\n  toCharacters: function ${this.toCharacters.toString()},\n  toIndexesValue: function ${this.toIndexesValue.toString()},\n};`;\n  }\n\n  formatDataIn(input?: Value, output?: Value): number[] {\n    if (input === undefined) return [];\n    if (Array.isArray(input) && typeof input[0] === 'number') {\n      return input as number[];\n    }\n    if (this.indexTable?.hasOwnProperty('stop-input')) {\n      return this.toIndexesInputOutput(input, output);\n    }\n    return this.toIndexes(input);\n  }\n\n  formatDataOut(input: number[], output: number[]): string {\n    return this.toCharacters(output).join('');\n  }\n\n  format(data: Array<IRNNDatum | Value>): number[][] {\n    if (\n      typeof data[0] === 'number' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data as number[][];\n    }\n    const result: number[][] = [];\n    if (\n      typeof data[0] === 'string' ||\n      typeof data[0] === 'number' ||\n      Array.isArray(data[0])\n    ) {\n      if (!this.isSetup) {\n        this.setup(data);\n        for (let i = 0; i < data.length; i++) {\n          result.push(this.formatDataIn(validateAndCast(data[i] as Value)));\n        }\n      } else {\n        for (let i = 0, max = data.length; i < max; i++) {\n          result.push(this.formatDataIn(data[i] as Value));\n        }\n      }\n    } else if ((data[0] as IRNNDatum).input && (data[0] as IRNNDatum).output) {\n      if (!this.isSetup) {\n        this.setup(data);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(\n          this.formatDataIn(\n            validateAndCast((data[i] as IRNNDatum).input),\n            validateAndCast((data[i] as IRNNDatum).output)\n          )\n        );\n      }\n    } else {\n      throw new Error('unrecognized data');\n    }\n    return result;\n  }\n}\n\nfunction validateAndCast(value: Value): string | string[] {\n  if (typeof value === 'string') return value;\n  if (typeof value === 'number') return value.toString();\n  if (typeof value === 'boolean') return value.toString();\n  if (Array.isArray(value) && typeof value[0] === 'string')\n    return value as string[];\n  if (typeof value[0] === 'boolean') {\n    return (value as boolean[]).map((v: boolean) => v.toString());\n  }\n  if (typeof value[0] === 'number') {\n    return (value as number[]).map((v: number) => v.toString());\n  }\n  throw new Error(\n    'unrecognized value, expected string[], string, number[], number, boolean[], or boolean'\n  );\n}\n\nexport interface IDataFormatterJSON {\n  indexTable: { [key: string]: number; [key: number]: number };\n  characterTable: { [key: number]: string | number | null };\n  values: Value[];\n  characters: Array<string | number>;\n  specialIndexes: number[];\n}\n","import { Matrix } from '.';\n\n/**\n * add {left} and {right} matrix weights into {into}\n */\nexport function add(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {left} and {right} deltas\n */\nexport function addB(product: Matrix, left: Matrix, right: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * makes matrix weights and deltas all ones\n */\nexport function allOnes(product: Matrix): void {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function cloneNegative(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiply {left} and {right} matrix weights to {into}\n */\nexport function multiply(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {from} deltas to {left} and {right}\n */\nexport function multiplyB(product: Matrix, left: Matrix, right: Matrix): void {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","import { Matrix } from '.';\n\nexport function multiplyElement(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  const { weights } = left;\n\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n */\nexport function multiplyElementB(\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\n/**\n *\n * relu {m} weights to {into} weights\n */\nexport function relu(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n */\nexport function reluB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function rowPluck(\n  product: Matrix,\n  left: Matrix,\n  rowPluckIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n","import { Matrix } from '.';\n\n/**\n * adds {from} deltas into {m} deltas\n */\nexport function rowPluckB(\n  product: Matrix,\n  left: Matrix,\n  rowIndex: number\n): void {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","import { Matrix } from '.';\n\nexport function sigmoid(product: Matrix, left: Matrix): void {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\n// function sig(x) {\n//   // helper function for computing sigmoid\n//   return 1 / (1 + Math.exp(-x));\n// }\n","import { Matrix } from '.';\n\nexport function sigmoidB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\n\nexport function softmax(matrix: Matrix): Matrix {\n  // probability volume\n  const result = new Matrix(matrix.rows, matrix.columns);\n  let maxVal = -999999;\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    if (matrix.weights[i] > maxVal) {\n      maxVal = matrix.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] = Math.exp(matrix.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < matrix.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n","import { Matrix } from '.';\n\nexport function tanh(product: Matrix, left: Matrix): void {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","import { Matrix } from '.';\n\nexport function tanhB(product: Matrix, left: Matrix): void {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","import { Matrix } from '.';\nimport { add } from './add';\nimport { addB } from './add-b';\nimport { allOnes } from './all-ones';\nimport { cloneNegative } from './clone-negative';\nimport { multiply } from './multiply';\nimport { multiplyB } from './multiply-b';\nimport { multiplyElement } from './multiply-element';\nimport { multiplyElementB } from './multiply-element-b';\nimport { relu } from './relu';\nimport { reluB } from './relu-b';\nimport { rowPluck } from './row-pluck';\nimport { rowPluckB } from './row-pluck-b';\nimport { sigmoid } from './sigmoid';\nimport { sigmoidB } from './sigmoid-b';\nimport { softmax } from './softmax';\nimport { tanh } from './tanh';\nimport { tanhB } from './tanh-b';\n\ntype PropagateIndex = (product: Matrix, left: Matrix, index: number) => void;\ntype PropagateProduct = (product: Matrix) => void;\ntype PropagateProductFromLeft = (product: Matrix, left: Matrix) => void;\ntype PropagateProductFromLeftRight = (\n  product: Matrix,\n  left: Matrix,\n  right: Matrix\n) => void;\ntype PropagateFunction =\n  | PropagateIndex\n  | PropagateProduct\n  | PropagateProductFromLeft\n  | PropagateProductFromLeftRight;\n\nexport interface IState {\n  name: string;\n  product: Matrix;\n  left?: Matrix;\n  right?: Matrix;\n  forwardFn: PropagateFunction;\n  backpropagationFn: PropagateFunction;\n}\n\nexport class Equation {\n  states: IState[] = [];\n  inputValue?: Float32Array;\n  inputRow = 0;\n\n  add(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'add',\n      product,\n      left,\n      right,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n\n    return product;\n  }\n\n  allOnes(rows: number, columns: number): Matrix {\n    const product = new Matrix(rows, columns);\n\n    this.states.push({\n      name: 'allOnes',\n      product,\n      left: product,\n      forwardFn: allOnes,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  cloneNegative(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'cloneNegative',\n      product,\n      left: matrix,\n      forwardFn: cloneNegative,\n      backpropagationFn: () => {},\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   */\n  subtract(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   */\n  multiply(left: Matrix, right: Matrix): Matrix {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, right.columns);\n\n    this.states.push({\n      name: 'multiply',\n      product,\n      left,\n      right,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   */\n  multiplyElement(left: Matrix, right: Matrix): Matrix {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n\n    const product = new Matrix(left.rows, left.columns);\n\n    this.states.push({\n      name: 'multiplyElement',\n      product,\n      left,\n      right,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   */\n  relu(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'relu',\n      product,\n      left: matrix,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n\n    return product;\n  }\n\n  /**\n   * input a matrix\n   */\n  input(input: Matrix): Matrix {\n    this.states.push({\n      name: 'input',\n      product: input,\n      forwardFn: (product: Matrix) => {\n        if (!this.inputValue) return;\n        if (this.inputValue.length !== product.weights.length) {\n          throw new Error('this.inputValue is of wrong dimensions');\n        }\n        product.weights = input.weights = this.inputValue;\n      },\n      backpropagationFn: () => {},\n    });\n\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   */\n  inputMatrixToRow(matrix: Matrix): Matrix {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const product = new Matrix(matrix.columns, 1);\n\n    this.states.push({\n      name: 'inputMatrixToRow',\n      product,\n      left: matrix,\n      get right() {\n        return (self.inputRow as unknown) as Matrix;\n      },\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   */\n  sigmoid(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'sigmoid',\n      product,\n      left: matrix,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   */\n  tanh(matrix: Matrix): Matrix {\n    const product = new Matrix(matrix.rows, matrix.columns);\n\n    this.states.push({\n      name: 'tanh',\n      product,\n      left: matrix,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n\n    return product;\n  }\n\n  /**\n   *\n   * Observe a matrix for debugging\n   */\n  observe(matrix: Matrix): Matrix {\n    this.states.push({\n      name: 'observe',\n      product: new Matrix(),\n      forwardFn: () => {},\n      backpropagationFn: () => {},\n    });\n\n    return matrix;\n  }\n\n  /**\n   * Run index through equations via forward propagation\n   */\n  runIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via forward propagation\n   */\n  runInput(inputValue: Float32Array): Matrix {\n    this.inputValue = inputValue;\n    let state = this.states[0];\n\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('forwardFn')) continue;\n      (state.forwardFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run value through equations via back propagation\n   */\n  backpropagate(): Matrix {\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Run index through equations via back propagation\n   */\n  backpropagateIndex(rowIndex = 0): Matrix {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state = this.states[0];\n\n    while (i-- > 0) {\n      state = this.states[i];\n\n      if (!state.hasOwnProperty('backpropagationFn')) continue;\n      (state.backpropagationFn as PropagateProductFromLeftRight)(\n        state.product,\n        state.left as Matrix,\n        state.right as Matrix\n      );\n    }\n\n    return state.product;\n  }\n\n  /**\n   * Predict a target value from equation\n   */\n  predictTarget(input: Float32Array, target: Float32Array): number {\n    let errorSum = 0;\n    const output = this.runInput(input);\n\n    for (let i = 0; i < output.weights.length; i++) {\n      const error = output.weights[i] - target[i];\n      // set gradients into log probabilities\n      errorSum += Math.abs(error);\n      // write gradients into log probabilities\n      output.deltas[i] = error;\n    }\n\n    return errorSum;\n  }\n\n  /**\n   * Predict a target index from equation\n   */\n  predictTargetIndex(input: number, target: number): number {\n    const output = this.runIndex(input);\n    // set gradients into log probabilities\n    const logProbabilities = output; // interpret output as log probabilities\n    const probabilities = softmax(output); // compute the softmax probabilities\n\n    // write gradients into log probabilities\n    logProbabilities.deltas = probabilities.weights.slice(0);\n    logProbabilities.deltas[target] -= 1;\n\n    // accumulate base 2 log prob and do smoothing\n    return -Math.log2(probabilities.weights[target]);\n  }\n}\n","import { Matrix } from '.';\n\nexport function maxI(matrix: Matrix): number {\n  // argmax of array w\n  const { weights } = matrix;\n  let maxv = weights[0];\n  let maxix = 0;\n\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n\n  return maxix;\n}\n","import { Matrix } from '.';\nimport { randomFloat } from '../../utilities/random';\n\nexport function sampleI(matrix: Matrix): number {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomFloat(0, 1);\n  const w = matrix.weights;\n  let x = 0;\n  let i = 0;\n\n  while (true) {\n    x += w[i];\n\n    if (x > r) {\n      return i;\n    }\n\n    i++;\n  }\n}\n","import { Log } from '../feed-forward';\nimport { INeuralNetworkTrainOptions } from '../neural-network';\nimport {\n  DataFormatter,\n  IDataFormatter,\n  IDataFormatterJSON,\n} from '../utilities/data-formatter';\nimport { randomFloat } from '../utilities/random';\nimport { zeros } from '../utilities/zeros';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { copy } from './matrix/copy';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport { IRNNDatum, Value } from './rnn-data-types';\n\nexport interface IRNNModel {\n  isInitialized: boolean;\n  input: Matrix;\n  hiddenLayers: IRNNHiddenLayerModel[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport interface IRNNOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatter;\n  json?: IRNNJSON;\n}\n\nexport interface IRNNJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  dataFormatter: IDataFormatterJSON;\n}\n\nexport interface IRNNTrainingOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number;\n}\n\nexport interface IRNNJSONTrainOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: string) => void);\n  logPeriod: number;\n  learningRate: number;\n  callback?: (status: IRNNStatus) => void;\n  callbackPeriod: number;\n  timeout: number | 'Infinity';\n}\n\nexport const trainDefaults: IRNNTrainingOptions = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callbackPeriod: 10,\n  timeout: Infinity,\n};\n\nexport interface IRNNHiddenLayer {\n  [key: string]: RandomMatrix | Matrix;\n}\n\nexport interface IRNNHiddenLayerModel extends IRNNHiddenLayer {\n  // wxh\n  weight: RandomMatrix;\n  // whh\n  transition: RandomMatrix;\n  // bhh\n  bias: Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    inputSize: 20,\n    inputRange: 20,\n    hiddenLayers: [20, 20],\n    outputSize: 20,\n    decayRate: 0.999,\n    smoothEps: 1e-8,\n    regc: 0.000001,\n    clipval: 5,\n    maxPredictionLength: 100,\n    dataFormatter: new DataFormatter(),\n  };\n};\n\nexport interface IRNNStatus {\n  iterations: number;\n  error: number;\n}\n\nexport interface IRNNPreppedTrainingData {\n  status: IRNNStatus;\n  preparedData: number[][];\n  endTime: number;\n}\n\nexport class RNN {\n  options: IRNNOptions = { ...defaults() };\n  trainOpts: IRNNTrainingOptions = { ...trainDefaults };\n  stepCache: { [index: number]: Float32Array } = {};\n  runs = 0;\n  ratioClipped = 0;\n  model: IRNNModel = Object.seal({\n    isInitialized: false,\n    input: new Matrix(0, 0),\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  initialLayerInputs: Matrix[] = [];\n\n  constructor(options: Partial<IRNNOptions & IRNNTrainingOptions> = {}) {\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      // ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  initialize(): void {\n    const { dataFormatter } = this.options;\n    if (dataFormatter?.characters.length) {\n      this.options.inputSize = this.options.inputRange = this.options.outputSize =\n        dataFormatter.characters.length;\n    }\n    this.model = this.mapModel();\n  }\n\n  createHiddenLayers(): IRNNHiddenLayer[] {\n    const { hiddenLayers, inputSize } = this.options;\n    const hiddenLayersModel: IRNNHiddenLayer[] = [];\n    // 0 is end, so add 1 to offset\n    hiddenLayersModel.push(this.getHiddenLayer(hiddenLayers[0], inputSize));\n    let prevSize = hiddenLayers[0];\n\n    for (let d = 1; d < hiddenLayers.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenLayers[d];\n      hiddenLayersModel.push(this.getHiddenLayer(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n    return hiddenLayersModel;\n  }\n\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    if (!hiddenLayer.weight || !hiddenLayer.transition || !hiddenLayer.bias) {\n      throw new Error('hiddenLayer does not have expected properties');\n    }\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix(): RandomMatrix {\n    const { inputRange, inputSize } = this.options;\n    if (inputRange < 1)\n      throw new Error('this.options.inputRange not an expected number');\n    if (inputSize < 1)\n      throw new Error('this.options.inputSize not an expected number');\n\n    // 0 is end, so add 1 to offset\n    return new RandomMatrix(inputRange + 1, inputSize, 0.08);\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize, hiddenLayers } = this.options;\n    const lastHiddenSize = last(hiddenLayers);\n\n    // 0 is end, so add 1 to offset\n    return {\n      // whd\n      outputConnector: new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08),\n      // 0 is end, so add 1 to offset\n      // bd\n      output: new Matrix(outputSize + 1, 1),\n    };\n  }\n\n  bindEquation(): void {\n    const { model } = this;\n    const { hiddenLayers } = this.options;\n    const equation = new Equation();\n    const outputs: Matrix[] = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? last(model.equationConnections)\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      model.hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      if (!equationConnection[i]) {\n        throw new Error(`Cannot find equation at index ${i}`);\n      }\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        model.hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  mapModel(): IRNNModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const input = this.createInputMatrix();\n    allMatrices.push(input);\n\n    const hiddenLayers = this.createHiddenLayers() as IRNNHiddenLayerModel[];\n    if (!hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix: IRNNHiddenLayerModel = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { output, outputConnector } = this.createOutputMatrices();\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n\n    return Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  trainInput(input: number[]): number {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      log2ppl += equation.predictTargetIndex(source, target);\n    }\n    return Math.pow(2, log2ppl / (max - 1)) / 100;\n  }\n\n  backpropagate(input: number[]): void {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].backpropagateIndex(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].backpropagateIndex(0);\n  }\n\n  adjustWeights(): void {\n    const { regc, clipval, decayRate, smoothEps } = this.options;\n    const { trainOpts, model, stepCache } = this;\n    const { learningRate } = trainOpts;\n    const { allMatrices } = model;\n    let numClipped = 0;\n    let numTot = 0;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in stepCache)) {\n        stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        } else if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-learningRate * r) / Math.sqrt(cache[i] + smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  get isRunnable(): boolean {\n    if (this.model && this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  checkRunnable(): void {\n    if (!this.isRunnable) {\n      throw new Error('Network not runnable');\n    }\n  }\n\n  run(rawInput: Value = [], isSampleI = false, temperature = 1): string {\n    const maxPredictionLength: number =\n      this.options.maxPredictionLength +\n      (rawInput !== null ? (rawInput as string).length : 0) +\n      (this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0);\n\n    this.checkRunnable();\n\n    const input: number[] =\n      this.options.dataFormatter && (rawInput as string).length > 0\n        ? this.options.dataFormatter.formatDataIn(rawInput)\n        : (rawInput as number[]);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (true) {\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n      while (model.equations.length <= i) {\n        this.bindEquation();\n      }\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.runIndex(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.options.dataFormatter.formatDataOut(\n      input,\n      output.slice(input.length).map((value) => value - 1)\n    );\n  }\n\n  /**\n   *\n   * Verifies network sizes are initialized\n   * If they are not it will initialize them\n   */\n  verifyIsInitialized(): void {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n  }\n\n  /**\n   *\n   * @param options\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  updateTrainingOptions(options: Partial<IRNNTrainingOptions>): void {\n    this.trainOpts = { ...trainDefaults, ...options };\n    this.validateTrainingOptions(this.trainOpts as INeuralNetworkTrainOptions);\n    this.setLogMethod(options.log ?? this.trainOpts.log);\n    // TODO: Remove this?\n    // this.activation = options.activation || this.activation;\n  }\n\n  validateTrainingOptions(options: INeuralNetworkTrainOptions): void {\n    const validations: { [fnName: string]: () => boolean } = {\n      iterations: () => {\n        const val = options.iterations;\n        return typeof val === 'number' && val > 0;\n      },\n      errorThresh: () => {\n        const val = options.errorThresh;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      log: () => {\n        const val = options.log;\n        return typeof val === 'function' || typeof val === 'boolean';\n      },\n      logPeriod: () => {\n        const val = options.logPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      learningRate: () => {\n        const val = options.learningRate;\n        return typeof val === 'number' && val > 0 && val < 1;\n      },\n      callback: () => {\n        const val = options.callback;\n        return typeof val === 'function' || val === undefined;\n      },\n      callbackPeriod: () => {\n        const val = options.callbackPeriod;\n        return typeof val === 'number' && val > 0;\n      },\n      timeout: () => {\n        const val = options.timeout;\n        return typeof val === 'number' && val > 0;\n      },\n    };\n    for (const p in validations) {\n      const v = (options as unknown) as { [v: string]: string };\n      if (!validations[p]()) {\n        throw new Error(\n          `[${p}, ${v[p]}] is out of normal training range, your network will probably not train.`\n        );\n      }\n    }\n  }\n\n  setLogMethod(log: Log | undefined | boolean): void {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  protected prepTraining(\n    data: Array<Value | IRNNDatum>,\n    options: Partial<IRNNTrainingOptions>\n  ): IRNNPreppedTrainingData {\n    this.updateTrainingOptions(options);\n    const preparedData = this.options.dataFormatter.format(data);\n    const endTime = Date.now() + (this.trainOpts.timeout ?? 0);\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this.verifyIsInitialized();\n\n    return {\n      preparedData,\n      status,\n      endTime,\n    };\n  }\n\n  train(\n    data: Array<Value | IRNNDatum>,\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...trainDefaults,\n      ...trainOpts,\n    };\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    let error = Infinity;\n    let i;\n\n    let inputs: number[][];\n    if (this.options?.dataFormatter) {\n      inputs = this.options.dataFormatter.format(data);\n    } else if (\n      Array.isArray(data) &&\n      Array.isArray(data[0]) &&\n      typeof (data as number[][])[0][0] === 'number'\n    ) {\n      inputs = data as number[][];\n    } else {\n      throw new Error('training not in expected format of number[][]');\n    }\n\n    this.verifyIsInitialized();\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < inputs.length; j++) {\n        const err = this.trainPattern(inputs[j], true);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) {\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      }\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  addFormat(): void {\n    throw new Error('not yet implemented');\n  }\n\n  toJSON(): IRNNJSON {\n    if (!this.model.isInitialized) {\n      this.initialize();\n    }\n    const { model, options } = this;\n\n    return {\n      type: this.constructor.name,\n      options: { ...options, dataFormatter: options.dataFormatter.toJSON() },\n      trainOpts: {\n        ...this.trainOpts,\n        timeout:\n          this.trainOpts.timeout === Infinity\n            ? 'Infinity'\n            : this.trainOpts.timeout,\n      },\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  fromJSON(json: IRNNJSON): void {\n    const { options } = json;\n    const allMatrices = [];\n    const input = Matrix.fromJSON(json.input);\n    allMatrices.push(input);\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    if (options.dataFormatter) {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: DataFormatter.fromJSON(options.dataFormatter),\n      };\n    } else {\n      this.options = {\n        ...defaults(),\n        ...options,\n        dataFormatter: new DataFormatter(),\n      };\n    }\n\n    this.model = Object.seal({\n      isInitialized: true,\n      input,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n  }\n\n  toFunction(cb?: (src: string) => string): RNNFunction {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix): number {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          if (j > -1 && (m === state.left || m === state.right)) {\n            return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n          }\n          return `new Matrix(${m.rows}, ${m.columns})`;\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString: string): string {\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string): string {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  var json = ${jsonString};\n  ${\n    this.options.dataFormatter\n      ? `${this.options.dataFormatter.toFunctionString()};\n  Object.assign(dataFormatter, json.options.dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? `const formatDataIn = function (input, output) { ${toInner(\n          this.options.dataFormatter.formatDataIn.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  ${\n    this.options.dataFormatter !== null &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? `const formatDataOut = function formatDataOut(input, output) { ${toInner(\n          this.options.dataFormatter.formatDataOut.toString()\n        )} }.bind(dataFormatter);`\n      : ''\n  }\n  var maxPredictionLength =\n    ${this.options.maxPredictionLength} +\n    rawInput.length +\n    ${\n      this.options.dataFormatter\n        ? this.options.dataFormatter.specialIndexes.length\n        : 0\n    };\n  var input = ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.options.dataFormatter &&\n    typeof this.options.dataFormatter.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_1.Matrix', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'isSampleI',\n      'temperature',\n      cb ? cb(src) : src\n    ) as RNNFunction;\n  }\n\n  trainPattern(input: number[], logErrorRate?: boolean): number {\n    const error = this.trainInput(input);\n    this.backpropagate(input);\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n}\n\nexport interface IRNNJSON {\n  type: string;\n  options: IRNNJSONOptions;\n  trainOpts: IRNNJSONTrainOptions;\n  input: IMatrixJSON;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n}\n\nexport function last<T>(values: T[]): T {\n  return values[values.length - 1];\n}\n\nexport type RNNFunction = (\n  rawInput?: Array<Value | IRNNDatum> | string,\n  isSampleI?: boolean,\n  temperature?: number\n) => string;\n","import { Matrix } from '.';\n\nexport function copy(product: Matrix, left: Matrix): void {\n  product.rows = left.rows;\n  product.columns = left.columns;\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface IGRUHiddenLayer extends IRNNHiddenLayer {\n  updateGateInputMatrix: RandomMatrix;\n  updateGateHiddenMatrix: RandomMatrix;\n  updateGateBias: Matrix;\n  resetGateInputMatrix: RandomMatrix;\n  resetGateHiddenMatrix: RandomMatrix;\n  resetGateBias: Matrix;\n  cellWriteInputMatrix: RandomMatrix;\n  cellWriteHiddenMatrix: RandomMatrix;\n  cellWriteBias: Matrix;\n}\n\nexport class GRU extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n\nexport function getGRUHiddenLayer(\n  hiddenSize: number,\n  prevSize: number\n): IGRUHiddenLayer {\n  return {\n    // update Gate\n    // wzxh\n    updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n    updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n    updateGateBias: new Matrix(hiddenSize, 1),\n    // reset Gate\n    // wrxh\n    resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n    resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n    resetGateBias: new Matrix(hiddenSize, 1),\n    // cell write parameters\n    // wcxh\n    cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n    cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellWriteBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getGRUEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: IGRUHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.updateGateInputMatrix ||\n    !hiddenLayer.updateGateHiddenMatrix ||\n    !hiddenLayer.updateGateBias ||\n    !hiddenLayer.resetGateInputMatrix ||\n    !hiddenLayer.resetGateHiddenMatrix ||\n    !hiddenLayer.resetGateBias ||\n    !hiddenLayer.cellWriteInputMatrix ||\n    !hiddenLayer.cellWriteHiddenMatrix ||\n    !hiddenLayer.cellWriteBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n  const allOnes = equation.allOnes.bind(equation);\n  const cloneNegative = equation.cloneNegative.bind(equation);\n\n  // update gate\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.updateGateBias\n    )\n  );\n\n  // reset gate\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n        multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n      ),\n      hiddenLayer.resetGateBias\n    )\n  );\n\n  // cell\n  const cell = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n        multiply(\n          hiddenLayer.cellWriteHiddenMatrix,\n          multiplyElement(resetGate, previousResult)\n        )\n      ),\n      hiddenLayer.cellWriteBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(\n        allOnes(updateGate.rows, updateGate.columns),\n        cloneNegative(updateGate)\n      ),\n      cell\n    ),\n    multiplyElement(previousResult, updateGate)\n  );\n}\n","export class ArrayLookupTable {\n  length = 0;\n  table: { [key: string]: number } = {};\n\n  constructor(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>,\n    public prop: 'input' | 'output'\n  ) {\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      const ioValue = datum[prop];\n      for (let j = 0; j < ioValue.length; j++) {\n        const value = ioValue[j];\n        for (const p in value) {\n          if (!value.hasOwnProperty(p)) continue;\n          if (this.table.hasOwnProperty(p)) continue;\n          this.table[p] = this.length++;\n        }\n      }\n    }\n  }\n}\n","import {\n  FormattableData,\n  InputOutputValue,\n  INumberArray,\n  INumberHash,\n  ITrainingDatum,\n  lookup,\n} from '../lookup';\nimport { ArrayLookupTable } from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  inputOutputArraysToFloat32Arrays,\n  inputOutputArrayToFloat32Arrays,\n  inputOutputObjectsToFloat32Arrays,\n  inputOutputObjectToFloat32Arrays,\n  objectToFloat32Array,\n  objectToFloat32Arrays,\n} from '../utilities/cast';\nimport { LookupTable } from '../utilities/lookup-table';\nimport { randomFloat } from '../utilities/random';\nimport { zeros } from '../utilities/zeros';\nimport { IMatrixJSON, Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { maxI } from './matrix/max-i';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { sampleI } from './matrix/sample-i';\nimport { softmax } from './matrix/softmax';\nimport {\n  defaults as rnnDefaults,\n  IRNNHiddenLayer,\n  IRNNHiddenLayerModel,\n  IRNNOptions,\n  IRNNStatus,\n  IRNNTrainingOptions,\n  last,\n  RNN,\n  trainDefaults as rnnTrainDefaults,\n} from './rnn';\n\nexport type ValuesOf<\n  T extends InputOutputValue | InputOutputValue[]\n> = T[number];\n\nexport interface IRNNTimeStepOptions extends IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n  json?: IRNNTimeStepJSON;\n}\n\nexport interface IRNNTimeStepJSONOptions {\n  inputSize: number;\n  inputRange: number;\n  hiddenLayers: number[];\n  outputSize: number;\n  decayRate: number;\n  smoothEps: number;\n  regc: number;\n  clipval: number;\n  maxPredictionLength: number;\n}\n\nexport interface IRNNTimeStepJSON {\n  type: string;\n  options: IRNNTimeStepJSONOptions;\n  hiddenLayers: Array<{ [index: string]: IMatrixJSON }>;\n  outputConnector: IMatrixJSON;\n  output: IMatrixJSON;\n  inputLookup: INumberHash | null;\n  inputLookupLength: number;\n  outputLookup: INumberHash | null;\n  outputLookupLength: number;\n}\n\nexport interface IMisclass {\n  value: FormattableData;\n  actual: FormattableData;\n}\n\nexport interface ITestResults {\n  misclasses: IMisclass[];\n  error: number;\n  total: number;\n}\n\nexport interface IRNNTimeStepModel {\n  isInitialized: boolean;\n  hiddenLayers: IRNNHiddenLayer[];\n  output: Matrix;\n  equations: Equation[];\n  allMatrices: Matrix[];\n  equationConnections: Matrix[][];\n  outputConnector: RandomMatrix | Matrix;\n}\n\nexport const defaults = (): IRNNOptions => {\n  return {\n    ...rnnDefaults(),\n    inputSize: 1,\n    hiddenLayers: [20],\n    outputSize: 1,\n    inputRange: 0,\n  };\n};\n\nexport class RNNTimeStep extends RNN {\n  inputLookupLength = 0;\n  inputLookup: INumberHash | null = null;\n  outputLookup: INumberHash | null = null;\n  outputLookupLength = 0;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  model: IRNNTimeStepModel = Object.seal({\n    isInitialized: false,\n    hiddenLayers: [],\n    output: new Matrix(0, 0),\n    equations: [],\n    allMatrices: [],\n    equationConnections: [],\n    outputConnector: new RandomMatrix(0, 0, 0.08),\n  });\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  options: IRNNTimeStepOptions = defaults();\n  constructor(\n    options: Partial<IRNNTimeStepOptions & IRNNTrainingOptions> = {}\n  ) {\n    super();\n    this.options = { ...this.options, ...options };\n    this.updateTrainingOptions({\n      ...trainDefaults,\n      ...options,\n    });\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  createInputMatrix(): RandomMatrix {\n    throw new Error('Input Matrices do not exist on RNNTimeStep');\n  }\n\n  createOutputMatrices(): { outputConnector: RandomMatrix; output: Matrix } {\n    const { outputSize } = this.options;\n    const lastHiddenSize = last(this.options.hiddenLayers);\n\n    // whd\n    const outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    const output = new RandomMatrix(outputSize, 1, 0.08);\n    return { output, outputConnector };\n  }\n\n  bindEquation(): void {\n    const { model, options } = this;\n    const { hiddenLayers, inputSize } = options;\n    const layers = model.hiddenLayers;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.input(new Matrix(inputSize, 1)),\n      equationConnection[0],\n      layers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        layers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(\n      equation.multiply(model.outputConnector, output),\n      model.output\n    );\n    model.equations.push(equation);\n  }\n\n  initialize(): void {\n    this.model = this.mapModel();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  mapModel(): IRNNTimeStepModel {\n    const allMatrices: Matrix[] = [];\n    this.initialLayerInputs = this.options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n\n    const hiddenLayers = this.createHiddenLayers();\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      const hiddenMatrix = hiddenLayers[i];\n      for (const property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    const { outputConnector, output } = this.createOutputMatrices();\n\n    allMatrices.push(outputConnector);\n    allMatrices.push(output);\n    return Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      equations: [],\n      allMatrices,\n      equationConnections: [],\n      outputConnector,\n    });\n  }\n\n  backpropagate(): void {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  run<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType\n  ): ValuesOf<InputType> {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArray(rawInput as Float32Array);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfArray(rawInput as Float32Array[]);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash); // Backward compatibility, will be result of `unknown` and need casting.  Better to just use net.runObject() directly\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runArrayOfObject(rawInput as INumberHash[]);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecast<InputType extends InputOutputValue | InputOutputValue[]>(\n    rawInput: InputType,\n    count = 1\n  ): InputType {\n    const shape = lookup.dataShape(rawInput).join(',');\n    switch (shape) {\n      case 'array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArray(rawInput as Float32Array, count);\n      case 'array,array,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfArray(rawInput as Float32Array[], count);\n      case 'object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.runObject(rawInput as INumberHash);\n      case 'array,object,number':\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-expect-error\n        return this.forecastArrayOfObject(rawInput as INumberHash[], count);\n      default:\n        throw new Error(`Unrecognized data shape ${shape}`);\n    }\n  }\n\n  forecastArray(input: Float32Array, count = 1): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    if (this.options.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(\n          Float32Array.from([input[i]])\n        );\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(Float32Array.from([]));\n      }\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return Float32Array.from(result);\n  }\n\n  forecastArrayOfArray(input: Float32Array[], count = 1): Float32Array[] {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    if (!lastOutput) {\n      throw new Error('lastOutput not set');\n    }\n    const result = [Float32Array.from(lastOutput.weights)];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(Float32Array.from(lastOutput.weights.slice(0)));\n    }\n    this.end();\n    return result;\n  }\n\n  forecastArrayOfObject(input: INumberHash[], count = 1): INumberHash[] {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedData = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedData, count).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  train(\n    data: FormattableData[],\n    trainOpts: Partial<IRNNTrainingOptions> = {}\n  ): IRNNStatus {\n    this.trainOpts = trainOpts = {\n      ...rnnTrainDefaults,\n      ...trainOpts,\n    };\n    // Don't destructure here because this.setSize() can reset this.options.\n    if (this.options.inputSize === 1 && this.options.outputSize === 1) {\n      this.setSize(data);\n    }\n    this.verifySize();\n\n    const formattedData = this.formatData(data);\n    let error = Infinity;\n    let i;\n\n    this.verifyIsInitialized();\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = this.trainOpts;\n    const log = trainOpts.log === true ? console.log : trainOpts.log;\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < formattedData.length; j++) {\n        const err = this.trainPattern(formattedData[j], true);\n        sum += err;\n      }\n      error = sum / formattedData.length;\n\n      if (isNaN(error))\n        throw new Error(\n          'Network error rate is unexpected NaN, check network configurations and try again. Most probably input format is not correct or training data is not enough. '\n        );\n      if (log && i % logPeriod === 0) {\n        log(`iterations: ${i}, training error: ${error}`);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  trainArrayOfArray(input: Float32Array[]): number {\n    if (input.length < 2) {\n      throw new Error('input must be an array of 2 or more');\n    }\n    const { equations } = this.model;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  trainPattern(input: Float32Array[], logErrorRate?: boolean): number {\n    const error = this.trainArrayOfArray(input);\n    this.backpropagate();\n    this.adjustWeights();\n\n    if (logErrorRate) {\n      return error;\n    }\n    return 0;\n  }\n\n  setSize(data: FormattableData[]): void {\n    let size = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        size = 1;\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        size = (data as number[][][])[0][0].length;\n        break;\n      case 'array,array,object,number':\n        // inputs and outputs should match\n        size = Object.keys(lookup.toTable2D(data as INumberHash[][])).length;\n        break;\n      case 'array,datum,array,array,number':\n        size = ((data as unknown) as Array<{\n          [key: string]: number[][];\n        }>)[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        size = Object.keys(\n          lookup.toInputTable2D(\n            data as Array<{ input: Array<{ [key: string]: number }> }>\n          )\n        ).length;\n        break;\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n    this.options = Object.seal({\n      ...this.options,\n      inputSize: size,\n      outputSize: size,\n    });\n  }\n\n  verifySize(): void {\n    if (this.options.inputSize || this.options.outputSize) {\n      if (this.options.inputSize !== this.options.outputSize) {\n        throw new Error('manually set inputSize and outputSize mismatch');\n      }\n    }\n  }\n\n  runArray(input: Float32Array): number {\n    this.checkRunnable();\n    const { equations } = this.model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput(new Float32Array([input[i]]));\n    }\n    this.end();\n    return (lastOutput as Matrix).weights[0];\n  }\n\n  runArrayOfArray(input: Float32Array[]): Float32Array {\n    this.checkRunnable();\n    const { model } = this;\n    const { equations } = model;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      const outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    return lastOutput ?? Float32Array.from([]);\n  }\n\n  runObject(input: INumberHash): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set');\n    }\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(\n        this.outputLookup,\n        this.forecastArray(\n          inputArray,\n          this.outputLookupLength - inputArray.length\n        ),\n        inputArray.length\n      );\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.forecastArray(\n        lookup.toArray(this.inputLookup, input, this.inputLookupLength),\n        this.outputLookupLength\n      )\n    );\n  }\n\n  runArrayOfObject(input: INumberHash[]): INumberHash {\n    if (this.inputLookup === null) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (this.outputLookup === null) {\n      throw new Error('this.outputLookup not set');\n    }\n    const formattedInput = input.map((value) =>\n      lookup.toArray(\n        this.inputLookup as INumberHash,\n        value,\n        this.inputLookupLength\n      )\n    );\n    return this.forecastArrayOfArray(formattedInput, 1).map((value) =>\n      lookup.toObject(this.outputLookup as INumberHash, value)\n    )[0];\n  }\n\n  runArrayOfObjectOfArray(input: INumberHash[]): INumberHash {\n    if (!this.inputLookup) {\n      throw new Error('this.inputLookup not set');\n    }\n    if (!this.outputLookup) {\n      throw new Error('this.outputLookup not set');\n    }\n    return lookup.toObject(\n      this.outputLookup,\n      this.runArrayOfArray(\n        lookup.toArrays(this.inputLookup, input, this.inputLookupLength)\n      )\n    );\n  }\n\n  end(): void {\n    this.model.equations[this.model.equations.length - 1].runInput(\n      new Float32Array(this.options.outputSize)\n    );\n  }\n\n  requireInputOutputOfOne(): void {\n    if (this.options.inputSize !== 1) {\n      throw new Error('inputSize must be 1 for this data size');\n    }\n    if (this.options.outputSize !== 1) {\n      throw new Error('outputSize must be 1 for this data size');\n    }\n  }\n\n  // Handles data shape of 'array,number'\n  formatArray(data: number[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from([data[i]]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,array,number'\n  formatArrayOfArray(data: number[][]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize === 1 && outputSize === 1) {\n      for (let i = 0; i < data.length; i++) {\n        result.push(arrayToFloat32Arrays(data[i]));\n      }\n      return result;\n    }\n    if (inputSize !== data[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== data[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      result.push(Float32Array.from(data[i]));\n    }\n    return [result];\n  }\n\n  // Handles data shape of 'array,object,number'\n  formatArrayOfObject(data: INumberHash[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(objectToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,object,number' when this.options.inputSize > 1\n  formatArrayOfObjectMulti(data: INumberHash[]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push([\n        objectToFloat32Array(data[i], this.inputLookup, this.inputLookupLength),\n      ]);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,number'\n  formatArrayOfDatumOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    this.requireInputOutputOfOne();\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArrayToFloat32Arrays(\n          datum.input as number[],\n          datum.output as number[]\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,object,number'\n  formatArrayOfDatumOfObject(data: ITrainingDatum[]): Float32Array[][] {\n    this.requireInputOutputOfOne();\n    if (!this.inputLookup) {\n      const inputLookup = new LookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new LookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectToFloat32Arrays(\n          datum.input as INumberHash,\n          datum.output as INumberHash\n        )\n      );\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,array,number'\n  formatArrayOfArrayOfArray(data: number[][][]): Float32Array[][] {\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      result.push(arraysToFloat32Arrays(data[i]));\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,array,object,number'\n  formatArrayOfArrayOfObject(data: INumberHash[][]): Float32Array[][] {\n    if (!this.inputLookup) {\n      const lookupTable = new LookupTable(data);\n      this.inputLookup = this.outputLookup = lookupTable.table;\n      this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const array = [];\n      for (let j = 0; j < data[i].length; j++) {\n        array.push(\n          objectToFloat32Array(\n            data[i][j],\n            this.inputLookup,\n            this.inputLookupLength\n          )\n        );\n      }\n      result.push(array);\n    }\n    return result;\n  }\n\n  // Handles data shape of 'array,datum,array,array,number'\n  formatArrayOfDatumOfArrayOfArray(data: ITrainingDatum[]): Float32Array[][] {\n    const result = [];\n    const { inputSize, outputSize } = this.options;\n    if (inputSize !== (data[0].input as INumberArray[][])[0].length) {\n      throw new Error('inputSize must match data input size');\n    }\n    if (outputSize !== (data[0].output as INumberArray[][])[0].length) {\n      throw new Error('outputSize must match data output size');\n    }\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputArraysToFloat32Arrays(\n          datum.input as number[][],\n          datum.output as number[][]\n        )\n      );\n    }\n    return result;\n  }\n\n  // 'Handles data shape of array,datum,array,object,number'\n  formatArrayOfDatumOfArrayOfObject(\n    data: Array<{\n      input: Array<Record<string, number>>;\n      output: Array<Record<string, number>>;\n    }>\n  ): Float32Array[][] {\n    if (!this.inputLookup) {\n      const inputLookup = new ArrayLookupTable(data, 'input');\n      this.inputLookup = inputLookup.table;\n      this.inputLookupLength = inputLookup.length;\n    }\n    if (!this.outputLookup) {\n      const outputLookup = new ArrayLookupTable(data, 'output');\n      this.outputLookup = outputLookup.table;\n      this.outputLookupLength = outputLookup.length;\n    }\n    if (!this.outputLookupLength) {\n      throw new Error('this.outputLookupLength not set to usable number');\n    }\n    const result = [];\n    for (let i = 0; i < data.length; i++) {\n      const datum = data[i];\n      result.push(\n        inputOutputObjectsToFloat32Arrays(\n          datum.input,\n          datum.output,\n          this.inputLookup,\n          this.outputLookup,\n          this.inputLookupLength,\n          this.outputLookupLength\n        )\n      );\n    }\n    return result;\n  }\n\n  formatData(data: FormattableData[]): Float32Array[][] {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,number':\n        return this.formatArray(data as number[]);\n      case 'array,array,number':\n        return this.formatArrayOfArray(data as number[][]);\n      case 'array,object,number':\n        if (this.options.inputSize === 1) {\n          return this.formatArrayOfObject(data as INumberHash[]);\n        } else {\n          return this.formatArrayOfObjectMulti(data as INumberHash[]);\n        }\n      case 'array,datum,array,number':\n        return this.formatArrayOfDatumOfArray(data as ITrainingDatum[]);\n      case 'array,datum,object,number':\n        return this.formatArrayOfDatumOfObject(data as ITrainingDatum[]);\n      case 'array,array,array,number':\n        return this.formatArrayOfArrayOfArray(data as number[][][]);\n      case 'array,array,object,number':\n        return this.formatArrayOfArrayOfObject(data as INumberHash[][]);\n      case 'array,datum,array,array,number':\n        return this.formatArrayOfDatumOfArrayOfArray(data as ITrainingDatum[]);\n      case 'array,datum,array,object,number':\n        return this.formatArrayOfDatumOfArrayOfObject(\n          data as Array<{\n            input: Array<Record<string, number>>;\n            output: Array<Record<string, number>>;\n          }>\n        );\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  test(data: FormattableData[]): ITestResults {\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const formattedData = this.formatData(data);\n    for (let i = 0; i < formattedData.length; i++) {\n      const input = formattedData[i];\n      const output = this.run(input.splice(0, input.length - 1));\n      const target = input[input.length - 1];\n      let errors = 0;\n      let errorCount = 0;\n      for (let j = 0; j < output.length; j++) {\n        errorCount++;\n        const error = target[j] - output[j];\n        // mse\n        errors += error * error;\n      }\n      errorSum += errors / errorCount;\n      const errorsAbs = Math.abs(errors);\n      if (errorsAbs > this.trainOpts.errorThresh) {\n        const misclass = (data as number[][][])[i];\n        misclasses.push({\n          value: misclass,\n          actual: output,\n        });\n      }\n    }\n    return {\n      error: errorSum / formattedData.length,\n      misclasses,\n      total: formattedData.length,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  addFormat(value: FormattableData): void {\n    const dataShape = lookup.dataShape(value).join(',');\n    switch (dataShape) {\n      case 'array,array,number':\n      case 'datum,array,array,number':\n      case 'array,number':\n      case 'datum,array,number':\n        return;\n      case 'datum,object,number': {\n        this.inputLookup = lookup.addKeys(\n          (value as ITrainingDatum).input as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        }\n        this.outputLookup = lookup.addKeys(\n          (value as ITrainingDatum).output as INumberHash,\n          this.outputLookup ?? {}\n        );\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        }\n        break;\n      }\n      case 'object,number': {\n        this.inputLookup = this.outputLookup = lookup.addKeys(\n          value as INumberHash,\n          this.inputLookup ?? {}\n        );\n        if (this.inputLookup) {\n          this.inputLookupLength = this.outputLookupLength = Object.keys(\n            this.inputLookup\n          ).length;\n        }\n        break;\n      }\n      case 'array,object,number': {\n        const typedValue = value as INumberHash[];\n        for (let i = 0; i < typedValue.length; i++) {\n          this.inputLookup = this.outputLookup = lookup.addKeys(\n            typedValue[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = this.outputLookupLength = Object.keys(\n              this.inputLookup\n            ).length;\n          }\n        }\n        break;\n      }\n      case 'datum,array,object,number': {\n        const typedValue = value as ITrainingDatum;\n        const typedInput = typedValue.input as INumberHash[];\n        for (let i = 0; i < typedInput.length; i++) {\n          this.inputLookup = lookup.addKeys(\n            typedInput[i],\n            this.inputLookup ?? {}\n          );\n          if (this.inputLookup) {\n            this.inputLookupLength = Object.keys(this.inputLookup).length;\n          }\n        }\n        const typedOutput = typedValue.output as INumberHash[];\n        for (let i = 0; i < typedOutput.length; i++) {\n          this.outputLookup = lookup.addKeys(\n            typedOutput[i],\n            this.outputLookup ?? {}\n          );\n          if (this.outputLookup) {\n            this.outputLookupLength = Object.keys(this.outputLookup).length;\n          }\n        }\n        break;\n      }\n\n      default:\n        throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toJSON(): IRNNTimeStepJSON {\n    if (!this.model) {\n      this.initialize();\n    }\n    const { model } = this;\n    const options = { ...this.options, ...rnnDefaults };\n\n    return {\n      type: this.constructor.name,\n      options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        const layers: { [index: string]: IMatrixJSON } = {};\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: model.outputConnector.toJSON(),\n      output: model.output.toJSON(),\n      inputLookup: this.inputLookup,\n      inputLookupLength: this.inputLookupLength,\n      outputLookup: this.outputLookup,\n      outputLookupLength: this.outputLookupLength,\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  fromJSON(json: IRNNTimeStepJSON): void {\n    const { options } = json;\n    const allMatrices = [];\n    const hiddenLayers: IRNNHiddenLayerModel[] = [];\n\n    // backward compatibility for hiddenSizes\n    json.hiddenLayers.forEach((hiddenLayer) => {\n      const layers: { [index: string]: Matrix } = {};\n      for (const p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers as IRNNHiddenLayerModel);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this.options = { ...defaults(), ...options };\n    this.inputLookup = json.inputLookup;\n    this.inputLookupLength = json.inputLookupLength;\n    this.outputLookup = json.outputLookup;\n    this.outputLookupLength = json.outputLookupLength;\n\n    this.model = Object.seal({\n      isInitialized: true,\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    });\n    this.initialLayerInputs = options.hiddenLayers.map(\n      (size) => new Matrix(size, 1)\n    );\n    this.bindEquation();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  toFunction(cb?: (src: string) => string): RNNTimeStepFunction {\n    const {\n      model,\n      inputLookup,\n      inputLookupLength,\n      outputLookup,\n      outputLookupLength,\n    } = this;\n    const { inputSize } = this.options;\n    const { equations } = model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m: Matrix) {\n      const connection = model.equationConnections[0];\n      const { states } = equations[0];\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m: Matrix, stateIndex: number): string {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${m.rows}, ${m.columns})`;\n              }\n            // eslint-disable-next-line no-fallthrough\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n      return '';\n    }\n\n    function matrixToString(m: Matrix, stateIndex: number): string {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n        for (const p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${i}].${p}`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${JSON.stringify(inputLookup)};\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${JSON.stringify(inputLookup)};\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${JSON.stringify(inputLookup)};\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${inputLookupLength});\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${JSON.stringify(outputLookup)};\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${JSON.stringify(outputLookup)};\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${JSON.stringify(outputLookup)};\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString: string) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      // crude, but should be sufficient for now\n      // function() { body }\n      const fnParts = fnString.toString().split('{');\n      fnParts.shift();\n      // body }\n      const fnBodyString = fnParts.join('{');\n      const fnBodyParts = fnBodyString.split('}');\n      fnBodyParts.pop();\n      // body\n      return fnBodyParts\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName: string) {\n      return `src/recurrent/matrix/${fnName.replace(/[A-Z]/g, function (value) {\n        return `-${value.toLowerCase()}`;\n      })}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames: { [methodName: string]: boolean } = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${state.left ? matrixToString(state.left, i) : 'undefined'},\n      right: ${state.right ? matrixToString(state.right, i) : 'undefined'},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        if (state.name === 'input') {\n          innerFunctionsSwitch.push(`case '${fnName}':`);\n          innerFunctionsSwitch.push(\n            inputLookup && inputSize === 1\n              ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n              : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];'\n          );\n          innerFunctionsSwitch.push('break;');\n        } else {\n          innerFunctionsSwitch.push(\n            `        case '${fnName}':${\n              fnName !== 'forwardFn'\n                ? ` //compiled from ${fileName(fnName)}`\n                : ''\n            }\n          ${toInner(state.forwardFn.toString())}\n          break;`\n          );\n        }\n      }\n    }\n\n    const forceForecast = inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput'};\n  var json = ${jsonString};\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n    forceForecast\n      ? inputLookup === outputLookup\n        ? inputLookupLength\n        : `input.length + ${outputLookupLength - 1}`\n      : 'input.length'\n  };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n    ${\n      inputSize === 1 && inputLookup\n        ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }'\n        : 'output = state.product.weights;'\n    }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n      ? 'return output[0]'\n      : 'return output'\n  };\n  ${formatInputData()}\n  ${formatOutputData()}\n\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function('rawInput', cb ? cb(src) : src) as RNNTimeStepFunction;\n  }\n}\n\nexport type RNNTimeStepFunction = <\n  InputType extends InputOutputValue | InputOutputValue[]\n>(\n  rawInput?: InputType,\n  isSampleI?: boolean,\n  temperature?: number\n) => ValuesOf<InputType>;\n\nexport const trainDefaults = { ...rnnTrainDefaults };\n","import { getGRUHiddenLayer, getGRUEquation, IGRUHiddenLayer } from './gru';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class GRUTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getGRUHiddenLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getGRUEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as IGRUHiddenLayer\n    );\n  }\n}\n","import { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RandomMatrix } from './matrix/random-matrix';\nimport { IRNNHiddenLayer, RNN } from './rnn';\n\nexport interface ILSTMHiddenLayer extends IRNNHiddenLayer {\n  inputMatrix: Matrix;\n  inputHidden: Matrix;\n  inputBias: Matrix;\n  forgetMatrix: Matrix;\n  forgetHidden: Matrix;\n  forgetBias: Matrix;\n  outputMatrix: Matrix;\n  outputHidden: Matrix;\n  outputBias: Matrix;\n  cellActivationMatrix: Matrix;\n  cellActivationHidden: Matrix;\n  cellActivationBias: Matrix;\n}\n\nexport class LSTM extends RNN {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n\nexport function getHiddenLSTMLayer(\n  hiddenSize: number,\n  prevSize: number\n): ILSTMHiddenLayer {\n  return {\n    // gates parameters\n    // wix\n    inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n    inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n    inputBias: new Matrix(hiddenSize, 1),\n    // wfx\n    forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n    forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n    forgetBias: new Matrix(hiddenSize, 1),\n    // wox\n    outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n    outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n    outputBias: new Matrix(hiddenSize, 1),\n    // cell write params\n    // wcx\n    cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n    cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n    cellActivationBias: new Matrix(hiddenSize, 1),\n  };\n}\n\nexport function getLSTMEquation(\n  equation: Equation,\n  inputMatrix: Matrix,\n  previousResult: Matrix,\n  hiddenLayer: ILSTMHiddenLayer\n): Matrix {\n  if (\n    !hiddenLayer.inputMatrix ||\n    !hiddenLayer.inputHidden ||\n    !hiddenLayer.inputBias ||\n    !hiddenLayer.forgetMatrix ||\n    !hiddenLayer.forgetHidden ||\n    !hiddenLayer.forgetBias ||\n    !hiddenLayer.outputMatrix ||\n    !hiddenLayer.outputHidden ||\n    !hiddenLayer.outputBias ||\n    !hiddenLayer.cellActivationMatrix ||\n    !hiddenLayer.cellActivationHidden ||\n    !hiddenLayer.cellActivationBias\n  ) {\n    throw new Error('hiddenLayer does not have expected properties');\n  }\n\n  const sigmoid = equation.sigmoid.bind(equation);\n  const add = equation.add.bind(equation);\n  const multiply = equation.multiply.bind(equation);\n  const multiplyElement = equation.multiplyElement.bind(equation);\n  const tanh = equation.tanh.bind(equation);\n\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.inputMatrix, inputMatrix),\n        multiply(hiddenLayer.inputHidden, previousResult)\n      ),\n      hiddenLayer.inputBias\n    )\n  );\n\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.forgetMatrix, inputMatrix),\n        multiply(hiddenLayer.forgetHidden, previousResult)\n      ),\n      hiddenLayer.forgetBias\n    )\n  );\n\n  // output gate\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(hiddenLayer.outputMatrix, inputMatrix),\n        multiply(hiddenLayer.outputHidden, previousResult)\n      ),\n      hiddenLayer.outputBias\n    )\n  );\n\n  // write operation on cells\n  const cellWrite = tanh(\n    add(\n      add(\n        multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n        multiply(hiddenLayer.cellActivationHidden, previousResult)\n      ),\n      hiddenLayer.cellActivationBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n","import { getHiddenLSTMLayer, getLSTMEquation, ILSTMHiddenLayer } from './lstm';\nimport { Matrix } from './matrix';\nimport { Equation } from './matrix/equation';\nimport { RNNTimeStep } from './rnn-time-step';\nimport { IRNNHiddenLayer } from './rnn';\n\nexport class LSTMTimeStep extends RNNTimeStep {\n  getHiddenLayer(hiddenSize: number, prevSize: number): IRNNHiddenLayer {\n    return getHiddenLSTMLayer(hiddenSize, prevSize);\n  }\n\n  getEquation(\n    equation: Equation,\n    inputMatrix: Matrix,\n    previousResult: Matrix,\n    hiddenLayer: IRNNHiddenLayer\n  ): Matrix {\n    return getLSTMEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer as ILSTMHiddenLayer\n    );\n  }\n}\n","import { Writable } from 'stream';\nimport { INeuralNetworkTrainOptions } from './neural-network';\nimport { INeuralNetworkState } from './neural-network-types';\n\nexport interface ITrainStreamTrainOptions {\n  iterations: number;\n  errorThresh: number;\n  log: boolean;\n  logPeriod: number;\n  callbackPeriod: number;\n  callback: (status: { iterations: number; error: number }) => void;\n}\n\nexport interface ITrainStreamNetwork<\n  InputType,\n  FormattedType,\n  TrainOptsType extends Partial<ITrainStreamTrainOptions>\n> {\n  trainOpts: TrainOptsType;\n  updateTrainingOptions: (trainOpts: Partial<TrainOptsType>) => void;\n  addFormat: (data: InputType) => void;\n  formatData: (data: InputType[]) => FormattedType[];\n  trainPattern: (value: FormattedType, logErrorRate?: boolean) => number | null;\n  verifyIsInitialized: (data: FormattedType[]) => void;\n}\n\ninterface ITrainStreamOptions<Network> extends INeuralNetworkTrainOptions {\n  neuralNetwork: Network;\n  floodCallback?: () => void;\n  doneTrainingCallback?: (stats: { error: number; iterations: number }) => void;\n}\n\nexport class TrainStream<\n  Network extends ITrainStreamNetwork<\n    Parameters<Network['addFormat']>[0],\n    Parameters<Network['trainPattern']>[0],\n    Network['trainOpts']\n  >\n> extends Writable {\n  neuralNetwork: Network;\n\n  dataFormatDetermined: boolean;\n  i: number;\n  size: number;\n  count: number;\n  sum: number;\n  floodCallback?: () => void;\n  doneTrainingCallback?: (stats: { error: number; iterations: number }) => void;\n  iterations: number;\n  errorThresh: number;\n  log: boolean | ((status: INeuralNetworkState) => void);\n  logPeriod: number;\n  callbackPeriod: number;\n  callback?: (status: { iterations: number; error: number }) => void;\n  firstDatum: Array<Parameters<Network['addFormat']>[0]> | undefined;\n\n  constructor(options: Partial<ITrainStreamOptions<Network>>) {\n    super({\n      objectMode: true,\n    });\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error(\n        'No neural network specified. Please see list of available network types: https://github.com/BrainJS/brain.js#neural-network-types'\n      );\n    }\n\n    const { neuralNetwork } = options;\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    const trainOpts = neuralNetwork?.trainOpts as ITrainStreamTrainOptions; // just updated from above line\n\n    this.neuralNetwork = neuralNetwork;\n    this.dataFormatDetermined = false;\n    this.i = 0; // keep track of internal iterations\n    this.size = 0;\n    this.count = 0;\n    this.sum = 0;\n    this.floodCallback = options.floodCallback;\n    this.doneTrainingCallback = options.doneTrainingCallback;\n\n    this.iterations = trainOpts.iterations;\n    this.errorThresh = trainOpts.errorThresh;\n    this.log = trainOpts.log;\n    this.logPeriod = trainOpts.logPeriod;\n    this.callbackPeriod = trainOpts.callbackPeriod;\n    this.on('finish', this.finishStreamIteration.bind(this));\n    this.callback = trainOpts.callback;\n  }\n\n  endInputs(): void {\n    this.write(false);\n  }\n\n  _write(\n    chunk: Array<Parameters<Network['addFormat']>[0]>,\n    enc: BufferEncoding,\n    next: (error?: Error | null) => void\n  ): void {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.neuralNetwork.addFormat(chunk);\n\n      if (this.firstDatum === undefined) {\n        this.firstDatum = chunk;\n      }\n\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData([chunk]);\n    const error = this.neuralNetwork.trainPattern(data[0], true) as number;\n\n    if (error !== null) {\n      this.sum += error;\n    }\n\n    // tell the Readable Stream that we are ready for more data\n    next();\n  }\n\n  finishStreamIteration(): void {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      console.warn(\n        \"This iteration's data length was different from the first!\"\n      );\n    }\n\n    if (!this.dataFormatDetermined && this.firstDatum !== undefined) {\n      const data = this.neuralNetwork.formatData([this.firstDatum]);\n      this.neuralNetwork.verifyIsInitialized(data);\n      this.dataFormatDetermined = true;\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && this.i % this.logPeriod === 0) {\n      if (typeof this.log === 'function') {\n        this.log({\n          iterations: this.i,\n          error: error,\n        });\n      } else {\n        console.info(`iterations: ${this.i}, training error: ${error}`);\n      }\n    }\n    if (this.callback && this.i % this.callbackPeriod === 0) {\n      this.callback({\n        error,\n        iterations: this.i,\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        return this.floodCallback();\n      }\n    } else {\n      // done training\n      if (typeof this.doneTrainingCallback === 'function') {\n        return this.doneTrainingCallback({\n          error,\n          iterations: this.i,\n        });\n      }\n    }\n  }\n}\n","import { FeedForward, IFeedForwardJSON } from '../feed-forward';\nimport { recurrentZeros } from '../layer/recurrent-zeros';\nimport { Recurrent } from '../recurrent';\nimport { IRNNJSON, RNN } from '../recurrent/rnn';\nimport { INeuralNetworkJSON, NeuralNetwork } from '../neural-network';\nimport { GRU } from '../recurrent/gru';\nimport { LSTM } from '../recurrent/lstm';\nimport { NeuralNetworkGPU } from '../neural-network-gpu';\nimport { IRNNTimeStepJSON, RNNTimeStep } from '../recurrent/rnn-time-step';\nimport { LSTMTimeStep } from '../recurrent/lstm-time-step';\nimport { GRUTimeStep } from '../recurrent/gru-time-step';\nimport { ILayer } from '../layer';\n\ninterface LineDrawInfo {\n  className: string;\n  color: string;\n  width: number;\n}\n\ninterface NodeDrawInfo {\n  className: string;\n  color: string;\n}\n\ninterface BaseDrawArgs {\n  pixelX: number;\n  pixelY: number;\n  radius: number;\n  row: number;\n  column: number;\n}\n\ninterface InputDrawArgs extends BaseDrawArgs {\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function drawInput({\n  pixelX,\n  pixelY,\n  radius,\n  inputs,\n  row,\n  line,\n  fontSize,\n  fontClassName,\n}: InputDrawArgs): string {\n  let svg = `<rect\n              x=\"${pixelX / 2 - radius}\"\n              y=\"${pixelY / 2 + row * pixelY - radius}\"\n              width=\"${2 * radius}\"\n              height=\"${2 * radius}\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              fill=\"${inputs.color}\"\n              class=\"${inputs.className}\" />\n            <line\n              x1=\"${pixelX / 4}\"\n              y1=\"${pixelY / 2 + row * pixelY}\"\n              x2=\"${pixelX / 2 - radius}\"\n              y2=\"${pixelY / 2 + row * pixelY}\"\n              style=\"stroke:${line.color};stroke-width:${line.width}\"\n              class=\"${line.className}\" />`;\n  if (inputs.labels) {\n    svg += `<text\n              x=\"${pixelX / 8}\"\n              y=\"${pixelY / 2 + row * pixelY - 5}\"\n              fill=\"black\"\n              font-size=\"${fontSize}\"\n              class=\"${fontClassName}\">${inputs.labels[row]}</text>`;\n  }\n  return svg;\n}\n\nexport interface NeuronDrawArgs extends BaseDrawArgs {\n  column: number;\n  hidden: NodeDrawInfo;\n}\n\nexport function drawNeuron({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  hidden,\n}: NeuronDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${hidden.color}\"\n            class=\"${hidden.className}\" />`;\n}\n\nexport interface OutputDrawArgs extends BaseDrawArgs {\n  column: number;\n  line: LineDrawInfo;\n  outputs: NodeDrawInfo;\n}\n\nexport function drawOutput({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  line,\n  outputs,\n  radius,\n}: OutputDrawArgs): string {\n  return `<circle\n            cx=\"${pixelX / 2 + column * pixelX}\"\n            cy=\"${pixelY / 2 + row * pixelY}\"\n            r=\"${radius}\"\n            stroke=\"black\"\n            stroke-width=\"1\"\n            fill=\"${outputs.color}\"\n            class=\"${outputs.className}\" />\n          <line\n            x1=\"${pixelX / 2 + column * pixelX + radius}\"\n            y1=\"${pixelY / 2 + row * pixelY}\"\n            x2=\"${pixelX / 2 + column * pixelX + pixelX / 4}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface BackwardConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  lineY: number;\n  previousConnectionIndex: number;\n  line: LineDrawInfo;\n}\n\nexport function drawBackwardConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  lineY,\n  line,\n  previousConnectionIndex,\n}: BackwardConnectionsDrawArgs): string {\n  return `<line\n            x1=\"${pixelX / 2 + (column - 1) * pixelX + radius}\"\n            y1=\"${lineY / 2 + previousConnectionIndex * lineY}\"\n            x2=\"${pixelX / 2 + column * pixelX - radius}\"\n            y2=\"${pixelY / 2 + row * pixelY}\"\n            style=\"stroke:${line.color};stroke-width:${line.width}\"\n            class=\"${line.className}\" />`;\n}\n\nexport interface NeuralNetworkDrawOptions {\n  sizes: number[];\n  height: number;\n  width: number;\n  radius: number;\n  line: LineDrawInfo;\n  inputs: NodeDrawInfo & { labels?: string[] | null };\n  hidden: NodeDrawInfo;\n  outputs: NodeDrawInfo;\n  fontSize: string;\n  fontClassName: string;\n}\n\nexport function neuralNetworkToInnerSVG(\n  options: NeuralNetworkDrawOptions\n): string {\n  const { sizes, height, width } = options;\n  let svg = '';\n  const pixelX = width / sizes.length;\n  for (let column = 0; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      if (column === 0) {\n        svg += drawInput({ pixelX, pixelY, row, column, ...options });\n      } else {\n        if (column === sizes.length - 1) {\n          svg += drawOutput({ pixelX, pixelY, row, column, ...options });\n        } else {\n          svg += drawNeuron({ pixelX, pixelY, row, column, ...options });\n        }\n        const previousSize = sizes[column - 1];\n        const lineY = height / previousSize;\n        for (\n          let previousConnectionIndex = 0;\n          previousConnectionIndex < previousSize;\n          previousConnectionIndex++\n        ) {\n          svg += drawBackwardConnections({\n            pixelX,\n            pixelY,\n            row,\n            column,\n            lineY,\n            previousConnectionIndex,\n            ...options,\n          });\n        }\n      }\n    }\n  }\n  return svg;\n}\n\nexport interface RecurrentConnectionsDrawArgs extends BaseDrawArgs {\n  column: number;\n  recurrentLine: LineDrawInfo;\n}\n\nexport function drawRecurrentConnections({\n  pixelX,\n  pixelY,\n  row,\n  column,\n  radius,\n  recurrentLine,\n}: RecurrentConnectionsDrawArgs): string {\n  const moveX = pixelX / 2 + column * pixelX + radius + 1;\n  const moveY = pixelY / 2 + row * pixelY;\n  const x = moveX - radius * 2 - 2;\n  const y = moveY;\n  const x1 = x + 100;\n  const y1 = y + 50;\n  const x2 = moveX - 100;\n  const y2 = moveY + 50;\n  return `<path\n              d=\"M ${moveX} ${moveY} C ${x1} ${y1}, ${x2} ${y2}, ${x} ${y}\"\n              stroke=\"${recurrentLine.color}\"\n              stroke-width=\"${recurrentLine.width}\"\n              fill=\"transparent\"\n              stroke-linecap=\"round\"\n              marker-end=\"url(#arrow)\"\n              class=\"${recurrentLine.className}\" />`;\n}\n\nexport interface RecurrentNeuralNetworkDrawOptions\n  extends NeuralNetworkDrawOptions {\n  recurrentLine: LineDrawInfo;\n}\n\nexport function rnnToInnerSVG(\n  options: RecurrentNeuralNetworkDrawOptions\n): string {\n  const { width, height, recurrentLine, sizes, radius } = options;\n  const pixelX = width / sizes.length;\n  let svg = `<defs>\n              <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M0,0 L0,6 L9,3 z\" fill=\"${recurrentLine.color}\" />\n              </marker>\n            </defs>`;\n  svg += neuralNetworkToInnerSVG(options);\n  for (let column = 1; column < sizes.length; column++) {\n    const size = sizes[column];\n    const pixelY = height / size;\n    for (let row = 0; row < size; row++) {\n      svg += drawRecurrentConnections({\n        pixelX,\n        pixelY,\n        row,\n        column,\n        radius,\n        recurrentLine,\n      });\n    }\n  }\n  return svg;\n}\n\nexport function getFeedForwardLayers(network: FeedForward): ISimpleNet {\n  const { options } = network;\n  if (!options) {\n    throw new Error('options not defined');\n  }\n  if (!options.inputLayer) {\n    throw new Error('options.inputLater not defined');\n  }\n  if (!options.hiddenLayers) {\n    throw new Error('options.hiddenLayers not defined');\n  }\n  if (options.hiddenLayers.length < 1) {\n    throw new Error('options.hiddenLayers is empty');\n  }\n  if (!options.outputLayer) {\n    throw new Error('options.outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  const hiddenLayers = [];\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(options.hiddenLayers[i](hiddenLayers[i - 1], i));\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    hiddenLayers.length\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function getRecurrentLayers(network: Recurrent): ISimpleNet {\n  const hiddenLayers: ILayer[] = [];\n  const { options } = network;\n  if (!options.inputLayer) {\n    throw new Error('inputLayer not defined');\n  }\n  if (!options.outputLayer) {\n    throw new Error('outputLayer not defined');\n  }\n  const inputLayer = options.inputLayer();\n  hiddenLayers.push(options.hiddenLayers[0](inputLayer, recurrentZeros(), 0));\n  for (let i = 1; i < options.hiddenLayers.length; i++) {\n    hiddenLayers.push(\n      options.hiddenLayers[i](hiddenLayers[i - 1], recurrentZeros(), i)\n    );\n  }\n  const outputLayer = options.outputLayer(\n    hiddenLayers[hiddenLayers.length - 1],\n    -1\n  );\n  return {\n    inputSize: inputLayer.height,\n    hiddenLayers: hiddenLayers.map((hiddenLayer: ILayer) => hiddenLayer.height),\n    outputSize: outputLayer.height,\n  };\n}\n\nexport function wrapOuterSVG(\n  svgBody: string,\n  width: number,\n  height: number\n): string {\n  // language=html\n  return `<svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            version=\"1.1\"\n            width=\"${width}\"\n            height=\"${height}\">${svgBody}</svg>`;\n}\n\nexport function getNeuralNetworkJSONSizes(json: INeuralNetworkJSON): number[] {\n  return json.sizes;\n}\n\nexport function getNeuralNetworkSizes(\n  net: NeuralNetwork<any, any> | NeuralNetworkGPU<any, any>\n): number[] {\n  const { options, sizes } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  if (!sizes) {\n    if (typeof inputSize === 'number' && inputSize < 1) {\n      throw new Error('inputSize not set');\n    }\n    if (typeof outputSize === 'number' && outputSize < 1) {\n      throw new Error('outputSize not set');\n    }\n    if (hiddenLayers?.some((v) => v < 1)) {\n      throw new Error('hiddenLayers not set');\n    }\n  }\n  return typeof inputSize === 'number' &&\n    Array.isArray(hiddenLayers) &&\n    typeof outputSize === 'number'\n    ? [inputSize].concat(hiddenLayers).concat([outputSize])\n    : sizes;\n}\n\nexport function getRNNSizes(\n  net: RNN | LSTM | GRU | RNNTimeStep | LSTMTimeStep | GRUTimeStep | IRNNJSON\n): number[] {\n  const { options } = net;\n  const { inputSize, outputSize, hiddenLayers } = options;\n  return [inputSize].concat(hiddenLayers).concat([outputSize]);\n}\n\nexport function defaultOptions(): RecurrentNeuralNetworkDrawOptions {\n  return {\n    line: {\n      width: 0.5,\n      color: 'black',\n      className: 'connection',\n    },\n    recurrentLine: {\n      width: 1,\n      color: 'red',\n      className: 'recurrence',\n    },\n    inputs: {\n      color: 'rgba(0, 128, 0, 0.5)',\n      labels: null,\n      className: 'input',\n    },\n    outputs: {\n      color: 'rgba(100, 149, 237, 0.5)',\n      className: 'output',\n    },\n    hidden: {\n      color: 'rgba(255, 127, 80, 0.5)',\n      className: 'hidden-neuron',\n    },\n    fontSize: '14px',\n    fontClassName: 'label',\n    radius: 8,\n    width: 400,\n    height: 250,\n    sizes: [],\n  };\n}\n\nexport interface ISimpleNet {\n  inputSize: number;\n  hiddenLayers: number[];\n  outputSize: number;\n}\nexport interface ISizes {\n  sizes: number[];\n}\n\nexport function toSVG<\n  T extends\n    | ISimpleNet\n    | ISizes\n    | Recurrent\n    | FeedForward\n    | IFeedForwardJSON\n    | RNNTimeStep\n    | IRNNTimeStepJSON\n    | LSTMTimeStep\n    | GRUTimeStep\n    | RNN\n    | IRNNJSON\n    | GRU\n    | LSTM\n    | NeuralNetwork<any, any>\n    | INeuralNetworkJSON\n    | NeuralNetworkGPU<any, any>\n>(\n  net: T,\n  options?:\n    | Partial<RecurrentNeuralNetworkDrawOptions>\n    | Partial<NeuralNetworkDrawOptions>\n): string {\n  const mergedOptions = { ...defaultOptions(), ...options };\n  const { width, height, inputs } = mergedOptions;\n\n  // Get network size array for NeuralNetwork or NeuralNetworkGPU\n  let sizes: number[] = [];\n  if (net instanceof NeuralNetwork || net instanceof NeuralNetworkGPU) {\n    sizes = getNeuralNetworkSizes(net);\n  }\n  // get network size for Recurrent\n  else if (net instanceof Recurrent) {\n    const { inputSize, hiddenLayers, outputSize } = getRecurrentLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // get network size for FeedForward\n  else if (net instanceof FeedForward) {\n    const { inputSize, hiddenLayers, outputSize } = getFeedForwardLayers(net);\n    sizes = [inputSize].concat(hiddenLayers).concat([outputSize]);\n  }\n  // handle json, recurrent first\n  else if (\n    net instanceof RNN ||\n    net instanceof LSTM ||\n    net instanceof GRU ||\n    net instanceof RNNTimeStep ||\n    net instanceof LSTMTimeStep ||\n    net instanceof GRUTimeStep\n  ) {\n    return wrapOuterSVG(\n      rnnToInnerSVG({\n        ...mergedOptions,\n        sizes: checkSizes(\n          getRNNSizes(\n            (net as unknown) as\n              | RNN\n              | LSTM\n              | GRU\n              | RNNTimeStep\n              | LSTMTimeStep\n              | GRUTimeStep\n          ),\n          inputs.labels\n        ),\n      }),\n      width,\n      height\n    );\n  }\n  // handle json, NeuralNetwork\n  else if (net.hasOwnProperty('type')) {\n    switch ((net as INeuralNetworkJSON).type) {\n      case 'NeuralNetwork':\n      case 'NeuralNetworkGPU':\n        return wrapOuterSVG(\n          neuralNetworkToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(\n              getNeuralNetworkJSONSizes(net as INeuralNetworkJSON),\n              inputs.labels\n            ),\n          }),\n          width,\n          height\n        );\n      case 'RNN':\n      case 'GRU':\n      case 'LSTM':\n      case 'RNNTimeStep':\n      case 'GRUTimeStep':\n      case 'LSTMTimeStep':\n        return wrapOuterSVG(\n          rnnToInnerSVG({\n            ...mergedOptions,\n            sizes: checkSizes(getRNNSizes(net as IRNNJSON), inputs.labels),\n          }),\n          width,\n          height\n        );\n      default:\n        throw new Error('unrecognized network');\n    }\n  } else if (\n    net.hasOwnProperty('inputSize') &&\n    net.hasOwnProperty('hiddenLayers') &&\n    net.hasOwnProperty('outputSize')\n  ) {\n    const { inputSize, hiddenLayers, outputSize } = net as ISimpleNet;\n    sizes = [inputSize, ...hiddenLayers, outputSize];\n  } else if (net.hasOwnProperty('sizes')) {\n    sizes = (net as ISizes).sizes;\n  } else {\n    throw new Error('unrecognized network');\n  }\n  return wrapOuterSVG(\n    neuralNetworkToInnerSVG({\n      ...mergedOptions,\n      sizes: checkSizes(sizes, inputs.labels),\n    }),\n    width,\n    height\n  );\n}\n\nexport function checkSizes(\n  sizes: number[],\n  labels: string[] | null | undefined\n): number[] {\n  if (!sizes) {\n    throw new Error('sizes not set');\n  }\n  if (sizes.some((size: number) => size < 1)) {\n    throw new Error('sizes not set correctly');\n  }\n  if (labels && labels.length !== sizes[0]) {\n    throw new Error('not enough labels for inputs');\n  }\n  return sizes;\n}\n","import * as activation from './activation';\nimport CrossValidate from './cross-validate';\nimport { FeedForward } from './feed-forward';\nimport * as layer from './layer';\nimport { layerTypes } from './layer';\nimport { likely } from './likely';\nimport { lookup } from './lookup';\nimport { NeuralNetwork } from './neural-network';\nimport { NeuralNetworkGPU } from './neural-network-gpu';\nimport * as praxis from './praxis';\nimport { Recurrent } from './recurrent';\nimport { GRU } from './recurrent/gru';\nimport { GRUTimeStep } from './recurrent/gru-time-step';\nimport { LSTM } from './recurrent/lstm';\nimport { LSTMTimeStep } from './recurrent/lstm-time-step';\nimport { RNN } from './recurrent/rnn';\nimport { RNNTimeStep } from './recurrent/rnn-time-step';\nimport { TrainStream } from './train-stream';\nimport { DataFormatter } from './utilities/data-formatter';\nimport { max } from './utilities/max';\nimport { mse } from './utilities/mse';\nimport { ones, ones2D } from './utilities/ones';\nimport * as random from './utilities/random';\nimport { randomWeight } from './utilities/random-weight';\nimport { randos } from './utilities/randos';\nimport { range } from './utilities/range';\nimport { toArray } from './utilities/to-array';\nimport { toSVG } from './utilities/to-svg';\nimport { zeros } from './utilities/zeros';\n\nexport const brain = {\n  activation,\n  CrossValidate,\n  likely,\n  layer,\n  layerTypes,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    ones2D,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n    toSVG,\n  },\n};\n\ndeclare global {\n  interface Window {\n    brain: typeof brain;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.brain = brain;\n}\n\n// if (typeof module !== 'undefined') {\n//   module.exports = brain;\n// }\n\nexport default brain;\n","import { INeuralNetworkData, NeuralNetwork } from './neural-network';\n\nexport function likely<\n  InputType extends INeuralNetworkData,\n  OutputType extends INeuralNetworkData\n>(\n  input: InputType,\n  net: NeuralNetwork<InputType, OutputType>\n): OutputType | null {\n  if (!net) {\n    throw new TypeError(\n      `Required parameter 'net' is of type ${typeof net}. Must be of type 'brain.NeuralNetwork'`\n    );\n  }\n\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.entries(output).forEach(([key, value]) => {\n    if (typeof value !== 'undefined' && value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nexport function range(start: number, end: number): number[] {\n  const result: number[] = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","export function toArray(\n  values: number[] | Float32Array | { [key: string]: number }\n): Float32Array {\n  if (Array.isArray(values)) {\n    return Float32Array.from(values);\n  }\n\n  return Float32Array.from(Object.values(values));\n}\n"],"names":["activate","weight","Math","max","measure","delta","value","exp","error","tanh","CrossValidate","[object Object]","Classifier","options","this","avgs","iterations","testTime","trainTime","stats","total","testSize","trainSize","sets","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","network","toJSON","array","i","length","j","floor","random","temp","data","k","Error","shuffleArray","size","binaryStats","truePos","trueNeg","falsePos","falseNeg","precision","recall","accuracy","results","isBinary","dclone","slice","splice","result","testPartition","hasOwnProperty","Object","assign","isBinaryStats","isBinaryPartitionResults","push","json","fromJSON","crossValidateJson","winningJSON","reduce","prev","cur","instance","undefined","module","r","e","n","t","o","f","require","u","a","code","p","exports","call","1","global","factory","self","acorn","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","5module","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","toString","has","obj","propName","isArray","Array","wordsRegexp","words","replace","Position","line","col","column","offset","SourceLocation","start","end","sourceFile","getLineInfo","input","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","functionFlags","async","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","label$1","statementStart","indexOf","createNewLexicalScope","update","isForIn","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","FUNC_NULLABLE_ID","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","superClass","constructorAllowsSuper","this$1","method","tryContextual","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","parseSubscripts","base","noCalls","maybeAsyncArrow","parseSubscript","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","errorPos","bigint","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","unicodeBinaryProperties","9","10","11","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","unicodeScriptValues","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$9","codePointToString$1","ignoreEscapeSequenceInKeyword","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","readInt","radix","Infinity","BigInt","startsWithDot","octal","str$1","val$1","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","version","tokTypes","keywordTypes","tokContexts","defineProperty","2","glWiretap","gl","contextName","throwGetError","useTrackablePrimitives","readPixelsFile","recording","variables","onReadPixels","onUnrecognizedArgumentLookup","proxy","Proxy","listen","contextVariables","entityNames","readPixelsVariableName","imageCount","indent","addComment","checkThrowError","insertVariable","setIndent","getContextVariableName","getError","variableName","extension","getExtension","tappedExtension","glExtensionWiretap","getEntity","targetVariableName","getVariableName","constructor","argumentAsStrings","join","writePPM","readPixels","apply","argumentsToString","addVariable","drawBuffers","methodCallToString","trackablePrimitive","spaces","repeat","width","height","sourceVariable","imageVariable","args","extensionEntityNames","getExtensionEntity","drawBuffersWEBGL","from","map","arg","argumentToString","hasLines","hasSingleQuotes","hasDoubleQuotes","JSON","stringify","instantiationString","window","4","setupArguments","newArguments","toArray","mock1D","row","Float32Array","output","x","thread","y","z","_fn","mock2D","matrix","mock2DGraphical","mock3D","cube","apiDecorate","kernel","setOutput","setupOutput","graphical","setupGraphical","setConstants","constants","setGraphical","setCanvas","canvas","setContext","destroy","validateSettings","Promise","resolve","reject","getPixels","flip","flipPixels","_imageData","color","g","b","_colorData","mockMethod","methods","createImageData","Uint8ClampedArray","gpuMock","fn","settings","pixels","halfHeight","bytesPerRow","topOffset","bottomOffset","subarray","copyWithin","utils","alias","fnString","Function","getArgumentNamesFromString","getFunctionBodyFromString","./utils","FunctionNode","CPUFunctionNode","ast","retArr","isRootKernel","argumentNames","argumentName","astGeneric","returnType","getType","leadingReturnStatement","followingReturnStatement","isSubKernel","isNaN","astErrorOutput","idtNode","forNode","initArr","testArr","updateArr","bodyArr","isSafe","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","getDeclaration","assignable","bNode","isState","varDecNode","info","valueType","ifNode","tNode","mNode","signature","xProperty","yProperty","zProperty","origin","getMemberExpressionDetails","markupName","isInput","constant","constantTypes","argumentSizes","dynamicArguments","functionName","astMemberExpressionUnroll","calledFunctions","isAstMathFunction","onFunctionCall","targetTypes","lookupFunctionArgumentTypes","argumentType","triggerImplyArgumentType","arrNode","arrLen","../function-node","7","constantsToString","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","colorFn","flattenFunctionToString","thisLookup","propertyName","findDependency","getPixelsFn","constantKeys","argumentTypes","flattenedImageTo3DArray","_imageTo3DArray","doNotDefine","flattenedImageTo2DArray","_mediaTo2DArray","_kernelString","../../utils","8","Kernel","FunctionBuilder","CPUKernel","features","freeze","kernelMap","isIntegerDivisionAccurate","isSupported","mode","combinedKernel","super","mergeSettings","_prependedString","translatedSources","document","createElement","OffscreenCanvas","getContext","argType","getVariableType","strictIntegers","getDimensions","checkOutput","subKernels","functionBuilder","fromKernel","getPrototypes","getKernelResultType","built","setupConstants","translateSource","kernelString","getKernelString","debug","console","log","run","bind","buildSignature","kernelThreadString","filter","shift","_getLoopMaxString","injectedNative","_resultKernelHeader","_processConstants","_earlyThrows","_processArguments","_graphicalKernelBody","_resultKernelBody","loopMaxIterations","immutable","pipeline","arrayArguments","checks","checkSubKernels","_mapSubKernels","subKernel","media","videoWidth","videoHeight","ctx","drawImage","pixelsData","getImageData","imageArray","pixel","images","imagesArray","_mutableKernel1DResults","_mutableKernel2DResults","_mutableKernel3DResults","_resultMutableKernel1DLoop","_resultImmutableKernel1DLoop","_kernelOutput","_resultMutableKernel2DLoop","_resultImmutableKernel2DLoop","_resultMutableKernel3DLoop","_resultImmutableKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","removeCanvasReference","functionNodes","../function-builder","../kernel","./function-node","./kernel-string","extraNodeOptions","kernelArguments","kernelConstants","argumentBitRatios","constantBitRatios","nativeFunctions","optimizeFloatMemory","dynamicOutput","kernelConstant","needsArgumentType","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentName","argumentIndex","lookupFunctionArgumentBitRatio","triggerImplyArgumentBitRatio","calleeFunctionName","assignArgumentBitRatio","trackFunctionCall","onNestedFunction","nestedFunction","nodeOptions","traceFunctionAST","addFunctionNode","rootNodeOptions","rootNode","subKernelNodes","functionMap","nativeFunctionNames","lookupChain","functionNodeDependencies","functionCalls","nativeFunction","functionNode","retList","nativeFunctionIndex","dependantNativeFunctionName","functionIndex","traceFunctionCalls","dependantFunctionName","getPrototypesFromFunctionNames","reverse","functionList","ret","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getJsAST","Boolean","_getNativeFunction","bitRatio","fnNode","calleeNode","calleeBitRatio","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","getFunctionNameFromString","identifiers","contexts","states","strictTypingChecking","fixIntegerDivisionAccuracy","literalTypes","validate","_string","_internalVariableNames","isFunctionString","firstExpression","inParser","functionAST","inForLoopInit","inForLoopTest","dependencies","getDependencies","realType","isSafeDependencies","identifier","typeLookupMap","constantName","trim","literalKey","astKey","Number","isInteger","inferArgumentTypesIfNeeded","getVariableSignature","rightType","lastType","isAstVariable","getCheckVariableType","findIdentifierOrigin","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","mathProperties","mathFunctions","every","dependency","isNotSafe","details","returnRawValue","unshift","signatureString","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","getAstString","splitLines","lineBefore","isChildFunction","astFunction","esNode","eNode","brNode","crNode","iVarDecNode","sNode","sequenceResult","expressionResult","uNode","checkAndUpconvertBitwiseUnary","logNode","variableSignature","astToFind","stack","atNode","separator","Float","Integer","Array(2)","Array(3)","Array(4)","Matrix(2)","Matrix(3)","Matrix(4)","Array2D","Array3D","Input","HTMLCanvas","HTMLImage","HTMLVideo","HTMLImageArray","NumberTexture","MemoryOptimizedNumberTexture","Array1D(2)","Array1D(3)","Array1D(4)","Array2D(2)","Array2D(3)","Array2D(4)","Array3D(2)","Array3D(3)","Array3D(4)","ArrayTexture(1)","ArrayTexture(2)","ArrayTexture(3)","ArrayTexture(4)","../utils","./function-tracer","trackIdentifiers","memberExpression","runningContexts","functionContexts","returnStatements","trackedIdentifiers","newFunctionContext","scan","currentFunctionContext","currentContext","newContext","@contextType","functionContext","previousRunningContext","useFunctionContext","suggestedType","normalizeDeclarations","hasState","testIdentifiers","getIdentifiers","12","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","build","postResult","targetName","subKernelsResultVariableSetup","subKernelsResultIndex","getRenderString","findKernelValue","tactic","checkContext","forEach","kernelArgument","uploadValue","imageIndex","texture","flattenTo","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","renderOutput","renderTexture","formatValues","varName","renderKernels","getStringValueHandler","framebufferName","framebuffer","textureName","getToArrayString","mappedTextures","subKernelResult","subKernelTextureName","rendered","getGetPixelsString","constantsUpload","readBackValue","kernelResult","isDeclaration","kernelValues","values","uploadedValues","HTMLImageElement","kernelValue","variableIndex","variable","gl-wiretap","13","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","testContext","testCanvas","kernelFunction","v1","v2","round","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isSpeedTacticSupported","getIsSpeedTacticSupported","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","maxTextureSize","getMaxTextureSize","lowIntPrecision","getShaderPrecisionFormat","FRAGMENT_SHADER","LOW_INT","lowFloatPrecision","LOW_FLOAT","mediumIntPrecision","MEDIUM_INT","mediumFloatPrecision","MEDIUM_FLOAT","highIntPrecision","HIGH_INT","highFloatPrecision","HIGH_FLOAT","getVariablePrecisionString","fix","warnDeprecated","floatTextures","isStartingVariableName","isVariableChar","char","nextChar","typeMap","lastKernel","texSize","threadDim","w","h","ceil","RGBA","FLOAT","bytes","Uint8Array","UNSIGNED_BYTE","buffer","splitArray","transferValues","TextureConstructor","renderRawOutput","translatedSource","compiledFragmentShader","compiledVertexShader","switchingKernels","_textureSwitched","_mappedTextureSwitched","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderKernelsToTextures","requestFallback","renderKernelsToArrays","renderValues","erect3DPackedFloat","erect2DPackedFloat","erectPackedFloat","readFloatPixelsToFloat32Array","erectMemoryOptimized3DFloat","erectMemoryOptimized2DFloat","erectMemoryOptimizedFloat","erect3DArray2","erect2DArray2","erectArray2","erect3DArray3","erect2DArray3","erectArray3","erect3DArray4","erect2DArray4","erectArray4","erect3DFloat","erect2DFloat","erectFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","linesToString","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","clone","existingValue","newOutput","toKernelOutput","newThreadDim","newTexSize","getKernelTextureSize","oldTexSize","oldPrecision","newPrecision","warn","switchKernels","needed","bindFramebuffer","FRAMEBUFFER","updateMaxTexSize","viewport","maxTexSize","delete","_setupOutputTexture","_setupSubOutputTextures","reason","textureSize","isInt","low","medium","high","requiredSize","log2","rangeMax","prevArg","_refs","mappedTexture","previousKernel","int","float","vec2","vec3","vec4","./texture/array-2-float","./texture/array-2-float-2d","./texture/array-2-float-3d","./texture/array-3-float","./texture/array-3-float-2d","./texture/array-3-float-3d","./texture/array-4-float","./texture/array-4-float-2d","./texture/array-4-float-3d","./texture/float","./texture/float-2d","./texture/float-3d","./texture/graphical","./texture/memory-optimized","./texture/memory-optimized-2d","./texture/memory-optimized-3d","./texture/unsigned","./texture/unsigned-2d","./texture/unsigned-3d","14","../../../utils","./float","15","16","17","18","19","20","21","22","23","24","25","GLTexture","textureType","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","_deleted","./index","26","./unsigned","27","Texture","newTexture","selectTexture","target","createTexture","texImage2D","internalFormat","textureFormat","copyTexSubImage2D","bindTexture","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","deleteTexture","_framebuffer","getRawValueFramebuffer","activeTexture","TEXTURE15","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","../../../texture","28","29","30","31","32","33","34","WebGLKernel","testExtensions","HeadlessGLKernel","setupFeatureChecks","preserveDrawingBuffer","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","WEBGL_color_buffer_float","getFeatures","getParameter","RENDERER","MAX_DRAW_BUFFERS_WEBGL","MAX_TEXTURE_SIZE","extensions","fallbackRequested","resize","../gl/kernel-string","../web-gl/kernel","35","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","forceUploadEachRun","36","useLegacyEncoder","onRequestFallback","forceUploadKernelConstants","gpu","addFunction","addNativeFunction","initCanvas","initContext","initPlugins","functionToIGPUFunction","splitArgumentTypes","nativeFunctionArguments","nativeFunctionReturnType","Int32Array","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","argumentsTypes","pluginNames","plugin","Constructor","getSignature","getArgumentTypes","sourceString","argumentTypesObject","../input","37","fragmentShader","E","38","WebGLFunctionNode","consequentType","alternateType","sanitizeName","castLiteralToFloat","castValueToInteger","castLiteralToInteger","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","bitwiseResult","checkAndUpconvertBitwiseOperators","foundOperator","%","**","&","|","^","<<",">>",">>>","~","initString","initNeedsSemiColon","declarationSets","declarationSet","actualType","markupType","declarationResult","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","cleanName","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","subNode","LiteralInteger","===","!==","39","WebGLKernelValueBoolean","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","WebGLKernelValueDynamicHTMLImage","WebGLKernelValueHTMLVideo","WebGLKernelValueDynamicHTMLVideo","WebGLKernelValueSingleInput","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","WebGLKernelValueSingleArray3","WebGLKernelValueSingleArray4","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","lookupKernelValueType","./kernel-value/boolean","./kernel-value/dynamic-html-image","./kernel-value/dynamic-html-video","./kernel-value/dynamic-memory-optimized-number-texture","./kernel-value/dynamic-number-texture","./kernel-value/dynamic-single-array","./kernel-value/dynamic-single-array1d-i","./kernel-value/dynamic-single-array2d-i","./kernel-value/dynamic-single-array3d-i","./kernel-value/dynamic-single-input","./kernel-value/dynamic-unsigned-array","./kernel-value/dynamic-unsigned-input","./kernel-value/float","./kernel-value/html-image","./kernel-value/html-video","./kernel-value/integer","./kernel-value/memory-optimized-number-texture","./kernel-value/number-texture","./kernel-value/single-array","./kernel-value/single-array1d-i","./kernel-value/single-array2","./kernel-value/single-array2d-i","./kernel-value/single-array3","./kernel-value/single-array3d-i","./kernel-value/single-array4","./kernel-value/single-input","./kernel-value/unsigned-array","./kernel-value/unsigned-input","40","WebGLKernelValue","WebGLKernelArray","requestTexture","setupTexture","defineTexture","onRequestTexture","onRequestIndex","dimensionsId","sizeId","../../../input","41","setUniform1i","42","checkSize","dimensions","setUniform3iv","setUniform2iv","updateValue","./html-image","43","./dynamic-html-image","44","inputTexture","./memory-optimized-number-texture","45","./number-texture","46","getMemoryOptimizedFloatTextureSize","uploadArrayLength","./single-array","47","setShape","./single-array1d-i","48","./single-array2d-i","49","./single-array3d-i","50","./single-input","51","getMemoryOptimizedPackedTextureSize","Type","getTransferArrayType","preUploadValue","./unsigned-array","52","./unsigned-input","53","setUniform1f","54","inputImage","initialValueConstructor","pixelStorei","UNPACK_FLIP_Y_WEBGL","./array","55","56","Uint32Array","Float64Array","../../kernel-value","57","58","sameError","updateTextureArgumentRefs","59","60","61","valueDimensions","62","setUniform2fv","63","64","setUniform3fv","65","66","setUniform4fv","67","68","TranserArrayType","69","70","mrud","vertexShader","canvases","maxTexSizes","isContextMatch","WebGLRenderingContext","endianness","systemEndianness","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","alpha","depth","antialias","pluginsToUse","some","pluginName","checkTextureSize","canvasIndex","needsArgumentTypes","textureIndexes","TEXTURE0","setup","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","createFramebuffer","rawValueFramebuffers","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","getPrototypeString","setupReturnTypes","getSubKernelResultType","scissor","setUniform2f","onBeforeRun","bindRenderbuffer","RENDERBUFFER","_replaceOutputTexture","drawArrays","TRIANGLE_STRIP","_replaceSubOutputTextures","getInternalFormat","beforeMutate","format","getTextureFormat","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4fv","uniform4iv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","INJECTED_NATIVE","_getInjectedNative","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","FLOAT_TACTIC_DECLARATION","getFloatTacticDeclaration","INT_TACTIC_DECLARATION","getIntTacticDeclaration","SAMPLER_2D_TACTIC_DECLARATION","getSampler2DTacticDeclaration","SAMPLER_2D_ARRAY_TACTIC_DECLARATION","getSampler2DArrayTacticDeclaration","getSource","getKernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","_getVertShaderArtifactMap","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","textureCacheIndex","idx","destroyExtensions","kernels","loseContext","../../plugins/math-random-uniformly-distributed","../gl/kernel","./fragment-shader","./kernel-value-maps","./vertex-shader","71","72","73","WebGL2FunctionNode","../web-gl/function-node","74","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHTMLImageArray","WebGL2KernelValueDynamicHTMLImageArray","WebGL2KernelValueHTMLVideo","WebGL2KernelValueDynamicHTMLVideo","WebGL2KernelValueSingleInput","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","./kernel-value/dynamic-html-image-array","./kernel-value/html-image-array","75","../../web-gl/kernel-value/boolean","76","variablePrecision","./html-image-array","77","../../web-gl/kernel-value/dynamic-html-image","78","79","../../web-gl/kernel-value/dynamic-memory-optimized-number-texture","80","../../web-gl/kernel-value/dynamic-number-texture","81","../../web-gl2/kernel-value/single-array","82","../../web-gl2/kernel-value/single-array1d-i","83","../../web-gl2/kernel-value/single-array2d-i","84","../../web-gl2/kernel-value/single-array3d-i","85","../../web-gl2/kernel-value/single-input","86","../../web-gl/kernel-value/dynamic-unsigned-array","87","../../web-gl/kernel-value/dynamic-unsigned-input","88","../../web-gl/kernel-value/float","89","TEXTURE_2D_ARRAY","texImage3D","xOffset","yOffset","imageDepth","texSubImage3D","../../web-gl/kernel-value/array","90","../../web-gl/kernel-value/html-image","91","92","../../web-gl/kernel-value/integer","93","../../web-gl/kernel-value/memory-optimized-number-texture","94","../../web-gl/kernel-value/number-texture","95","RGBA32F","../../web-gl/kernel-value/single-array","96","../../web-gl/kernel-value/single-array1d-i","97","../../web-gl/kernel-value/single-array2","98","../../web-gl/kernel-value/single-array2d-i","99","../../web-gl/kernel-value/single-array3","100","../../web-gl/kernel-value/single-array3d-i","101","../../web-gl/kernel-value/single-array4","102","../../web-gl/kernel-value/single-input","103","../../web-gl/kernel-value/unsigned-array","104","../../web-gl/kernel-value/unsigned-input","105","WebGL2Kernel","WebGL2RenderingContext","MAX_DRAW_BUFFERS","EXT_color_buffer_float","R32F","RED","RG32F","RG","REPEAT","texStorage2D","106","107","lib","GPU","bindTo","108","kernelRunShortcut","kernelOrder","kernelTypes","internalKernels","headlessgl","webgl2","webgl","isGPUSupported","isKernelMapSupported","isOffscreenCanvasSupported","Worker","importScripts","isWebGLSupported","isWebGL2Supported","isHeadlessGLSupported","isCanvasSupported","HTMLCanvasElement","isGPUHTMLImageArraySupported","isSinglePrecisionSupported","chooseKernel","ExternalKernel","isFunction","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","replaceKernel","reasons","_kernel","existingKernel","onActivate","newKernel","mergedSettings","argument2Type","createKernel","setPipeline","setTimeout","firstKernel","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","./backend/cpu/kernel","./backend/headless-gl/kernel","./backend/kernel","./backend/web-gl/kernel","./backend/web-gl2/kernel","./kernel-run-shortcut","gpu-mock.js","109","webGLKernelValueMaps","webGL2KernelValueMaps","mathRandom","./alias","./backend/cpu/function-node","./backend/function-builder","./backend/function-node","./backend/function-tracer","./backend/gl/kernel","./backend/web-gl/function-node","./backend/web-gl/kernel-value-maps","./backend/web-gl2/function-node","./backend/web-gl2/kernel-value-maps","./gpu","./input","./plugins/math-random-uniformly-distributed","./texture","110","111","resetSwitchingKernels","shortcut","accept","replacementKernel","bindKernelToShortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","112","functionReturnType","113","114","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","ArrayBuffer","funcObj","toLowerCase","funcStr","fnStr","isActiveClone","nodeName","texelCount","closestSquareDimensions","sqrt","roundTo","pad","dim","part","byteOffset","lines","props","getOwnPropertyNames","getPrototypeOf","oldName","newName","yResults","xStart","xEnd","zResults","xResults","xResultsMax","XResultsMax","flattened","functionDependencies","flatten","flat","foundSource","flattenedFunctionDependencies","functionDependency","normalizedDeclarations","declarationIndex","propertyIndex","subPropertyIndex","subProperty","elementIndex","splitHTMLImageToRGB","image","rKernel","gKernel","bKernel","aKernel","splitRGBAToCanvases","rgba","visualKernelR","visualKernelG","visualKernelB","visualKernelA","getMinifySafeName","dollarSign","doubleUnderscore","singleUnderscore","getSystemEndianness","gpuInstance","makeKernel","_gpuInstance","makeKernelMap","createKernelMap","release","possibleTexture","fill","mse2d","errors","sum","MeanSquaredError","calculate","addAbsolute","prevError","prevLayerErrors","abs","divide","mseSum","baseLayerDefaultSettings","weights","deltas","praxis","praxisOpts","BaseLayer","setupPraxis","title","initPraxis","isTraining","layer","predictKernel","compareKernel","inputs","targetValues","learningRate","oldWeights","toUntypedArray","zeros","zeros2D","zeros3D","Activation","inputLayer","Filter","filterCount","filterWidth","filterHeight","filters","filterDeltas","Internal","Modifier","Operator","inputLayer1","inputLayer2","compare1D","compare2D","Target","InternalModel","EntryPoint","Model","lookup","hashes","hash","memo","toHash","objects2D","table","valueIndex","objects","tableIndex","dataIndex","arrayLength","limit","shape","lastData","possibleNumber","BasePraxis","layerTemplate","defaultSettings","ArthurDeviationBiases","arthurDeviationBiases","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","momentum","weightsLayer","incomingLayer","deltaLayer","ArthurDeviationWeights","arthurDeviationWeights","getMomentum","decay","previousMomentum","clipByValue","previousMomenta","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","defaults","MomentumRootMeanSquaredPropagation","momenta","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","traverseLayersFrom","cb","flattenLayers","layers","checkSameSize","layer1","layer2","predict","inputWeights1","inputWeights2","Add","randomWeight","randomFloat","gaussRandom","returnV","vVal","mu","std","randos","randos2D","randos3D","Random","weights1","weights2","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","reuseKernels","inputLayer1Deltas","inputLayer2Deltas","newDeltas1","newDeltas2","multiply","predict2D","predict3D","compare3D","Sigmoid","sigmoid","getStride","stride","strideX","strideY","getPadding","padding","paddingX","paddingY","biases","startFilterX","startInputX","endFilterX","inputWidth","startFilterY","startInputY","endFilterY","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","bias","Convolution","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","setDropout","dropout","trainingPredict","probability","compare","dropouts","dropoutDefaults","Dropout","predictKernelMap","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","inputLayerDeltas","Negative","negative","inputLayerWeights1","inputLayerWeights2","MultiplyElement","multiplyElement","ones","ones2D","Ones","Tanh","Zeros","reshapeInput","predict1D","kernelInput","LeakyRelu","setSwitchY","setSwitchX","largestValue","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","Pool","RecurrentInput","recurrentInput","recurrentInputDeltas","recurrentInputWeights","RecurrentZeros","recurrentZeros","Relu","relu","Regression","getMaxValue2D","maxInput","getMaxValue3D","getSum2D","getSum3D","getExponentials","getExponentials3D","exponentials","exponentialsSum","indicator","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","SVM","Transpose","layerTypes","setupKernels","biasesLayer","sigmoidLayer","weightsPraxis","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","setDimensions","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","outputGateConnector","transition","layerFromJSON","jsonLayer","layer.hasOwnProperty","Layer","LookupTable","binaryThresh","praxis.momentumRootMeanSquaredPropagation","trainDefaults","errorThresh","logPeriod","callbackPeriod","errorCheckInterval","timeout","FeedForward","_updateTrainingOptions","callback","validations","_validateTrainingOptions","_setLogMethod","inputLayerIndex","outputLayerIndex","outputLayer","_inputLayer","_hiddenLayers","_outputLayer","hiddenLayers","_connectHiddenLayers","previousLayer","hiddenLayer","_connectOptionsLayers","_connectNewLayers","initializeLayers","_model","lastLayer","meanSquaredError","typeSafeInput","inputLookup","inputLookupLength","runInput","outputLookup","toObject","preparedData","status","endTime","_prepTraining","continueTicking","calculateError","_calculateTrainingError","trainPatters","_trainPatterns","_trainingTick","trainPatterns","formattedData","formatData","verifyIsInitialized","transferData","initialize","prevSum","_trainPattern","resultArray","logErrorRate","_calculateDeltas","adjustWeights","learn","tmp","inputDatumCheck","lookupTable","datumParam","outputDatumCheck","outputLookupLength","transferredData","transferInput","transferOutput","formattedDatum","jsonLayers","inputLayer1Index","inputLayer2Index","sizes","concat","getLayer","__assign","Thaw","items","_a","each","isStopped","tick","thawing","clearTimeout","thaws","delay","enumerable","stopAll","stop","makeReady","insert","addArray","insertArray","before","after","thaw","Block","count","arraysToFloat32Arrays","arrays","inputOutputArraysToFloat32Arrays","arrayToFloat32Arrays","inputOutputArrayToFloat32Arrays","arrayToFloat32Array","inputOutputObjectsToFloat32Arrays","inputTable","outputTable","inputLength","outputLength","objectToFloat32Arrays","inputOutputObjectToFloat32Arrays","objectToFloat32Array","mse","getTypedArrayFn","NeuralNetwork","inputSize","outputSize","activation","leakyReluAlpha","beta1","beta2","epsilon","setActivation","calculateDeltas","updateTrainingOptions","outputs","layerIndex","nodeIndex","prevSize","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","formattedInput","activeLayer","activeWeights","activeBiases","activeOutputs","activeSize","merged","validateTrainingOptions","setLogMethod","logTrainingStatus","trainPattern","calculateTrainingError","prepTraining","trainingTick","thawedTrain","trainError","activeOutput","activeError","activeDeltas","nextLayer","currentSize","currentOutputs","nextWeights","nextDeltas","currentErrors","currentDeltas","activeDelta","activeChanges","change","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","currentChangesLow","currentChangesHigh","currentWeights","currentBiases","currentBiasChangesLow","currentBiasChangesHigh","gradient","changeLow","changeHigh","momentumCorrection","pow","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","_formatOutput","addKeys","misclasses","errorSum","actual","expected","misclass","jsonLayerWeights","layerWeights","jsonLayerBiases","layerBiases","getTrainOptsJSON","needsVar","nodeHandle","weightsArray","subNodeIndex","checkKeys","find","layersAsMath","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","calcChanges","previousChange","previousOutput","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getMSE","_addMSE","_divideMSESum","getChanges","changeBiases","weightedSum","texturizeInputData","calcDeltas","targets","changesPropagate","previousOutputs","previousChanges","biasesPropagate","outputTextures","texturizeOutputData","RecurrentConnection","Recurrent","previousLayers","_layerSets","usedHiddenLayerOutputIndex","findInputLayer","layerSettings","previousHiddenLayerOutput","_hiddenLayerOutputIndices","layerSet","_outputConnection","_connectLayers","_connectLayersDeep","initializeDeep","runInputs","lastLayerUsed","lastLayerSet","Matrix","rows","columns","ix","fromArray","iterate","rowIndex","columnIndex","getWeight","getDelta","setWeight","setDelta","callbacks","RandomMatrix","DataFormatter","maxThreshold","isSetup","buildCharactersFromIterable","buildTables","addInputOutput","addUnrecognized","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characters","iteratable","characterIndex","charactersLength","character","addCharacters","charactersTable","indexTable","characterTable","unrecognized","toIndexesValue","toIndexes","indices","toCharacters","addSpecial","dataFormatter","fromAllPrintable","datum","validateAndCast","flatArray","specialIndexes","special","specialIndex","toIndexesInputOutput","formatDataIn","product","addB","allOnes","cloneNegative","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","leftIndex","rightIndex","multiplyB","leftRowRoot","rightRow","backPropagateValue","multiplyElementB","reluB","rowPluck","rowPluckIndex","rowBase","rowPluckB","sigmoidB","mwi","softmax","maxVal","tanhB","Equation","forwardFn","backpropagationFn","inputValue","inputRow","runIndex","logProbabilities","probabilities","maxI","maxv","maxix","sampleI","inputRange","regc","clipval","maxPredictionLength","RNN","seal","isInitialized","equations","allMatrices","equationConnections","outputConnector","model","mapModel","hiddenLayersModel","getHiddenLayer","hiddenSize","equation","inputMatrix","previousResult","lastHiddenSize","equationConnection","initialLayerInputs","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrices","runs","log2ppl","bindEquation","inputIndex","inputMax","equationIndex","predictTargetIndex","backpropagateIndex","stepCache","numClipped","numTot","matrixIndex","ratioClipped","rawInput","isSampleI","temperature","checkRunnable","previousIndex","outputMatrix","probs","formatDataOut","jsonString","previousConnectionIndex","m","connection","matrixToString","stateIndex","matrixOrigin","toInner","fnParts","fnBodyParts","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","trainInput","backpropagate","GRU","getGRUHiddenLayer","getGRUEquation","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","ArrayLookupTable","ioValue","rnnDefaults","RNNTimeStep","dataShape","runArray","runArrayOfArray","runObject","runArrayOfObject","forecastArray","forecastArrayOfArray","forecastArrayOfObject","lastOutput","rnnTrainDefaults","setSize","verifySize","predictTarget","trainArrayOfArray","toTable2D","toInputTable2D","inputArray","toArrayShort","toObjectPartial","toArrays","requireInputOutputOfOne","formatArray","formatArrayOfArray","formatArrayOfObject","formatArrayOfObjectMulti","formatArrayOfDatumOfArray","formatArrayOfDatumOfObject","formatArrayOfArrayOfArray","formatArrayOfArrayOfObject","formatArrayOfDatumOfArrayOfArray","formatArrayOfDatumOfArrayOfObject","errorCount","typedValue","typedInput","typedOutput","forceForecast","GRUTimeStep","LSTM","getHiddenLSTMLayer","getLSTMEquation","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","TrainStream","Writable","objectMode","neuralNetwork","dataFormatDetermined","floodCallback","doneTrainingCallback","on","finishStreamIteration","write","chunk","enc","emit","addFormat","firstDatum","drawInput","pixelX","pixelY","radius","fontSize","fontClassName","svg","className","drawNeuron","hidden","drawOutput","drawBackwardConnections","lineY","neuralNetworkToInnerSVG","previousSize","drawRecurrentConnections","recurrentLine","moveX","moveY","rnnToInnerSVG","wrapOuterSVG","svgBody","getRNNSizes","net","checkSizes","brain","likely","TypeError","maxProp","entries","recurrent","utilities","toSVG","mergedOptions","getNeuralNetworkSizes","getRecurrentLayers","getFeedForwardLayers"],"mappings":"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"}